9
1
0
2

v
o

N

1
2

]

V

C

.

s

c

[

3
v
0
8
5
3
0

.

9
0
9
1

:

v

i

X

r

a

Extreme Low-Resolution Activity Recognition
with Spatial-Temporal Attention Transfer

Yucai Bai
Qiang Dai
Sichuan University
Lingxi Li
Zhengming Ding
Indiana University-Purdue University Indianapolis

Long Chen∗
Sun Yat-sen University
Qin Zou
Wuhan University

Abstract

Activity recognition on extreme low-resolution videos,
e.g., a resolution of 12×16 pixels, plays a vital role in far-
view surveillance and privacy-preserving multimedia anal-
ysis. Low-resolution videos only contain limited informa-
tion. Given the fact that one same activity may be rep-
resented by videos in both high resolution(HR) and low
resolution (LR), it is worth studying to utilize the rele-
vant HR data to improve the LR activity recognition.
In
this work, we propose a novel Spatial-Temporal Attention
Transfer (STAT) for LR activity recognition. STAT can ac-
quire information from HR data by reducing the attention
differences with a transfer-learning strategy. Experimen-
tal results on two well-known datasets, i.e., UCF101 and
HMDB51, demonstrate that, the proposed method can ef-
fectively improve the accuracy of LR activity recognition,
and achieves an accuracy of 58.12% on 12×16 videos in
HMDB51, a state-of-the-art performance.

1. Introduction

In recent years, a large number of methods have been
proposed for action recognition, and achieved considerable
success, e.g., Two-Stream [21], C3D [22], and LRCN [6],
etc. Most of these methods assume that, there is enough
information in the region of raw pixels where the activi-
ties take place in image sequence.
In such cases, action
recognition models can well capture and represent the mo-
tions of the movement and classify the actions. However,
this assumption does not always hold in practice due to the
existing of low-resolution and low-quality videos. For in-
stance, in the situation of far-view surveillance, there are
often only few pixels for the targets (human in most cases)
in the scene. Two examples are shown in the top row in
Figure 1. For action recognition in such LR videos, cur-

∗ The corresponding author is Long Chen (chenl46@mail.sysu.edu.cn)

Figure 1. Activities in HR images and LR images.
In far-view
videos, activities can only be captured with very few pixels. In
quality-degraded videos, activities are represented with blur LR
images on a privacy-preserving purpose.

rent popular methods [21] [22] [6] cannot obtain acceptable
accuracy.
Another situation that will generate LR videos is in
privacy-preserving surveillance or data recording. With the
advancement of mobile Internet and smartphones, videos
can be easily captured and quickly spread. Meanwhile, av-
erage persons would have more concerns about the privacy
preserving on the web. While videos are captured by ubiq-
uitous cameras and stored in the cloud server, the concern
is more urgent. Many technologies have been developed
to deal with it, e.g., selective image blurring [2], obscur-
ing [17], etc. In fact, a straightforward and effective way
to address this problem is to directly collect LR data in the
recording, which can also reduce the video-recording cost
and the storage capacity. However, vision tasks on such LR

4321

Brushing TeethQuality-degraded VideosAppling Eye MakeupSoccer PenaltySur(cid:31)ngFar-view Videos 
 
 
 
 
 
videos may be limited. For example, the bottom of Fig-
ure 1 shows two images that are degraded for the privacy-
preserving purpose. The face in the LR image is less than 25
pixels, which leads to a great challenge for face recognition.
The situation for action recognition is a little better since
motion information can be extracted from image sequences.
Many previous works [4] [26] [18] achieved considerable
good results on 12×16 resolution videos, in detection of
some speciﬁc actions. When the area corresponding to an
activity is reduced to a few pixels, the part requiring atten-
tion will change. The amount of data in LR image, e.g.,
12×16, is about 0.2% of that in the original 256×340 im-
ages. With enough pixels, conventional algorithms can ob-
tain low-level features by capturing geometry and texture
details, and a large number of convolution operations and
supervision signals from labels can be used to produce high-
dimensional features. However, extremely LR data often do
not have enough details for low-level features construction,
which brings a bottleneck to the tradition.
How to extract effective information only from few pix-
els? An effective strategy is to explore the corresponding
HR data. We make the assumption that, for a same ac-
tion, the motion patterns in the LR videos have some re-
lation with the motion patterns in the HR videos. The fea-
tures of an action in the LR video may be clustered in one
space, while features in the HR video may be clustered in
another spaces. However, the distributions of these fea-
tures in different space may be related using transfer learn-
ing. As such, action recognition in LR videos can beneﬁt
from the information of HR videos. Numerous previous re-
searches [20] [19] [4] [18] [26] adopted this assumption for
the higher recognition accuracy in LR video.
We also observe that, most of the existing methods for
LR action recognition cannot achieve satisfactory accuracy
for real-world applications. One possible reason is that they
do not obtain the most useful information from few pixels
and do not focus on the most informative area. The inessen-
tial areas seldom contain any vital clues for the recogni-
tion.
In our strategy, these essential details could be ob-
tained from the HR data. We focus on the more informative
area, which can help do the recognition task. For example,
the temporal intervals of swinging a golf club and the ar-
eas corresponding to the activity are more meaningful than
others in determining whether it is an action of playing golf.
Based on the discussion above, we explore the spatial-
temporal attention transfer model to help recognize actions
at extremely low resolution in this paper. Speciﬁcally, we
propose a novel knowledge transfer model to utilize more
accurate signals from a powerful teacher network. The
teacher network uses higher resolution image frames as
input, and helps a student network to distinguish which
frames are more effective and which parts are more infor-
mative for action recognition. We evaluate the proposed

method is evaluated on UCF101 and HMDB51, and achieve
very promising results.
The contributions of this work are summarized as fol-
lows:
• A simple yet effective algorithm is proposed for
measuring the spatial-temporal attention in LR
videos.
This algorithm is incorporated into the
whole knowledge-transfer model for improving the LR
action-recognition performance.
• A new strategy for dynamical weights adjusting is put
forward, and an unsupervised method for data aug-
mentation is presented to leverage various resolution
supervisor signals.
• The proposed method is evaluated on several low-
resolution activity benchmarks by comparing with the
state-of-the-art methods. An accuracy of 58.12% is ob-
tained on 12×16 HMDB51 videos.

2. Related Work

Action recognition has developed rapidly in recent years.
Mainstream algorithms can be divided into mainly three
categories. The ﬁrst kind of algorithm is characterized
by taking two streams as input and then estimating them
jointly. In [21], RGB and optical ﬂow data were used for
prediction respectively, and then joint estimation was car-
ried out. The second approach only uses the continuous
RGB frames as input and 3D convolution to extract fea-
tures to predict. C3D [22] used only a eight-layer neu-
ral network to achieve high precision. The subsequent
R2PLUS1D [23] and P3D [16] , factorizing the 3D con-
volutional enablers into separate spatial and temporal com-
ponents, had achieved better results. The third type usually
uses the recurrent neural network in the temporal dimen-
sion. LRCN [6] constructed a recurrent sequence model,
which is directly connected to the new visual convolutional
network. In our proposed method, we use RESNET-34 [8]
and R2PLUS1D [23] as feature extraction backbones.
Teacher-student learning, as one of the distillation meth-
ods, has also been used in recent years. Typically, the
teacher network has a better performance or more abundant
data, which can help student network to grasp the key fea-
tures better. For example, [7] used teacher network to help
student network with faster inference speed but poorer per-
formance to select training data to enhance accuracy.
In
speech recognition, [14] proposed a condition-robust unsu-
pervised domain adaptation method, which uses this novel
learning paradigm for unsupervised learning. [1] proposed
a more intensive teacher-student network by using sparse
picture frames as input. However, in the ﬁeld of LR action
recognition, there is no related practice.

4322

There are also some related achievements in the ﬁeld
of LR recognition.
[25] put forward this problem ﬁrst,
then tried several conventional methods and developed an
improved model for this problem.
[12] used the shared
network to identify diverse resolution data respectively and
then reduced the differences in the mimic layer to improve
the accuracy further.
[11] expanded the LR image to a
higher quality one through deconvolution to better recog-
nize human faces.
In the ﬁeld of LR action recognition,
[4] proposed a semi-coupled, later-sharing network, which
makes student network have more accurate weights by shar-
ing part of the weights of both the teacher network and the
student network. [18] used the embedding technique of dif-
ferent downsampling methods, which uses to make the net-
work embed this map to its weights. [15] applied the self-
attention technique and learn the soft targets encoded by
teacher work, rather than learning more effective attention
as we did. However, these methods do not focus on the
informative area, which is one of the reasons they can not
achieve satisfactory accuracy.

3. The Approach

In this section, we describe our proposed methods to rec-
ognize multi-class actions from low-resolution videos in de-
tails. Speciﬁcally, we ﬁrst introduce the acquisition of at-
tention from a single model, which illustrates how to cap-
ture the distribution of attention in the abundant data. Then,
we describe the spatial-temporal attention transfer process,
where the powerful model imparts more effective attention
to the weaker counterpart as a supervision signal. Finally,
we present some strategies in the training stage to solve the
over-ﬁtting and help the network learn easier from multiple
monitoring signals.

3.1. Attention Acquisition

The premise of attention transfer is to obtain the atten-
tion of the network at ﬁrst. Attention is obtained from two
aspects, spatial dimension and temporal dimension. Spa-
tial attention refers to the spatial area from which the model
classiﬁes the action, might contain the human and corre-
sponding paraphernalia, such as golf club or soccer. At-
tention in the temporal dimension refers to the keyframes
containing important action feature in the whole videos.
Our method are based on the assumption, which is the
numerical value of the output represents the degree of at-
tention of the network. The weights in the network and the
output of each layer ultimately lead to the ﬁnal result.

3.1.1 Spatial Attention Deﬁnition

The output of each intermediate layer holds the clue of 2D
spatial relationships. What we need to do is to construct a
mapping from the 3D output to a 2D positional relationship.

Figure 2. Visualization of the spatial attention in the ”skiing” cat-
egory. Yellow and red represent greater and less attention, respec-
tively. The ﬁrst row is the original input, and the following rows
are the attention results from each RESNET block.

The three-dimensional output is H × W × C , which repre-
sents C feature planes with spatial dimensions H × W . The
patterns captured by different channels vary based on differ-
ent details. However, there are always features of speciﬁc
areas included in a large number of channels. Based on the
feature of the above 3D tensor, we put all the values of the
channels together for consideration. More speciﬁcally, we
deﬁne the following activation-based spatial attention map:

C(cid:88)

Fx,y (O) =

|Ox,y ,i |

(1)

i=1

where O means the 3D output of network and x, y , i repre-
sents the speciﬁc position of the output. The visualization
of spatial attention is shown in Figure 2.

3.1.2 Temporal Attention Deﬁnition

In order to distinguish the importance of different time seg-
ments, we divide a whole video into K segments (In our
experiment section, we set K = 4 and 8). We use the seg-
ment as the basic unit and sample one or some consecutive
frames from it as the input of the model. After the inde-
pendent classiﬁcation, we ﬁnally perform video-level pre-
diction on all the results of K segments.
In order to capture the importance of each interval, dif-
ferent from TSN [24], we specially designed a temporal
attention module (TAM) to estimate corresponding impor-
tance, as shown in Figure 3. Speciﬁcally, we use the fea-
ture of each interval as input and stack all features together
to perform two fully-connected layers, 64-dimensional and
K-dimensional, respectively.

4323

3.2. Attention Transfer

We use two networks, teacher network (T-Net) and stu-
dent network (S-Net), and adopt the teacher-student learn-
ing (TS Learning) to implement the training process. Be-
sides, we propose a Spatial-Temporal Attention Transfer
(STAT) loss to capture the gap in attention between the two
networks.

3.2.1 Teacher-Student Learning (TS Learning)

We construct the same network of teachers and students
with different resolution as input. More speciﬁcally, we in-
put the HR data (256 × 340) into the T-Net and the LR data
(12 × 16) which are sampled from the HR data into S-Net.
By continuously forcing the intermediate processing output
of the two networks, spatial attention and temporal atten-
tion, students can better grasp what the network should pay
attention to. The learning process is shown in Figure 4.

3.2.2 Spatial-Temporal Attention Transfer Loss

The proposed STAT loss is composed of the spatial attention
loss, temporal attention loss and cross-entropy loss.
For computing spatial attention loss, we obtain both spa-
tial attention from T-Net and S-Net ﬁrstly. Then, we min-
imize the output of the same index layer of the two net-
works to reduce the spatial attention difference. T-Net with
the more supervisory signal and better performance is more
sensitive to the same action, so that the area that T-net pays
more attention is more likely to be the key information of
action judgment. The network can notice the key parts bet-
ter that lead to a higher performance.
However, the parameters of T-Net, supervision signal for
the S-Net, are very complex. If all weights are used as su-
pervisory signals, the whole network will run slowly when
calculating losses. Besides, the T-Net must have parameters
that deal with its own features, which may interfere with the
TS learning. So we need to pick the most representative out-
put. In our experiments, we choose each RESNET block
output as attention. To make the difference more obvi-
ous, we square the subtracted data in the spatial dimension.
Let S, T, and W S , W T denote student, teacher and their
weights respectively. Let also Res denote the RESNET
block outputs pairs of both networks for which we want to
transfer attention maps. Then we can deﬁne the following
SAT(Spatial Attention Transfer) loss:

(cid:13)(cid:13)(cid:13)(cid:13)(cid:13) Qi

S

(cid:88)

i∈Res

LSAT =

S(cid:13)(cid:13)Qi
T(cid:13)(cid:13)Qi
− Qi
S = vec(F (Ai
S )) and Qi
T = vec(F (Ai

(cid:13)(cid:13)2

(cid:13)(cid:13)2

T

(cid:13)(cid:13)(cid:13)(cid:13)(cid:13)P

(2)

where Qi
T )) are the
i-th pair of student and teacher attention maps in vectorized

Figure 3. Temporal Attention Module. Features of each interval
are put together to generate their respective attention values, which
are then multiplied by the original features to produce the ﬁnal
result.

The model
takes the results of the feature extrac-
tion module as input, processes data through two fully-
connected (FC) layers, and ﬁnally normalizes the data re-
sults to [0,1] interval through a softmax layer. The output
is assumed as the importance of each time segment, which
is multiplied by the corresponding features to get the ﬁnal
video-level result.

3.1.3 Training Setting

A general backbone is needed to extract features from the
input data.
In our experiment section, we used both the
light 2D convolution and the more powerful 3D convolu-
tion. RESNET-34 was used as a 2D convolution network,
which only has 3.6 ∗ 109 FLOPs.Therefore, we could run
more intervals at the same time in a limited memory. For
the higher accuracy requirement, we also used a slow yet
powerful R2PLUS1D model. Its strong performance bene-
ﬁts from its novel structure replacing the 3D convolutional
ﬁlters size N × t × d × d with a (2+1)D RESNET block
consisting of M spatial 2D ﬁlters of size N × 1 × d × d and
N temporal convolutional ﬁlters of size M × t × 1 × 1.
We use stochastic gradient descent as our loss optimiza-
tion method. The pertained weight from IMAGENET [5]
or KINETICS [10] is also used as our initialization weight
to accelerate our convergence process. For a better conver-
gence, we also use Batch Normalization(BN), which esti-
mates the activation mean and variance within each batch
and uses them to transform these activation values into a
standard Gaussian distribution. For reducing computing
cost, our network freezes the BN layer expect the ﬁrst layer
and uses clip gradient.

4324

 64-d FC layerOUTPUTFEATURESS OF INTERVALSTEMPORAL ATTENTION MODULETEMPORAL ATTENTION ACQUISITION MULTIPLICATION K-d FC layerFigure 4. Overview of spatial-temporal attention transfer. Given an K segments extracted from a video (K is 3 in the ﬁgure), T-Net and
S-Net generate spatial attention and time attention values simultaneously. The proposed STAT loss is used to force the attention difference
reduce.

form, respectively, and P refers to norm type (in the exper-
iments we use P = 2).
For temporary attention loss, we focus on the discrep-
ancy between the output of two TAM, which is designed for
observing the role of different time zones in the ﬁnal result
easily. So we can concentrate on the period with more pre-
cise behaviour information. In this loss function, we sub-
tract the output from the two TAM, so as to force S-Net to
pay more attention to the importance interval, which is easy
to judge the action category. Besides the ﬁnal FC layer, we
also designed a 64-dimensional hidden layer to magnify the
differences in intermediate processing. In order to make the
difference more signiﬁcant, we use the same method as spa-
tial attention loss and use the square method to deal with the
difference. We deﬁne the following TAT(Temporal Atten-
tion Transfer) loss as:

where f c denotes the FC layer outputs pairs in temporal
attention module.
Finally, in addition to the two loss functions mentioned
above, we also add cross-entropy loss (CE) to help the net-
work be sensitive to the ﬁnal results. Cross-Entropy is often
used as a loss function for classiﬁcation problems. Its value
represents the difference between the ﬁnal output and the
label in video-level prediction. We deﬁne the total loss as:

Ltotal = WCE × LCE + WSAT × LSAT + WT AT × LT AT

(4)
where WCE , WSAT , WT AT are the weight of cross-
entropy loss, the weight of spatial attention loss, and the
weight of temporal attention loss, respectively.

3.3. Training Strategies

(3)

In the training stage, there are two challenges. One is the
over-ﬁtting due to the insufﬁcient labelled data. Another

4325

(cid:88)

j∈f c

(cid:13)(cid:13)(cid:13)(cid:13)(cid:13)(cid:13) Qj
S(cid:13)(cid:13)(cid:13)Qj
(cid:13)(cid:13)(cid:13)2

S

LT AT =

(cid:13)(cid:13)(cid:13)(cid:13)(cid:13)(cid:13)

P

− Qj

T(cid:13)(cid:13)(cid:13)Qj
(cid:13)(cid:13)(cid:13)2

T

SATSATSATT-NetT-NetS-NetSATTATT-NetS-NetS-Net`#%*)(%)!))#)$#)'#(')"%$'!))#)$#)'#('#!'(*!)……SATSATSATSATT-NetS-NetSATSATSATSATT-NetS-Netproblem is the contradiction between the importance of the
supervisory signal and the difﬁculty of training. Speciﬁ-
cally, the deeper output is crucial for ﬁnal prediction but
hard to learn because that is based on the output of shal-
lower layers.

3.3.1 Unsupervised Training Method

Compared to single-frame pictures, video analysis applica-
tion requires more data to conclude the temporal informa-
tion. Moreover, the LR model can not directly utilize ex-
isting pre-training weights because of its different low-level
features from existing common datasets. We have no choice
but to collect more data to train the network. However, la-
belling video data manually is an extremely tedious task.
In our training, we use an unsupervised approach to meet
the huge demand for data. That is using the ﬁxed-parameter
T-Net to encode data as the soft label. There are certain re-
quirements for training data; that is, the main body of action
is human and contains a complete action rather than cut-off
video. Under such requirements, the most easily available
datasets are the raw video of SPORTS-1M [9] and KINET-
ICS [3], which not contains manually annotating informa-
tion. In our unsupervised training, we only use SAT and
TAT in the loss function. We use this unsupervised train-
ing method before the formal training to use extra data to
overcome the over-ﬁtting.

3.3.2 Rolling Weights

How to solve the contradiction between training difﬁculty
and its importance? We consider that the key to solve this
problem is adopting different training strategies in different
stages. When we use a certain proportion in our experi-
ments, 10%-20%-30%-40% in spatial part and 33%-66% in
temporal part, the ﬁnal result is unsatisfactory. The reason
for the undesirable result is that the deeper layer, which ac-
counts for a large proportion, has a large gap between the
two networks and hard to learn. It is necessary to modify
the weights of the shallower layer rather than the weights of
the deeper layer itself because deep information is based on
the shallow part of the networks due to the different resolu-
tion. The features that need to be extracted from the shal-
low layers of the two networks are not very close. To solve
this problem, we propose a training method to update the
weights, that is, the ratio of different parts changes with the
training. Speciﬁcally, we alternately use (40%, 30%, 20%,
10%), (30%, 40%, 20%, 10%), (20%, 30%, 40%, 10%),
and (10%, 20%, 30%, 40%) in spatial part and alternately
use (66%, 33%) and (33%, 66%) in temporal part in every
10 epochs. The purpose is to enable the network to learn
the weight better behind.

4. Experiments

In this section, we evaluate and report the results of the
proposed method of action recognition on extremely low-
resolution videos.

4.1. Dataset and Setting

We use the common dataset for multi-class action clas-
siﬁcation, e.g. UCF101 and HMDB51, and the down-
sampling is taken.
HMDB dataset is one of the most famous public datasets
for action classiﬁcation, which contains more than 7000
videos with 51 different action categories. The dataset is
composed of the videos mostly collected from YouTube,
including movie scenes. We resized the HMDB videos to
12 × 16 using the average downsampling, while also in-
clude the lens blur term and the Gaussian noise term. For
the videos with non-3:4 aspect ratio, a centre cropping was
used. The standard evaluation setting of the dataset using
3 provided training/testing splits was followed, performing
the 51-class video classiﬁcation.
The UCF101 dataset contains 101 classes and 13320
video clips. We follow the evaluation scheme of the
THUMOS13 challenge and adopt the three training/testing
splits for evaluation. Each split in UCF101 includes about
9.5K training and 3.7K test videos. For a more natural
comparison, we used the same down-sampling strategy as
HMDB51, including the resize resolution and centre crop.
The low-resolution UCF101 has never been used in other
LR action recognition methods before because the size of
the people in the dataset is so small that it is difﬁcult to iden-
tify them compared to HMDB51. After considering this
reason, we still choose this dataset because we can achieve
a sufﬁcient accuracy in HR data. (our prec@1 can reach
90.56% using R2PLUS1D-18 on UCF101, and the same
structure can only reach 62% of prec@1 on HMDB51). T-
Net accuracy plays a crucial role in teacher-student archi-
tecture.

4.2. Implementation Details

In our experiments, we used two backbones as
the feature extraction module, RESNET-34(2D) and
R2PLUS1D(3D) for different reasons. In the network rep-
resented by RESNET-34 with the 2D image as input, the
memory usage is small, which means that the video of the
same duration can be divided into more intervals in a limited
memory. In this way, the interval can contain more precise
information, and temporal attention information is more ac-
curately transmitted to S-Net. For the R2PLUS1D, it uses
continuous RGB frames as input, which usually takes up
more video memory, but it can handle complex information
better. In our practice, the input for RESNET-34 is a single-
frame image, and the whole video is divided into eight in-

4326

Table 1. The results on 12 × 16 UCF101 dataset using RESNET-
34 for different weights. The ﬁrst four rows are ﬁxed weight, and
the last row is the rolling weight. The term Overall, SAT, TAT de-
note CE-SAT-TAT, Res1-Res2-Res3-Res4 ( the output from each
RESNET block), FC1-FC2( the output in temporal attention mod-
ule ), respectively.

Weight Type
Fixed
Fixed
Fixed
Fixed
Fixed
Rolling

Overall
1/7 - 4/7 -2/7
4/7 - 1/7 -2/7
1/3 - 1/3 -1/3
1/3 - 1/3 -1/3
1/3 - 1/3 -1/3
-

SAT
1/4-1/4-1/4-1/4
1/15-2/15-4/15-8/15
1/4-1/4-1/4-1/4
1/15-2/15-4/15-8/15
0-0-0-1
-

TAT
1/2-1/2
1/3-2/3
1/2-1/2
1/3-2/3
0-1
-

Prec@1
45.70%
44.96%

46.60%

46.15%
45.78%

46.90%

tervals. For R2PLUS1D-18, the input from four intervals
containing ﬁve consecutive frames each.
Our entire training process is as follows: First, a single
model training is conducted, including T-Net with HR data
as input and S-Net with LR data as input, then a teacher-
student model joint training is performed.
In the single
model training process, we use the mini-batch SGD to learn
the network parameters, and the batch size is set to 256 and
momentum is set to 0.9. The initial learning rate is 0.001,
and the learning rate is divided by 10 for every 20 epochs.
The ﬁrst ﬁve epochs use the warm-up technique to ﬁnd the
direction of the gradient descent better. A total of 50 epochs
were performed. Only cross-entropy was used as the loss
function. We use the techniques of location jittering, hor-
izontal ﬂipping, cropping, and scale jittering for data aug-
mentation.
TS leaning is trained in the second stage. The weight
of the three parts has a signiﬁcant effect on the ﬁnal result.
We conducted related experiments on the above problems,
and the experimental results are shown in Table 1. We can
see that, for the ﬁxed weight, the best results are obtained
when CE, SAT, and TAT are both 1/3. This can indicate
that both SAT and TAT play a supporting role for the ﬁ-
nal result. For the weights in the middle of the SAT, the
accuracy of the gradually-increase weight (1/15-2/15-4/15-
8/15) is lower than the equal weight (1/4-1/4-1/4-1/4) of the
weight at different overall weights, which shows that the
weight setting directly according to the importance of the
ﬁnal result does not achieve the best. The reason is the deep
processing depends on the output of the shallow network.
TAT weight setting is the same as the SAT. The rolling
weight exceeds all the ﬁxed weights because the contradic-
tion between the importance of different weights and the
dependence of adjacent weights is partly solved.

4.3. Visualization of Spatial-Temporal Attention

In this subsection, we visualize the spatial attention and
temporal attention in the inference. In order to have more
segments and make the effect of the temporal attention
module more prominent, we used less-memory required
RESNET-34 as the backbone. In the spatial attention visu-

Figure 5. This ﬁgure consists of three parts. From top to bottom,
T-Net results, unimproved S-Net results, and the improved S-Net
are shown. The ﬁrst row is the original image, the second row is
the visualization of spatial attention of last RESNET block, and
the bar in the bottom is the visualization of temporal attention.

Figure 6. Video representation embedding visualizations of unim-
proved S-Net and improved S-Net on UCF101 using t-SNE. Each
item is visualized as one point and colors denote different actions.

alization, we randomly sample one frame from correspond-
ing intervals as input. Then the input goes through four
RESNET blocks. We perform the average operation on the
output of each RESNET block in the channel dimension.
Then the result is resized to the shape of the input by the
bilinear interpolation, and we multiply it by the original im-
age.
In the temporal attention visualization, we put 512-
dimensional features of each interval into the FC layers. Fi-
nally, the attention value for each interval is generated. We
colored the temporal attention value in the bottom bar.

As shown in Figure 5, we can identify that, the action
is jumping. In the result of T-Net, the spatial attention is
around the human, and the improved S-Net also obtains the
information. However, the original algorithm focuses on
the whole input. For temporal attention, the unimproved
models can not capture the key segments, which play a vital
role in the ﬁnal classiﬁcation.

4327

*#"%'$+(#))#)ORISATTATORISATTAT"%'$+(#)ORISATTAT"$'"%$')#)!(("%$')#)Table 2. The results on different resolution UCF101 dataset with
our spatial-temporal attention transfer are shown.

Resolution
(6 × 8)

(12 × 16)
(18 × 24)
(24 × 32)

Before
Prec@1
32.24
42.79
51.28
54.53

Before
prec@5
53.76
67.64
73.12
79.06

After
Prec@1
36.43
46.66
53.07
55.65

After
Prec@5
56.43
67.75
75.69
79.54

4.4. Visualization of Video Representation Embed-
ding

Figure 6 further shows the t-SNE [13] visualization of
embedding of video representation learnt by original model
and improved model. More speciﬁcally, we randomly select
9K videos from UCF101 and the video-level representation
is then projected into two-dimensional space using t-SNE.
Our method aiming at focusing on the more informative part
is better semantically separated than the original one.

4.5. Comparison at Different Resolutions

Even though most of the relevant experiments are based
on 12 × 16 resolution, we still believe that experiments at
multiple resolutions are necessary. For two reasons, more
resolution comparison experiments are beneﬁcial for bal-
ancing trade-off issues with resolution and accuracy, in
practice. Another reason is that we prove that our method is
valid at all different resolutions.
As shown in Table 2, our method works at different
resolutions, and the accuracy gradually decreases with in-
creasing resolution. The increase in prec@1 is 4.19%,
3.87%, 1.79%, and 1.12%, respectively. The improvement
of prec@5 is much smaller, from 2.67% to 0.48%. As the
resolution increases, the accuracy of action recognition and
spatial-temporal attention are more accurate. Therefore, the
effect of TS learning decreases.

4.6. Exploration Study

In this subsection, we focus on our proposed learning
methods and its best practices. In this experiment, we used
two backbones, RESNET-34 and R2PLUS1D-18, respec-
tively. We only used RGB images as input in this experi-
ment. We did the relevant experiments to get the best prac-
tices. We used the 0.5-0.5-0, 0.5-0-0.5, 0.33-0.33-0.33 to
represent SAT, TAT, SAT+TAT respectively.
In addition,
we used the training strategy of rolling weight to make the
weights easier to learn. Unsupervised learning is also added
to the training because it avoids over-ﬁtting.
As can be seen in Table 3, the performance is increased
by 5.37% and 5.97%, respectively, under RESNET-34 and
R2PLUS1D-18, after applying our proposed method. The
latter is better than the former because T-Net has a higher
accuracy (78.82% in RESNET-34, 90.56% in R2PLUS1D-

Table 3. The results on the 12 × 16 UCF101 dataset with our
spatial-temporal attention transfer. The student row is the baseline
of the entire experiment. We used the SAT, TAT and SAT+TAT,
respectively. Besides we use rc and ut present the rollings weights
and unsupervised training method, respectively.

RESNET-34 R2PLUS1D-18

Teacher
Student
SAT
TAT
SAT+TAT
SAT+TAT+rc
SAT+TAT+rc +ut

78.82%

90.56%

42.79%
45.76%
44.97%
46.66%
46.85%

48.03%

48.95%
52.03%
50.59%
52.34%
53.21%

54.92%

18), which can provide more information. For the same
reason, the latter network is also relatively stronger with LR
data than the former one. After applying our proposed spa-
tial and temporal attention loss function, the accuracy has
been improved obviously on each network, from 42.79%
to 46.66% on RESNET-34 and from 48.95% to 52.34% on
R2PLUS1D-18.
It is worth noting that the TAT module
has a smaller boost on R2PLUS1D-18 than on RESNET-
34. This is because of the different amount of intervals,
and RESNET-34 can have a more precise range for sam-
pling frames. The proposed rolling weight to solve the con-
tradiction between the importance of different weights and
the dependence of adjacent weights also helps with accu-
racy in both networks. Finally, unsupervised learning par-
tially solved the problem of over-ﬁtting by adding unlabeled
data, which has been increased by 1.13% in RESNET-34
and 1.71% in R2PLUS1D-18, respectively.

4.7. Comparison with the State-of-the-Art

After assembling all the techniques described, we test it
on the challenging datasets: 12 × 16 HMDB51. The results
are summarized in Table 4. It is not difﬁcult to observe
that our results outperform all state-of-the-art approaches
on LR action classiﬁcation. For the fairness of comparison,
we used the same experimental setting as [15], which is
64 frames of the optical stream and RGB images were used
as input, and we used R2PLUS1D-34 as our backbone, the
performance of which is close to I3D.

5. Conclusion

In this paper, we used spatial-temporal attention trans-
fer to help student network to improve accuracy in LR data.
The accuracy of out approach achieved the state-of-the-art
level, 58.12% on 12 × 16 HMDB51. This is primarily due
to the more precise spatial-temporal attention, which is pro-
vided by teacher network. The unsupervised learning for
data augmentation and the learning strategy of the rolling
weights signiﬁcantly improved the ﬁnal accuracy.

4328

Table 4. Performance of our model compared to the state-of-the-
art results on the 12 × 16 HMDB51 dataset. R2PLUS1D-34 is
used as the backbone.

Approach
PoT [20] (CVPR’15)
ISR [19] (AAAI’17)
Simonyan, et al [4] (WACV’17)
Ryoo, et al [18] (AAAI’18)
Xu, et al [26] (WACV’18)
I3D [3] (CVPR’17)
Didik, et al (I3D) [15] (ICCVW’19)
R2PLUS1D-34 [23] (CVPR’18)
Ours(R2PLUS1D-34)

Accuracy
26.57%
28.68%
29.20%
37.70%
44.96%
52.61%
57.84 %
52.29%

58.12%

References

[1] Shweta Bhardwaj, Mukundhan Srinivasan, and Mitesh M
Khapra. Efﬁcient video classiﬁcation using fewer frames.
In Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, pages 354–363, 2019.
[2] Michael Boyle, Christopher Edwards, and Saul Greenberg.
The effects of ﬁltered video on awareness and privacy.
In
Proceedings of the 2000 ACM conference on Computer sup-
ported cooperative work, pages 1–10. ACM, 2000.
[3] Joao Carreira and Andrew Zisserman. Quo vadis, action
recognition? a new model and the kinetics dataset. In The
IEEE Conference on Computer Vision and Pattern Recogni-
tion (CVPR), July 2017.
[4] Jiawei Chen, Jonathan Wu, Janusz Konrad, and Prakash Ish-
war. Semi-coupled two-stream fusion convnets for action
recognition at extremely low resolutions. In 2017 IEEE Win-
ter Conference on Applications of Computer Vision (WACV),
pages 139–147. IEEE, 2017.
[5] J. Deng, W. Dong, R. Socher, L.-J. Li, K. Li, and L. Fei-Fei.
ImageNet: A Large-Scale Hierarchical Image Database. In
CVPR09, 2009.
[6] Jeffrey Donahue, Lisa Anne Hendricks, Sergio Guadarrama,
Marcus Rohrbach, Subhashini Venugopalan, Kate Saenko,
and Trevor Darrell. Long-term recurrent convolutional net-
works for visual recognition and description.
In Proceed-
ings of the IEEE conference on computer vision and pattern
recognition, pages 2625–2634, 2015.
[7] Shiming Ge, Shengwei Zhao, Chenyu Li, and Jia Li. Low-
resolution face recognition in the wild via selective knowl-
edge distillation. IEEE Transactions on Image Processing,
28(4):2051–2062, 2018.
[8] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.
Deep residual learning for image recognition. In Proceed-
ings of the IEEE conference on computer vision and pattern
recognition, pages 770–778, 2016.
[9] Andrej Karpathy, George Toderici, Sanketh Shetty, Thomas
Leung, Rahul Sukthankar, and Li Fei-Fei. Large-scale video
classiﬁcation with convolutional neural networks.
In Pro-
ceedings of the IEEE conference on Computer Vision and
Pattern Recognition, pages 1725–1732, 2014.
[10] Will Kay, Joao Carreira, Karen Simonyan, Brian Zhang,
Chloe Hillier, Sudheendra Vijayanarasimhan, Fabio Viola,

4329

Tim Green, Trevor Back, Paul Natsev, et al. The kinetics hu-
man action video dataset. arXiv preprint arXiv:1705.06950,
2017.
[11] Pei Li, Loreto Prieto, Domingo Mery, and Patrick J Flynn.
On low-resolution face recognition in the wild: Compar-
isons and new techniques. IEEE Transactions on Informa-
tion Forensics and Security, 14(8):2000–2012, 2019.
[12] Ze Lu, Xudong Jiang, and Alex Kot. Deep coupled resnet
for low-resolution face recognition. IEEE Signal Processing
Letters, 25(4):526–530, 2018.
[13] Laurens van der Maaten and Geoffrey Hinton. Visualiz-
ing data using t-sne. Journal of machine learning research,
9(Nov):2579–2605, 2008.
[14] Zhong Meng, Jinyu Li, Yifan Gong, and Biing-Hwang
Juang. Adversarial teacher-student learning for unsupervised
domain adaptation. In 2018 IEEE International Conference
on Acoustics, Speech and Signal Processing (ICASSP), pages
5949–5953. IEEE, 2018.
[15] Didik Purwanto, Rizard Renanda Adhi Pramono, Yie-Tarng
Chen, and Wen-Hsien Fang. Extreme low resolution action
recognition with spatial-temporal multi-head self-attention
and knowledge distillation. In The IEEE International Con-
ference on Computer Vision (ICCV) Workshops, Oct 2019.
[16] Zhaofan Qiu, Ting Yao, and Tao Mei. Learning spatio-
temporal representation with pseudo-3d residual networks.
In proceedings of the IEEE International Conference on
Computer Vision, pages 5533–5541, 2017.
[17] Nisarg Raval, Animesh Srivastava, Kiron Lebeck, Landon
Cox, and Ashwin Machanavajjhala. Markit: Privacy mark-
ers for protecting visual secrets. In Proceedings of the 2014
ACM International Joint Conference on Pervasive and Ubiq-
uitous Computing: Adjunct Publication, pages 1289–1295.
ACM, 2014.
[18] Michael S Ryoo, Kiyoon Kim, and Hyun Jong Yang. Ex-
treme low resolution activity recognition with multi-siamese
embedding learning. In Thirty-Second AAAI Conference on
Artiﬁcial Intelligence, 2018.
[19] Michael S Ryoo, Brandon Rothrock, Charles Fleming, and
Hyun Jong Yang. Privacy-preserving human activity recog-
nition from extreme low resolution.
In Thirty-First AAAI
Conference on Artiﬁcial Intelligence, 2017.
[20] Michael S Ryoo, Brandon Rothrock, and Larry Matthies.
Pooled motion features for ﬁrst-person videos, 2015.
[21] Karen Simonyan and Andrew Zisserman. Two-stream con-
volutional networks for action recognition in videos. In Ad-
vances in neural information processing systems, pages 568–
576, 2014.
[22] Du Tran, Lubomir Bourdev, Rob Fergus, Lorenzo Torresani,
and Manohar Paluri. Learning spatiotemporal features with
3d convolutional networks. In Proceedings of the IEEE inter-
national conference on computer vision, pages 4489–4497,
2015.
[23] Du Tran, Heng Wang, Lorenzo Torresani, Jamie Ray, Yann
LeCun, and Manohar Paluri. A closer look at spatiotemporal
convolutions for action recognition.
In Proceedings of the
IEEE conference on Computer Vision and Pattern Recogni-
tion, pages 6450–6459, 2018.

[24] Limin Wang, Yuanjun Xiong, Zhe Wang, Yu Qiao, Dahua
Lin, Xiaoou Tang, and Luc Van Gool. Temporal segment net-
works: Towards good practices for deep action recognition.
In European conference on computer vision, pages 20–36.
Springer, 2016.
[25] Zhangyang Wang, Shiyu Chang, Yingzhen Yang, Ding Liu,
and Thomas S Huang. Studying very low resolution recogni-
tion using deep networks. In Proceedings of the IEEE Con-
ference on Computer Vision and Pattern Recognition, pages
4792–4800, 2016.
[26] Mingze Xu, Aidean Sharghi, Xin Chen, and David J Cran-
dall.
Fully-coupled two-stream spatiotemporal networks
for extremely low resolution action recognition.
In 2018
IEEE Winter Conference on Applications of Computer Vision
(WACV), pages 1607–1615. IEEE, 2018.

4330

