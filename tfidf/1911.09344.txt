CONVOLUTIONAL MIXTURE DENSITY RECURRENT NEURAL NETWORK FOR
PREDICTING USER LOCATION WITH WIFI FINGERPRINTS

Weizhu Qian, Fabrice Lauri, Franck Gechter

CIAD, Univ. Bourgogne Franche-Comt ´e
UTBM, F-90010, Belfort, France

9
1
0
2

v
o

N

1
2

]

G

L

.

s

c

[

1
v
4
4
3
9
0

.

1
1
9
1

:

v

i

X

r

a

ABSTRACT

Predicting smartphone users activity using WiFi ﬁnger-
prints has been a popular approach for indoor positioning
in recent years. However, such a high dimensional time-
series prediction problem can be very tricky to solve. To
address this issue, we propose a novel deep learning model,
the convolutional mixture density recurrent neural network
(CMDRNN), which combines the strengths of convolutional
neural networks, recurrent neural networks and mixture den-
sity networks. In our model, the CNN sub-model is employed
to detect the feature of the high dimensional input, the RNN
sub-model is utilized to capture the time dependency and the
MDN sub-model is for predicting the ﬁnal output. For vali-
dation, we conduct the experiments on the real-world dataset
and the obtained results illustrate the effectiveness of our
method.
Index Terms— MDN, CNN, RNN, WiFi ﬁngerprints, in-
door positioning

1. INTRODUCTION

Location based service (LBS) has a signiﬁcant meaning for
applications like location-based advertising, outdoor/indoor
navigation and social networking, etc. With the help of the
advancement of the smartphone technology in recent decades,
smartphone devices are integrated with various built-in sen-
sors, such as GPS modules, WiFi modules, cellular modules,
etc. By acquiring the data from these sensors, researchers
are capable of studying human activities. Among these re-
search topics, user location analysis and prediction has been
a research foci. There are several possible classes of meth-
ods can be applied for such subjects. Since the GPS equip-
ment can provide relatively accurate outdoor position infor-
mation, GPS-based methods are favored by many researchers
[1], [2]. However, such methods are not suitable for indoor
positioning. A more applicable approach is to make use of
WiFi ﬁngerprints of the smartphone devices. In this case, re-
ceived signal strength indicator (RSSI) of WiFi access points
scanned by the mobile phones is adopted to identify the loca-
tions of the users.

Email: weizhu.qian@utbm.fr

In literature, researchers have exploited various kinds
of machine learning techniques, both conventional learning
methods and deep learning, on location recognition and pre-
diction with WiFi ﬁngerprints. In the previous work of [3],
[4], [5], [6], [7], the researchers adopted several conven-
tional machine learning methods for classiﬁcation, clustering
and regression tasks, for instances, decision trees, K-nearest
neighbors, naive Bayes, neural networks, K-means, the afﬁn-
ity clustering algorithm, Gausian Process, etc. Deep learning
based methods, such as convolutional neural networks ),
autoencoders and recurrent neural networks also have been
applied in WiFi based positioning methods. Note that in real
world, a building may be equipped with a relatively large
number of WiFi hotpots to provide good wireless connec-
tions. Consequently, this leads to the issue of high dimen-
sionlity. Naturally, some deep-learning based dimension-
reduction methods like auto-encoders can be used before the
classiﬁcation or prediction tasks [8], [9], [10].
In our work, we attempt to utilize the WiFi ﬁngerprints to
predict the accurate user location. This task can be regarded
as a high dimensional time-series prediction. The training in-
puts of our model are the RSSI value vectors and the training
targets are the future coordinate values (2D). Though, some
previous researchers have used CNNs or RNNs for accurate
indoor localization [11], [9], [12], we argue that the models
with ordinary euclidean-distance loss functions (for instance,
mean square errors) are not capable of overcoming the serve
nonlinearity of the data caused by the signal-fading and multi-
path effects, WiFi signals are not always stable [12].
In contrast with the aforementioned methods, we devise
an innovative hybrid deep learning structure, the convolu-
tional mixture density recurrent neural network (CMDRNN).
Compared to other existing models, ﬁrst, our approach does
not need to pre-train an autoencoder to reduce the dimension,
instead, we deploy a CNN structure to detect the feature of
input. Second, we make use of a RNN to exhibit the temporal
dynamics behavior of user trajectory. As for the ﬁnal output
of the network, we employ a MDN structure to calculate the
conditional probability density rather than predict the output
directly as other conventional neural networks. Therefore, our
model consists of three sub-models, a CNN sub-structure, a
RNN sub-structure and a MDN sub-structure, which enables

 
 
 
 
 
 
our model to tackle complicated time-series prediction prob-
lem as the WiFi ﬁngerprints based location prediction. The
main contributions of our work are summarized as follows.
1) In order to predict user location with WiFi ﬁngerprints,
we devise a novel hybrid deep-learning model, in which the
advantages of CNNs, RNNs and MDNs are merged. 2) We
conduct the evaluation experiments on a real-world dataset to
test our model and compare other models as well. The ﬁnal
results show the superiority of our method.
The reminder of the paper is organized as follows.
In
Section 2, the proposed model is introduced. In Section 3
presents the validation experiments and the results with the
real user data. Finally, we draw the conclusions and discuss
about the possible future work in Section 4.

2. PROPOSED METHOD

2.1. Proposed Model Overview

Combined with the merits of three different deep neural net-
works, we devise a novel deep neural network architecture,
which is called the convolutional mixture density recurrent
neural network (CMDRNN). The proposed model is com-
posed of an one-dimensional convolutional neural network, a
recurrent neural network and a mixture density network. The
whole structure of our model is demonstrated in Fig 1.

2.2. 1D Convolutional Neural Network Sub-structure

The ﬁrst step of our approach is to capture the feature of the
high dimensional input. In practice, we ﬁnd that, for each vec-
tor, only a few elements has real meaningful values, whereas
most elements are not activated. It is easy to understand be-
cause the smartphone only can detect very limited number of
WiFi access points at each time in a building with a consid-
erable number of WiFi access points. As a consequence, the
feature of the input is hard to be captured. To deal with this
issue, we resort to the powerful deep-learning technique, con-
volutional neural networks (CNNs) [13]. CNNs are widely
used for tasks such as imagine processing, natural language
processing and sensor signal processing. In our case, the in-
puts are vectors, therefore, a CNN structure whose convo-
lutional layers and max pooling layers are both one dimen-
sional, is incorporated into our model.

2.3. Recurrent Neural Network Sub-structure

Recurrent neural networks (RNNs) are widely used for
analysing time-series issues, such as natural language process
(NLP), computer vision and signal processing [14]. Unlike
the hidden Markov model (HMM) [15], RNNs can capture
higher order dependency and has relatively less expensive
computation. The state transition of a RNN can be expressed
follow.

ht = σh (Wh ∗ xt + Uh ∗ yt−1 + bh )

(1)

where, ht is the hidden state, σh is the activation function,
Wh is the hidden weight, xt is the input, Uh is the output
weight, and bh is the bias. The output of a conventional RNN
can be expressed as follow.

yt = σy (Wy ∗ ht + by )

(2)

where, yt is the output of RNN, σy is the activation func-
tion, Wy is the output weight and by is the bias.
Furthermore, a special variant of RNNs, the long short-
term memory network (LSTM) [16] can solve the long-term
dependency problem during learning process, which makes
RNN even more powerful. More recently, the researchers pro-
posed a type of LSTM, the gated recurrent unit (GRU) [17],
which has almost the same accuracy as LSTM but less com-
puting cost. In the following experiments, we will compare
these three RNN structures as the sub-model of our approach.
The loss function is the mean square error (MSE) be-
tween RNN outputs and the training targets. Usually, such
a MSE loss function is enough for many prediction problems.
However, for our case, this type of loss function is not robust
enough because the inputs and the outputs of our model have
very complicated nonlinear relationship.

2.4. Mixture Density Network Sub-structure

A traditional neural network with a distance-based loss func-
tion can be optimized by a gradient descent-based method.
Generally, such scheme can perform quite well on the prob-
lems that can be described by a deterministic function f (x),
i.e., each input only corresponds to a output with one possible
target value. However, for some stochastic problems like our
case, one input may have more than one possible output val-
ues. Hence, this type of problems are better to be described
as a conditional distribution p(Y |X = x) than a deterministic
function Y = f (x).
To tackle this issue, intuitively, we can replace the origi-
nal distance-based loss function with a conditional probability
function, for a regression task, the Gaussian distribution can
be a appropriate choice. Moreover, using the mixed Gaus-
sian distributions instead of a single Gaussian can improve
the representation capacity of the model. Based on that, the
researcher proposed the mixture density networks (MDNs)
[18]. In contrast with traditional neural network, the output of
MDNs is the parameters a set of mixed Gaussian distributions
and the loss function become the conditional probabilities of
given inputs. As a result, the optimization process is to min-
imize the negatived log probability. Hence, the loss function
can be described as follow:

P (yt |xt ) =

πk P (yt |xt ; θk )

(3)

K(cid:88)

k=1

Fig. 1. Convolutional Mixture Density Recurrent Neural Network.

with (cid:80)K
where, πk is the assignment portion for each sub-distribution,
k=1 πk = 1, (0 < πk < 1), and K is the total mixture
models number. θk is the internal parameters of the base mix-
ture distributions. For Gaussian distribution, θk = {µk , σk },
µk and σk are the means and variances, respectively. Now,
we can draw yt samples according to Eq. (3) instead of com-
puting yt directly based on Eq. (2). In fact, Eq. (2) will be
used as the input of the MDN to depict the state transition.
Thus, as the training process is ﬁnished, we can take use of
the mixed Gaussian distributions to sample the target values
according to the given inputs. To this end, we can use the
maximum likelihood estimation (MLE), i.e, the means of the
distributions are taken as the ﬁnal prediction. In summation,
the overall training process is depicted in Algorithm 1.

Algorithm 1 Algorithm

Input: X (RSSI values)
Output: Y (coordinates)
1: while e < max epoch do
while i < batch num do
h1 ← max pool h0
f ← ﬂatten h1

h0 ← C onv1d(X )

2:
3:
4:
5:
6:

7:
8:
9:
10:

(cid:46) convolutional operation

ht ← σh (Wh ∗ ft + Uh ∗ yt−1 + bh )

(cid:46) update
hidden states
θ ← σy (Wy ∗ ht + by ) (cid:46) compute network output
θk ← split θ (cid:46) assign mixture density parameters
minimize the loss function: −p(yt |xt ; θ)

end while
11: end while

12:
13: Y ∼ p(yt |xt ; θ)

return Y

(cid:46) ﬁnal output

3. EXPERIMENTS AND RESULTS

The implementation details of our model are illustrated in Ta-
ble 1.
In the proposed model, the CNN sub-network con-
sists a convolutional layer, a max-pooling layer and a ﬂatten
layer. The RNN sub-structure includes a hidden layer with
200 neurons. The MDN sub-model is composed of a hid-
den layer and an output layer. The mixture model number for
the MDN is 30, and each mixture has 5 parameters, the 2D
means, variances and the mixture portions. As for the opti-
mizer, according to [19], for very nonstationary optimization
problems, RMSProp [20] can outperform Adam [21], thus we
choose RMSProp as the optimizer.
In order to test our model on the WiFi ﬁngerprints based
sequential location prediction task, we conduct a series of
experiments on the real-world dataset. We select two WiFi
RSSI-coordinate paths from the Tampere dataset [22]. This
dataset includes a set of sequential RSSI value vectors with
the input dimension of 489. The detected RSSI values range
from −100 dm to 0 dm while the undetected WiFi access
points are ﬁlled with value of 100. Each vector has its own
corresponding 2D coordinates labels. Therefor, for our task,
the input is the RSSI values vector at current time point and
the modeling target is the coordinates at next time point.
Fig. 2 and Fig. 3 show the prediction results of our pro-
posed model. We also varies the mixture numbers in the
MDN sub-model to ﬁnd the optimal mixture number, which
is 30. The results are demonstrated in Fig. 4. Further, we
compare our CMDRNN model to a set of deep learning ap-
proaches, RNN, CNN + RNN and RNN + MDN. The results
are demonstrated in Table 3. From the experimental results,
we can see that our proposed mode signiﬁcantly improves the
modeling accuracy compared to other deep learning methods

Sub-network
CNN
CNN
CNN
RNN
MDN
MDN

Table 1. Proposed model implementation details
Layer
Hyperparameter
convolutional layer
ﬁlter number: 100; stride: 2
max pooling layer
neuron number: 100
ﬂatten layer
neuron number: 100
hidden layer
memory length: 5; neuron number: 200
hidden layer
neuron number: 200
output layer
5*mixed Gaussians number (5*30)
Optimizer: RMSProp; learning rate: 1e-3

Activation function
sigmoid
relu
relu
sigmoid
leaky relu
-

Fig. 2. Path 1 sampling prediction result by CMDRNN.

Fig. 4. Prediction results by varying mixture numbers in the
MDN (bars represent the standard deviations).

Table 2. Path prediction results (root mean square error)
Method
Path 1
Path 2
RNN
CNN+RNN
RNN+MDN
CMDRNN(Vanilla-RNN)
CMDRNN(LSTM-RNN)
CMDRNN(GRU-RNN)

29.36 ± 1.61
34.26 ± 3.04
23.86 ± 5.50
8.26 ± 1.31
7.38 ± 0.89
6.25 ± 0.80

31.61 ± 0.74
36.75 ± 6.17
23.58 ± 2.29
10.17 ± 0.72
9.26 ± 0.31
8.67 ± 0.23

Fig. 3. Path 2 sampling prediction result by CMDRNN.

on sequential user location prediction. Moreover, the GRU-
based CMDRNN model has the best performance among the
CMDRNN models.

4. CONCLUSIONS AND PERSPECTIVES

In this paper, we attempt to tackle the WiFi ﬁngerprint-based
user position prediction problem. In contrast with existing ap-
proaches, our solution is a novel hybrid deep-learning model.
The proposed model is composed of three sub-deep neural

networks, a CNN, a RNN and a MDN. This unique deep ar-
chitecture takes advantage of the strengths of three deep learn-
ing models, which allows us to predict user location with high
accuracy. For the validation, we tested our model on the real-
world dataset, and the ﬁnal results proves the effectiveness of
our approach.
For the future work, we plan to exploit other deep genera-
tive models, for instance, variational autoencoders, Besysian
neural network and normalising ﬂows, for the potential appli-
cations on the WiFi ﬁngerprint-based positioning problems.
We should be aware that the labeled data is not always easy
to acquire. As a matter of fact, in many cases, the available
dataset are unlabeled. Hence, for the future work, we plan
to investigate the semi-supervised learning techniques for hu-
man activity study.

for accurate rssi indoor localization,” arXiv preprint
arXiv:1903.11703, 2019.

[13] Y. LeCun, L. Bottou, Y. Bengio, P. Haffner et al.,
“Gradient-based learning applied to document recog-
nition,” Proceedings of the IEEE, vol. 86, no. 11, pp.
2278–2324, 1998.

[14] J. L. Elman, “Finding structure in time,” Cognitive sci-
ence, vol. 14, no. 2, pp. 179–211, 1990.

[15] A. Krogh, B. Larsson, G. Von Heijne, and E. L.
Sonnhammer, “Predicting transmembrane protein topol-
ogy with a hidden markov model: application to com-
plete genomes,” Journal of molecular biology, vol. 305,
no. 3, pp. 567–580, 2001.

[16] F. A. Gers, J. Schmidhuber, and F. Cummins, “Learning
to forget: Continual prediction with lstm,” 1999.

[17] J. Chung, C. Gulcehre, K. Cho, and Y. Bengio, “Em-
pirical evaluation of gated recurrent neural networks on
sequence modeling,” arXiv preprint arXiv:1412.3555,
2014.

[18] C. M. Bishop, “Mixture density networks,” 1994.

[19] M. Arjovsky, S. Chintala, and L. Bottou, “Wasserstein
gan,” arXiv preprint arXiv:1701.07875, 2017.

[20] T. Tieleman and G. Hinton, “Lecture 6.5-rmsprop: Di-
vide the gradient by a running average of its recent
magnitude,” COURSERA: Neural networks for machine
learning, vol. 4, no. 2, pp. 26–31, 2012.

[21] D. P. Kingma and J. Ba, “Adam: A method for stochastic
optimization,” arXiv preprint arXiv:1412.6980, 2014.

[22] E.-S. Lohan, J. Torres-Sospedra, P. Richter, H. Lepp-
koski, J. Huerta, and A. Cramariuc, “Crowdsourced wiﬁ
database and benchmark software for indoor position-
ing,” Data set], Zenodo. doi, vol. 10, 2017.

5. REFERENCES

[1] S.-B. Cho, “Exploiting machine learning techniques for
location recognition and prediction with smartphone
logs,” Neurocomputing, vol. 176, pp. 98–106, 2016.

[2] C. Yu, Y. Liu, D. Yao, L. T. Yang, H. Jin, H. Chen, and
Q. Ding, “Modeling user activity patterns for next-place
prediction,” IEEE Systems Journal, vol. 11, no. 2, pp.
1060–1071, 2017.

[3] S. Bozkurt, G. Elibol, S. Gunal, and U. Yayan, “A
comparative study on machine learning algorithms for
indoor positioning,” in 2015 International Symposium
on Innovations in Intelligent SysTems and Applications
(INISTA).
IEEE, 2015, pp. 1–8.

[4] A. Cramariuc, H. Huttunen, and E. S. Lohan, “Cluster-
ing beneﬁts in mobile-centric wiﬁ positioning in multi-
ﬂoor buildings,” in 2016 International Conference on
Localization and GNSS (ICL-GNSS).
IEEE, 2016, pp.
1–6.

[5] B. Ferris, D. Fox, and N. D. Lawrence, “Wiﬁ-slam us-
ing gaussian process latent variable models.” in IJCAI,
vol. 7, no. 1, 2007, pp. 2480–2485.

[6] B. F. D. H ¨ahnel and D. Fox, “Gaussian processes for
signal strength-based location estimation,” in Proceed-
ing of robotics: science and systems, 2006.

[7] S. Yiu and K. Yang, “Gaussian process assisted ﬁnger-
printing localization,” IEEE Internet of Things Journal,
vol. 3, no. 5, pp. 683–690, 2015.

[8] M. Nowicki and J. Wietrzykowski, “Low-effort place
recognition with wiﬁ ﬁngerprints using deep learning,”
in International Conference Automation.
Springer,
2017, pp. 575–584.

[9] X. Song, X. Fan, C. Xiang, Q. Ye, L. Liu, Z. Wang,
X. He, N. Yang, and G. Fang, “A novel convolu-
tional neural network based indoor localization frame-
work with wiﬁ ﬁngerprinting,” IEEE Access, vol. 7, pp.
110 698–110 709, 2019.

[10] K. S. Kim, S. Lee, and K. Huang, “A scalable deep neu-
ral network architecture for multi-building and multi-
ﬂoor indoor localization based on wi-ﬁ ﬁngerprinting,”
Big Data Analytics, vol. 3, no. 1, p. 4, 2018.

[11] M. Ibrahim, M. Torki, and M. ElNainay, “Cnn based
indoor localization using rss time-series,” in 2018 IEEE
Symposium on Computers and Communications (ISCC).
IEEE, 2018, pp. 01 044–01 049.

[12] M. T. Hoang, B. Yuen, X. Dong, T. Lu, R. Wes-
tendorp, and K. Reddy, “Recurrent neural networks

