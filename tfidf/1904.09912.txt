9
1
0
2

v
o

N

1
2

]

h
p

-

t

n

a

u
q

[

4
v
2
1
9
9
0

.

4
0
9
1

:

v

i

X

r

a

Cliﬀord algebras, Spin groups and qubit trees

Alexander Yu. Vlasov

Abstract

Representations of Spin groups and Cliﬀord algebras derived from
structure of qubit trees are introduced in this work. For ternary
trees the construction is more general and reduction to binary trees is
formally deﬁned by deleting of superﬂuous branches. Usual Jordan-
Wigner construction also may be formally obtained in such approach
by bringing the process up to trivial qubit chain (“trunk”). The meth-
ods can be also used for eﬀective simulations of some quantum circuits
corresponding to the binary tree structure.

1

Introduction

In previous work [1] about eﬀective modeling of quantum state transfer in
qubit chains a question was raised in conclusion about a problem to generalize
suggested approach to arbitrary graphs. The presented work provides exten-
sion of some methods used for qubit chains in [1] to qubit trees together with
appropriate applications. It is also interesting from point of view of general-
izations of Jordan-Wigner transformations to trees and more general graphs
discussed in other works [2, 3, 4, 5].
The approach developed in this work associates representations of Cliﬀord
algebras and Spin group with ternary and binary qubit trees. It may be more
naturally deﬁned by ternary trees with transition to binary trees using some
“pruning”. The application of similar ternary trees for fermion-to-qubits
mapping was also discussed recently in [6].
Some preliminaries about Cliﬀord algebras, Spin groups with application
to construction of quantum gates are introduced in Sec. 2. Representations
of Cliﬀord algebras and Spin groups using ternary qubit trees and deter-
ministic ﬁnite automata are deﬁned in Sec. 3 together with description of a
“pruning process,” i.e. producing new trees by deleting of the branches. The

1

 
 
 
 
 
 
procedure can be also used for construction of binary qubit trees introduced
in Sec. 4. The binary trees can be considered as more natural generalization
of some methods touched upon earlier in [1] due to possibility to use some
supplementary tools such as annihilation and creation operators discussed
in Sec. 5. The applications of the binary qubit trees to constructions of
eﬀectively modeled quantum circuits are outlined in Sec. 6 with some exam-
ples those can be appropriate both for theory of quantum computations and
communications.

2 Preliminaries

Let us recollect standard properties and deﬁnitions for Cliﬀord algebras and
Spin groups [7, 8] necessary in next sections. Brieﬂy speaking, for real or
complex vector spaces V = Fn (where F = R or C) Cliﬀord algebras Cl(Fn )
provide a linear embedding e of a vector v ∈ V with property
(cid:0)e(v)(cid:1)2
= −|v|21,
(1)
where 1 is the unit of the algebra. For a vector v ∈ V with coordinates vk
the embedding is written

n(cid:88)

v = (v1 , . . . , vn ),

e(v) =

vk ek ,

(2)

k=1

where ek are called generators of Cliﬀord algebra. The possibility to work
with complex vector spaces V = Cn is desirable for many models below, but
some deﬁnitions and examples may be more convenient to introduce for real
case V = Rn . The Minkowski (pseudo-Euclidean) norm is not considered
here and for Euclidean case Eq. (1) may be rewritten using Eq. (2)
{ej , ek } .
= ej ek + ek ej = −2δj k 1,

j, k = 1, . . . , n

(3)

Due to relations Eq. (3) maximal number of diﬀerent (up to sign) products
of generators may be 2n and Cliﬀord algebra with such maximal dimension
is called universal and denoted further C(cid:96)(n, F). The natural non-universal
(cid:18)0 1
examples are algebra of Pauli matrices
1 0

(cid:18)0 −i

0
0 −1

(cid:18)1

(cid:19)

,

σ y =

,

σ z =

(cid:19)

(cid:19)

σx =

(4)

0

i

2

for V = C3 and quaternions for 3D real space V = R3 . One generator in
such a case could be dropped to satisfy universality condition, but it may be
unjustiﬁed due to structure of a model.
In general [7], for complex space C2m with even dimension the universal
Cliﬀord algebra C(cid:96)(2m, C) may be represented as 2m × 2m complex matrix
algebra. Generators of C(cid:96)(2m, C) are often expressed using so-called Jordan-
Wigner [9] representation
e2k−1 = i σ z ⊗ · · · ⊗ σ z
e2k = i σ z ⊗ · · · ⊗ σ z

⊗ σx ⊗ 1 ⊗ · · · ⊗ 1
⊗ σ y ⊗ 1 ⊗ · · · ⊗ 1

(k = 1, . . . , m).

m−k

k−1

(5)

(cid:124)
(cid:124)

(cid:123)(cid:122)
(cid:123)(cid:122)

m−k

(cid:125)
(cid:125)

(cid:124)
(cid:124)

(cid:123)(cid:122)
(cid:123)(cid:122)
(cid:19)

k−1

(cid:125)
(cid:125)

(cid:125)

∈ C(cid:96)(2m + 1, C),

In odd dimensions universal Cliﬀord algebra C(cid:96)(2m + 1, C) can be repre-
(cid:18) A 0
sented using block diagonal matrices
0 B
i.e., as direct sum of two C(cid:96)(2m, C), but irreducible representation with half
of maximal dimension also exists. It may be treated as C(cid:96)(2m, C) with the
additional generator is equal (up to possible imaginary unit multiplier) to
product of all 2m generators. For representation Eq. (5) it may be written
e2m+1 = i σ z ⊗ · · · ⊗ σ z
(5(cid:48) )

A, B ∈ C(cid:96)(2m, C),

(6)

.

(cid:124)

(cid:123)(cid:122)

m

Such a case is essential for many examples considered below. Using 2m
generators Eq. (5) together with extra one Eq. (5(cid:48) ) denoted for certainty as
, j = 1, . . . , 2m+1 representation of generators e(2m+1)
respecting Eq. (6)
for universal Cliﬀord algebra C(cid:96)(2m + 1, C) may be written as

e(2m)
j

j

e(2m+1)
j

= σ z ⊗ e(2m)
j

,
j = 1, . . . , 2m + 1.
(7)
Group Spin(n) is deﬁned as subset of Cl(Rn ) generated by all possible
products of even number of elements e(r) with diﬀerent vectors r of unit
length

s = e(r1 )e(r2 ) · · · e(r2k ),

rj ∈ Rn ,

|rj | = 1,

j = 1, . . . , 2k .

(8)

3

The basic property of Spin(n) is representation of orthogonal group
s e(v) s−1 = e(v(cid:48)
), v(cid:48)
= Rsv, Rs ∈ SO(n),

(9)

i.e., Rs is some n-dimensional rotation.
It should be noted, that pair of
elements ±s ∈ Spin(n) in Eq. (9) corresponds to the same transformation
Rs ∈ SO(n). Thus, Spin(n) group doubly covers SO(n).
Spin group also can be described as Lie group. The Cliﬀord algebra
Cln = Cl(Fn ) is Lie algebra with respect to bracket operation
[a, b] = ab − ba,
a, b ∈ Cln .

For Lie group Spin(n) the Lie algebra spin(n) is subalgebra of Cln with the
basis ej ek , 1 ≤ j < k ≤ n. The Lie algebra so(n) of orthogonal group is
isomorphic with spin(n).
The representation of Spin(n) groups using Cliﬀord algebras discussed
above has dimension 2n , but both spin(n) and so(n) have dimension only
n(n − 1)/2. The Lie algebraic approach is also important due to direct
relation with Hamiltonians of quantum gates [1, 10].
Spin group is A = exp(a), but in physical applications expressions with the
There is some subtlety, because exponential map producing element of
generators are often written with imaginary unit multiplier, e.g., a quantum
gate diﬀerent inﬁnitesimally from identity may be written [11]
δU = exp(i H ) (cid:39) 1 + i H ,
 → 0.

(10)

In such a case the imaginary units should also appear in anticommuta-
tors. For example, commutator algebra with bracket operation i [Ha , Hb ]
was adapted for proof of two-qubit gates universality [11]. The set of gates
represented in such a way is universal if elements H from Eq. (10) generate
entire Lie algebra of unitary group by commutators.
Similar Lie-algebraic approach with Cliﬀord algebras can be used both for
construction of universal and non-universal sets of two-qubit gates [10] . The
basis of Lie algebra spin(2m) is quadratic elements ej ek . The construction
of Lie algebra spin(2m) using Eq. (5) represents Spin(2m) group as some
subgroup of unitary group U(2m ).
Let us consider four consequent generators e2k−1 , e2k , e2k+1 , e2k+2 . Linear
combinations of six diﬀerent quadratic elements produced from the genera-
tors for particular representation Eq. (5) correspond to Hamiltonians of some

4

one- and two-qubit gates. With diﬀerent k it corresponds to non-universal
set of quantum gates on nearest-neighbor qubits often called “matchgates”
[12, 13].
The Jordan-Wigner representation of generators for Cliﬀord algebra
Eq. (5) is not unique. Alternative methods based on tree-like structures
are discussed in next sections.

3 Ternary Trees

Let us consider nine generators
˜e1 = iσx ⊗ σx ⊗ 1 ⊗ 1,
˜e2 = iσx ⊗ σ y ⊗ 1 ⊗ 1,
˜e3 = iσx ⊗ σ z ⊗ 1 ⊗ 1,
˜e4 = iσ y ⊗ 1 ⊗ σx ⊗ 1,
˜e5 = iσ y ⊗ 1 ⊗ σ y ⊗ 1,
˜e6 = iσ y ⊗ 1 ⊗ σ z ⊗ 1,
˜e7 = iσ z ⊗ 1 ⊗ 1 ⊗ σx ,
˜e8 = iσ z ⊗ 1 ⊗ 1 ⊗ σ y ,
˜e9 = iσ z ⊗ 1 ⊗ 1 ⊗ σ z .

Shorter notation is often used further, e.g.

˜e1 = iσx
˜e4 = iσ y
˜e7 = iσ z

1 σx
1 σx
1 σx

2 , ˜e2 = iσx
3 , ˜e5 = iσ y
4 , ˜e8 = iσ z

1 σ y
1 σ y
1 σ y

2 , ˜e3 = iσx
3 , ˜e6 = iσ y
4 , ˜e9 = iσ z

1 σ z
1 σ z
1 σ z

2 ,
3 ,
4 ,

(11)

(11(cid:48) )

where σµ
j denote Pauli matrix µ = x, y , z acting on qubit with index j .
The universal Cliﬀord algebra could be deﬁned using eight generators
instead of nine and product of all ˜ek is identity up to possible multiplier with
some power of imaginary unit denoted further as

ι ∈ {±1, ±i },

ι4 = 1.

(12)

The nine generators Eq. (11) derive natural threefold symmetries from
Pauli matrices. Generalization for arbitrary power of three using ternary
trees is discussed below. For the initial example Eq. (11) it corresponds to

5

four qubits nodes j = 1, . . . , 4 with root is j = 1 and three child nodes
j = 2, 3, 4 are associated with three generators each.
Let us recollect some properties of rooted trees [14, 15]. A node of n-ary
tree may have up to n children (subtrees), the nodes without any child are
called terminal nodes or leafs. In example above the generators are associated
with three terminal nodes. The level (cid:96) is deﬁned here as number of nodes
in the path from the root. The maximal level of nodes in a tree is denoted
further as L. In such a case the height of a tree is L − 1.
Ternary or binary tree with maximal number of nodes for given L is

of all other generators and may be dropped. Thus, any 3L − 1 generators
between 3L can be used as a basis of C(cid:96)(2mL , C).
The standard basis of C(cid:96)(2mL , C) is naturally expressed as 4mL tensor
products using Pauli basis, i.e., three Pauli matrices and 2 × 2 unit matrix.
Let us show, that the basis can be also represented (not necessary in unique
way) by products of ˜e(3L )
. It is again true for L = 1 and C(cid:96)(2, C). Let us
consider L + 1 for some L ≥ 1 with the basis of C(cid:96)(2mL , C) expressed by
. Arbitrary basic element b of C(cid:96)(2mL+1 , C) can be repre-
products of ˜e(3L )
sented as tensor products with mL+1 elements of Pauli basis. The product of
three generators for any j in Eq. (14) is

k

k

ι ˜e(3L )

j ⊗ 1 ⊗ · · · ⊗ 1

,

(cid:124)

(cid:124)

(cid:123)(cid:122)

3L

(cid:123)(cid:122)

3L−j

(cid:125)

(cid:125)

so ﬁrst mL terms in b can be rewritten by product of such triples due to
previous steps of recursion. Three possible products of two generators with
given j in Eq. (14) is

ι 1 ⊗ · · · ⊗ 1

⊗ σµ ⊗ 1 ⊗ · · · ⊗ 1

, µ = x, y , z ,

(cid:124)

(cid:123)(cid:122)

mL+j−1

(cid:125)

k

k

so remaining last 3L terms of b can be also expressed using products of such
pairs. So any element b of standard basis C(cid:96)(2mL+1 , C) with mL+1 = mL + 3L
terms is some product of ˜e(3L+1 )
.
It was also shown, that any element may be expressed (up to ι) as prod-
uct of other generators (and dropped). In such a case the construction cor-
responds to universal Cliﬀord algebra with remaining generators.
, k = 1, . . . , 3L has mL = (3L − 1)/2 terms in tensor
Each generator ˜e(3L )
product with only L (non-unit) Pauli matrices, because recursion Eq. (14)
be represented by directed ternary (cid:62)L -tree with ﬁrst qubit as root Figure 1.
append only one non-unit term for each level. The scheme of such terms may
Each triple of generators in Eq. (14) formally corresponds to path from the
root of the tree to leaf nodes.
For example, the tree with three levels represented on Figure 1 may illus-
trate structure of nine triples with twenty seven generators: ˜e(27)
1 = iσx
5 ,
2 = iσx
3 = iσx
4 = iσx
6 , . . . , ˜e(27)
27 = iσ z
The representation with tree provides yet another explanation of anticom-
mutativity of all ˜e(mL )
. Any two “branches” of tree have some common part

1 σx
2 σx
1 σ z
4 σ z
13 .

1 σx
2 σ y
5 , ˜e(27)

1 σx
2 σ z
5 , ˜e(27)

1 σx
2 σx

˜e(27)

j

7

Figure 1: Ternary (cid:62)L -tree with L = 3

corresponding to qubits with the same index and non-unit tensor factors,
but only last pair of Pauli matrices in common subsequences (corresponding
to “fork node” for pair of branches) may diﬀer. Such approach produces an
illustrative argument for generalization with arbitrary ternary trees.
Let us ﬁrst extend the model to provide formal deﬁnition using some
methods from theory of deterministic ﬁnite automata (DFA) [16, 17]. The
DFA model below uses extension [14] of ternary (cid:62)L -tree with basic nodes
representing qubits and three additional output nodes for each leaf. For more
general ternary trees discussed further number of children for any qubit node
is added up to three by new output nodes.
Each edge is marked by letters x, y , z representing possible transition be-
tween nodes, see Figure 2. The word (sequence of letters x, y , z ) correspond-
ing to path from the root to output nodes is recognized by DFA. The se-
quence of nodes generated by such transition represents generator expressed
as product of Pauli matrices indexed by number of node and letter, e.g.
xxx → σx
5 , . . . , xyz → σx
6 , . . . , zyx → σ z
12 , . . . , zzz → σ z
for Figure 2.
More generally, if some sequence s1s2 . . . sl of letters sk ∈ {x, y , z} for
k = 1, . . . , l is recognized by DFA and generates sequence of nodes
s1−→ n2

s2−→ · · · sl−1−−→ nl

sl−→ ol+1

1 σ z
4 σ z
13

1 σx
2 σx

1 σ y
2 σ z

1 σ y
4 σx

n1

(15)

8

Figure 2: DFA from ternary (cid:62)L -tree extended by leaf nodes

with root n1 = 1 and ol+1 are output nodes, the generator is

l(cid:89)

˜eol+1 = iσ s1
n1 σ s2

n2 · · · σ sl
nl = i

σ sk
nk .

(16)

k=1

The model with DFA and Eq. (16) may be applied for general ternary
for each node may be from zero to three. Let us start with ternary (cid:62)L -trees
tree for level l is not necessary equal to maximal one (L) and number of edges
discussed above with maximal number of qubit nodes mq = (3L − 1)/2 and
Ng = 3L anticommuting generators

Ng = 2mq + 1.

(17)

The Eq. (17) is also valid for any subtree.
Other ternary trees may be produced by recursive process of “pruning”
discussed below. Let us delete all nodes and generators of subtree ς originated
from node nς attached to parent node np by edge with label sp ∈ {x, y , z}.

9

1413zyxz12zyxy11zyxxz310zyxz9zyxy8zyxxy27zyxz6zyxy5zyxxx(cid:48)

(cid:48)

np .

(18)

k∈ς

(cid:89)

Let us also add new element including only initial common sequence of nodes
in products Eq. (16) coinciding for all deleted nodes of the subtree ς
1 · · · σ sp
˜eς = iσ s1
After any deletion new tree with all its subtrees also met Eq. (17), because
g = Ng − N ς
g + 1 = (2mq + 1) − (2mς
N
q + 1) + 1 = 2m
q + 1,
where N (cid:48)
g , m(cid:48)
q and N ς
g , mς
q denote parameters of new tree and deleted subtree
respectively.
The new element Eq. (18) anticommutes with all elements except deleted.
Let us also prove that product of N (cid:48)
g generators for new tree is ι1. For initial
ternary (cid:62)L -tree Eq. (17) is true and the product of all generators was already
calculated earlier. Any subtree of the (cid:62)L -tree is also ternary (cid:62)L(cid:48) -tree for some
L(cid:48) < L and product of all generators for such subtree is
˜ek = (˜eς )N ς
g (±1) = ∓˜eς ,
g is odd and (˜eς )2 = −1. So, after each cut product of all generators
because N ς
of deleted trees up to sign are equal with corresponding ˜eς and total product
of all elements is always ι1.
Let us prove, that for any tree with m(cid:48)
q qubit nodes obtained by such
pruning, the products of any subset with N (cid:48)
g − 1 = 2m(cid:48)
q generators may be
used as a basis of universal Cliﬀord algebra C(cid:96)(2m(cid:48)
q , C). Let us again for
simplicity start with all N (cid:48)
g = 2m(cid:48)
q + 1 generators, because any generator
may be expressed as product of other generators.
Let us note, that each deletion (for pruning) may be treated also as
two stage process: drop multipliers with Pauli matrices for excluded qubit
nodes from all products and remove duplicates from list of generators. The
approach is also correct for description of whole pruning as a series of conse-
quent deletions.
Let us consider ﬁnal tree as subtree of ternary (cid:62)L -tree. Any element
of standard basis of the Cliﬀord algebra for qubits from this subtree can
be represented by product of generators of initial tree.
If to drop Pauli
matrices for extra qubits from generators in such products the result may
only change sign, but now it includes only terms those equal with generators
of subtree.

Let us describe formal procedure for construction of generator from arbi-
trary ternary tree produced by the pruning described above:

10

• Let us extend the ternary tree by adding of terminal nodes, i.e. all
initial nodes with number of children nc < 3 should be connected with
3 − nc new leafs associated with generators.
• Now all non-terminal (initial) nodes have three output links those can
be marked by triple of labels x, y , z . Such a tree also may be considered
as a deterministic ﬁnite automaton (DFA).
• Any path from root to terminal node is described by analogue of
Eq. (15) with l is level of the node and generator for each terminal
node can be expressed as Eq. (16).
• Formally, possible sequences of letters ak ∈ {x, y , z} in Eq. (15) corre-
spond to words recognized by the DFA and any generator is represented
in such a way by product of Pauli matrices Eq. (16).

Let us summarize construction of the extended ternary tree for generators.
Rooted directed ternary tree is deﬁned by set of qubit nodes nk , k = 1, . . . , m
and directed links between pairs of nodes. Any node except root has one
parent and up to three children. The links are marked by labels x, y , z . Let
us ﬁrst for any qubit node d deﬁne an auxiliary operator (stub) rd . For root
node d = 1, r1 = i1 and for any child node d linked with a parent node p by
edge with a label µ ∈ {x, y , z}
µ−→ d :

(19)

p

rd = rpσµ
p .

Now for any node d with less than three children nc it is necessary to at-
tach 3 − nc (terminal) generator nodes g by new links for missing labels
µ ∈ {x, y , z}. The generator associated with each such node is deﬁned as

˜eg = ˜edˆµ = rdσµ
d ,
g = 1, . . . , 2m + 1,
d = 1, . . . , m.
(20)
The maximal total number of children for m qubit nodes is 3m and m − 1
nodes are already used as edges between qubits (because all qubits except
root have one parent). Thus, number of generator nodes are
3m − (m − 1) = 2m + 1.

An alternative notation ˜edˆµ is introduced for convenience in Eq. (20).
Any generator may be expressed in such a way ˜eg = ˜edˆµ after choosing of

11

some map to set of consequent indexes g = g(d, µ), but number of elements
˜edˆµ is bigger, 3m > 2m + 1. Redundant ˜edˆµ correspond to products of
generators denoted earlier as ˜eς Eq. (18).

The Eq. (20) formalizes Eq. (16) used earlier without necessity to intro-
duce an enveloping (cid:62)L -tree.
For ternary (cid:62)L -tree DFA recognizes any sequences with L letters for 3L
generators are attached to leafs of qubit tree Figure 2. Number of nodes for
such a tree is (3L − 1)/2 Eq. (13).
For arbitrary tree with m nodes produced with method discussed above
number of generator leafs on extended tree is always 2m + 1. The product of
all generators is proportional to identity. It was already discussed that any
subset with 2m generators may be used for construction of universal Cliﬀord
algebra C(cid:96)(2m, C).
Let us consider yet another formal construction of C(cid:96)(2m + 1, C) without
necessity to get rid of one generator. Let us introduce an auxiliary node
with index zero and extend the set of generators to m + 1 qubits using
straightforward method, cf Eq. (7)
˜e(cid:48)
j = σ z ⊗ ˜ej ,
j = 1, . . . , 2m + 1.
(21)
0 and, thus, C(cid:96)(2m + 1, C) can
The products of 2m + 1 elements Eq. (21) is σ z
be generated by Eq. (21) using standard representation with block diagonal
matrices, see Eq. (6).
Even subalgebra C(cid:96)0 is generated by products of even number of gener-
ators ˜e(cid:48)
j Eq. (21). The cancellation of σ z
0 illustrates natural isomorphism
C(cid:96)0 (2m + 1, C) (cid:39) C(cid:96)(2m, C)

and it also produces representation of Spin(2m + 1) group by all 2m + 1
elements ˜ej ∈ C(cid:96)(2m, C).
For m > 1 the Spin(2m + 2) can be also represented. Let us consider
construction of Spin groups as Lie algebras [7] recollected in Sec. 2. In such
a case the element may be expressed as exponent of linear combinations of
quadratic terms ej ek .
Let us again introduce an extra zero node, but for alternative represen-
tation of 2m + 2 generators instead of Eq. (21)
j = σx ⊗ ˜ej ,
0 = σ y ⊗ 1 ⊗ · · · ⊗ 1.

j = 1, . . . , 2m + 1,

(22)

˜e(cid:48)(cid:48)

˜e(cid:48)(cid:48)

12

The products of two such elements are either 1 ⊗ (˜ej˜ek ) or σ z ⊗ ˜el , where
j, k , l = 1, . . . , 2m + 1. The quadratic terms can be expressed as block-
diagonal matrices Eq. (6). For m > 1 all ˜ej˜ek with j < k and ˜el are dif-
ferent and exponents of matrices with linear combination of such elements
exp(A) ∈ C(cid:96)(2m, C) can be used for construction of irreducible representa-
tion of Spin(2m + 2). It is not true for m = 1 due to ˜e1˜e2 = ˜e3 , e.g., for
quaternions or Pauli matrices σxσy = iσz .

A standard representation of Cliﬀord algebra may be considered as an
extreme case of pruning into a chain of z -linked nodes. At least two genera-
tors (x, y) are attached to each node with an additional one (z ) on the end.
Such a degenerate tree corresponds to 2m Jordan-Wigner generators Eq. (5)
(5(cid:48)(cid:48) )

k = 1, . . . , m

1 · · · σ z

k−1 σ y

k ,

e2k−1 = iσ z
k ,
e2k = iσ z
together with Eq. (5(cid:48) ) e2m+1 = iσ z

k−1 σx

1 · · · σ z
1 · · · σ z

2m .

4 Binary Trees

Binary (cid:62)L -trees may be introduced formally by deleting of all nodes attached
to z -edges of the ternary (cid:62)L -trees, see Figure 3.
The DFA extension for such binary tree produces three generators for
terminal qubit nodes with maximal level l = L, but only one generator for
other qubit nodes with l < L, see Figure 4.
The binary (cid:62)L -tree has 2L − 1 qubit nodes. With “enumeration along
levels” the nodes j = 1, . . . , 2L−1 − 1 have two children 2j and 2j + 1, except
leafs j = 2L−1 , . . . , 2L − 1, see Figure 5.
The stub operator rj Eq. (19) used for construction of generators Eq. (20)
may be constructed in the similar way as r1 = i1 and

r2j+1 = rj σ y

r2j = rj σx
j ,
j .
(23)
For binary tree with mq = 2L − 1 qubits discussed earlier the structure of
generators is described by extended ternary tree, see Figure 4. Qubits with
indexes j = 1, . . . , 2L−1−1 have only one generator node, but three generators
are linked to remaining 2L−1 terminal qubit nodes k = 2L−1 , . . . , 2L − 1 with
maximal level L. So total number of generators is
Ng = 2L−1 − 1 + 3 · 2L−1 = 2L+1 − 1 = 2mq + 1.

13

Figure 3: Binary tree obtained from ternary on Figure 2

Here the “redundant” notation for generators used in Eq. (20) may be more
illustrative

˜ej ˆz = rj σ z
j ,
˜ej ˆµ = rj σµ
j ,

j = 1, . . . , 2L−1 − 1,
j = 2L−1 , . . . , 2L − 1, µ = x, y , z .

(24a)

(24b)

For example of binary tree with L = 2 and three qubits, seven generators
may be written as

˜e1ˆz = iσ z
1 ,

˜e2ˆµ = iσx

1 σµ

2 ,

˜e3ˆµ = iσ y

1 σµ

3 , µ = x, y , z .

(25)

j

The sequence of terms with index z from Eq. (24) may be also extended
to all qubits. Let us denote ˇej or ˇe(Ng )
, j = 1, . . . , Ng = 2L+1 − 1 a consequent
indexing of all generators with ranges
 j = 2L−1 , . . . , 2L − 1.
j = 1, . . . , 2L − 1,
14

ˇe(Ng )
2j = ˜ej ˆx
ˇe(Ng )
2j+1 = ˜ej ˆy

(26b)

ˇe(Ng )

j = ˜ej ˆz ,

(26a)

Figure 4: DFA for binary tree with additional leaf nodes

Figure 5: Binary (cid:62)L -trees with L = 3 and L = 4

Thus, for binary tree with three qubits Eq. (25) may be rewritten

ˇe(7)

1 = iσ z
1 ,

ˇe(7)
ˇe(7)

2 = iσx
4 = iσx
2 ,

1 σ z
1 σx

2 ,

ˇe(7)
ˇe(7)

3 = iσ y
5 = iσx
2 ,

1 σ z
1 σ y

3 ,

ˇe(7)

6 = iσ y

1 σx

3 ,

ˇe(7)

7 = iσ y

1 σ y

3 .

(27)

The indexing Eq. (26) is convenient due to properties of triples with
generators ˇej , ˇe2j , ˇe2j+1 . Let us denote

hy
j = iˇejˇe2j ,

hx
j = iˇe2j+1ˇej ,

j = 1, . . . , 2L − 1.
For index j corresponding to terminal qubit nodes with three generators
terms Eq. (28) are trivial
hµ
j = σµ
j ,

j = 2L−1 , . . . , 2L − 1, µ = x, y , z .

hz
j = iˇe2jˇe2j+1 ,

(29)

(28)

15

1z3z7zyxy6zyxxy2z5zyxy4zyxxx1376254137151461312251110498For nodes with single generator ﬁrst pair of expressions Eq. (28) can be
associated with edges of binary tree

hy
j = σ y

j σ z
2j ,

hx
j = σx

j σ z
2j+1 ,

j = 1, . . . , 2L−1 − 1.

(30)

It should be noted, that hx
j and hy
j in Eq. (30) correspond to edges marked by
exchanged labels (y and x respectively, see Figure 4). Remaining z -elements
Eq. (28) may be assigned to “forks” with both edges
j = 1, . . . , 2L−1 − 1.

(31)

hz
j = σ z

j σ z
2j σ z
2j+1 ,

Due to Lie algebraic approach the linear combinations of quadratic expres-
sions such as Eq. (28) corresponds to Hamiltonians ˇH and quantum gates
can be represented as exponents
ˇU = exp(−i ˇH τ ) = exp

(cid:88)

(cid:16)

(cid:17)

(32)

hj kˇejˇek

τ

.

j<k

Hamiltonians such as Eq. (29) and Eq. (30) generate one- and two-qubit
gates and produce non-universal set of quantum gates for representation of
Spin group corresponding to Eq. (32). The arbitrary one-qubit gates may be
generated by such a way for all terminal qubit nodes due to Eq. (29), but
two-qubit gates deﬁned on all edges of binary qubit tree are restricted by
single-parameter families with Hamiltonians from Eq. (30).

5 Annihilation and creation operators

Let us split 2m generators ej of some Cliﬀord algebra C(cid:96)(2m, C) into two
parts with m elements e(cid:48)
j , e(cid:48)(cid:48)
j to introduce annihilation and creation (“ladder”)
operators

e(cid:48)

j + i e(cid:48)(cid:48)
2i

j

†

a
j =

,

e(cid:48)
j − i e(cid:48)(cid:48)

j

2i

,

j = 1, · · · , m.

(33)

aj =

Due to Eq. (3) the elements satisfy canonical anticommutation relations
(CAR)

{aj , ak } = {a
k } = 0,
j , a

†

†

{aj , a
k } = δj k 1,

†

j, k = 1, . . . , m.

(34)

16

For standard representation of Cliﬀord algebra mentioned earlier Eq. (5)
only ﬁrst 2m generators may be used e(cid:48)
j = e2j−1 , e(cid:48)(cid:48)
j = e2j and thus

†

1 · · · σ z

aj = σ z
j−1 aj ,
a
j = σ z
where a, a† are 2 × 2 matrices
(cid:18)0 1
0 0

σx + i σ y
2

(cid:19)

a =

=

j = 1, . . . , m
(cid:18)0 0
1 0

(cid:19)

=

(35)

(36)

1 · · · σ z

j−1 a
j ,

†

, a†

=

σx − iσ y
2

and index j is for position in tensor product, i.e.

aj ≡ 1 ⊗ · · · ⊗ 1

⊗ a ⊗ 1 ⊗ · · · ⊗ 1

.

(cid:124)

(cid:123)(cid:122)

j−1

(cid:125)

(cid:124)

(cid:123)(cid:122)

m−j

(cid:125)

Usual Jordan-Wigner transformations [9] corresponds to standard represen-
tation Eq. (5).
Let us also introduce analogue notation nk , n◦
(cid:18)0 0
(cid:18)1 0
k , where
1 − σ z
0 1
0 0
2

n = a†a =

1 + σ z
2

= aa†

, n◦

(cid:19)

(cid:19)

(37)

=

=

=

.

The ladder operators also can be used to express speciﬁc subgroup of Spin
group corresponding to some of quantum gates generated by restricted set of
quadratic Hamiltonians [1, 13]. Let us introduce notation
j ak − a
a
2i

a
j ak + a
2

, Λj,k =

Σj,k =

(38)

k aj

k aj

†

†

†

†

.

(cid:124) (cid:123)(cid:122) (cid:125)

For “vacuum” state

m

(cid:105),

|∅(cid:105) ≡ | 00 . . . 0
(39)
ak |∅(cid:105) = 0 and thus Σj,k |∅(cid:105) = Λj,k |∅(cid:105) = 0. Any Hamiltonians H expressed
as linear combinations of Eq. (38) also has the same property H|∅(cid:105) = 0 and
quantum gate generated by such Hamiltonian for some parameter τ
U = exp(−iHτ )
does not change vacuum state U |∅(cid:105) = |∅(cid:105).

(40)

17

Let us for certainty suppose consequent indexes 1 ≤ j < k ≤ m in
Eq. (38) with special notation for “number of particles” operators

m(cid:88)

j=k

nk = Σk,k = a
k ak , N =

†

nk .

(41)

An important property of the operator Eq. (41) may be derived directly from
the deﬁnition and Eq. (34)
N aj = ajN − aj = aj (N − 1), N a
j = a
j (N + 1).
Here again N |∅(cid:105) = 0 and for states such as
(cid:105) = a
1 ≤ j1 < · · · < jN ≤ m

· · · a

|∅(cid:105),

(43)

(42)

†

†

†

†

|Ξ(N )
j1 ...jN

jN

(cid:124)

(cid:123)(cid:122)

N

(cid:125)

j1

from consequent application of Eq. (42) for all a
j it follows
N |Ξ(N )
(cid:105) = N |Ξ(N )

(cid:105).

j1 ...jN

j1 ...jN

†

(44)

It may be also derived from Eq. (42) or checked directly that quadratic
operator Eq. (38) commute with N

Σj,kN = N Σj,k , Λj,kN = N Λj,k .
(45)
The Hamiltonians H with linear combination with Eq. (38) also commute
with N and quantum gates U generated by H Eq. (40) respect subspaces
composed from states Eq. (41). Such restricted case was introduced initially
in [13] and later discussed as a basic example in [1].
For standard case Eq. (35) it may be rewritten N = N z
1 − σ z
2

1 − 1
2

m(cid:88)

m(cid:88)

m(cid:88)

N z =

nk =

m
2

(46)

σ z

=

k

k

k=1

k=1

k=1

and eigenvalues N Eq. (44) of the operator correspond to number of units in
computational basis, e.g., for N z = 1 there are m states
(cid:105) = a

k |∅(cid:105) = |k(cid:105),

|Ξ(m)
k

†

18

where

|k(cid:105) = | 0 . . . 0

(cid:124) (cid:123)(cid:122) (cid:125)

k−1

(cid:124) (cid:123)(cid:122) (cid:125)

m−k

1 0 . . . 0

(cid:105),

k = 1, . . . , m

(47)

with only unit in position k of the computational basis state, but analogue
constructions even for binary tree discussed below are more complicated.

Let us now introduce similar constructions for binary tree. The indexation
Eq. (26) is used further with ﬁrst element ˇe1 is dropped and the Eq. (33) is
applied to partition e(cid:48)
j = ˇe2j , e(cid:48)(cid:48)
j = ˇe2j+1 , j = 1, . . . , m. Let us also introduce
slightly diﬀerent notation for binary tree ladder operators

†

ˇe2j + iˇe2j+1
ˇe2j + iˇe2j+1
ˇaj =
,
ˇa
j =
,
j = 1, . . . , m.
(48)
2i
2i
Only for terminal nodes j = 2L−1 , . . . , 2L − 1 of binary tree with given
2 × 2 matrices similarly with Eq. (35). Let us consider simple example with
L the operators Eq. (48) have more usual form with tensor product of only
L = 2 Eq. (27) and ﬁrst node j = 1 is not terminal
2 − iσ y
2

2 + i σ y
2

ˇa
1 =

ˇa1 =

1 σ z

1 σ z

1 σ z
3

1 σ z
3

(49)

σx

σx

†

,

.

Other operators for L = 2 corresponds to terminal nodes with simpler ex-
pressions

ˇa2 =

σx

1 σx

1 σ y
2

2 + i σx
2

= σx
1 a2 ,

ˇa3 =

σ y

1 σx

1 σ y
3

3 + i σ y
2

= σ y
1 a3 .

(50)

†

The expressions for operators ˇa
j are complex conjugations of matrices and
often omitted further. Let us rewrite Eq. (49) using pro jectors Eq. (37)
1 (n◦
2 − n2 )(n◦
1 (n◦
2 + n2 )(n◦
3 − n3 )
σx
3 + n3 ) + i σ y
ˇa1 =
2
= a1n◦
2n◦
1n◦
2n3 − a
1n2n◦
3 − a1n2n3 .
3 + a

(51)

†

†

The expression correspond to “conditional” annihilation and creation oper-
ators on ﬁrst qubit controlled by pair of other qubits. More general case
discussed below for L ≥ 2 and j ≥ 1 is quite similar with appropriate indexes
substituted instead of 1, 2, 3 in Eq. (51).

19

j σ z

ˇaj = rj

j σ z
2j+1

Let us rewrite Eq. (48) with two ranges for internal and terminal nodes
using stub operator rj Eq. (23) together with Eq. (26) and Eq. (27)
2j + i σ y
σx
j = 1, . . . , 2L−1 − 1,
2
σx
j + i σ y
j = 2L−1 , . . . , 2L − 1,
2
where aj (cid:47)2j is generalization of conditional operator Eq. (51) with index j
“controlled” by pair 2j, 2j + 1

= rj aj (cid:47)2j ,

= rj aj ,

ˇaj = rj

(52b)

(52a)

j

2j + i σ y
2
An example for L = 4 is depicted on Figure 6 for constructions of ˇaj , ˇa
j are
including three diﬀerent nodes for j = 1, . . . , 7 and only one for j = 8, . . . , 15.

aj (cid:47)2j =

j σ z
2j+1

j σ z

(53)

σx

†

.

Figure 6: Nodes groups for ˇaj , ˇa
j in binary tree

†

Let us now consider analogues of Eq. (38)

ˇΣj,k =

and Eq. (41)

†

ˇa
j ˇak + ˇa
k ˇaj
2

,

†

m(cid:88)

ˇN =

†

ˇa
k ˇak =

ˇΛj,k =

m(cid:88)

†

†

j ˇak − ˇa
ˇa
k ˇaj
2i

ˇnk .

.

(54)

(55)

k=1

k=1

20

The “vacuum state” Eq. (39) for binary tree also satisﬁes ˇaj |∅(cid:105) = 0 for
any j . It is clear for terminal nodes j ≥ 2L−1 , because tensor product for ˇaj
includes aj Eq. (52b). For alternative expression with three nodes Eq. (52a)
the controlled terms aj (cid:47)2j Eq. (53) for |∅(cid:105) also act as annihilation operator
on qubit j , because two “control qubits” 2j and 2j + 1 are zeros, cf Eq. (51).
Thus, operators Eq. (41) also satisfy condition ˇΣj,k |∅(cid:105) = ˇΛj,k |∅(cid:105) = 0
and the same is true for Hamiltonians represented as linear combination of
the operators, ˇH|∅(cid:105) = 0. Quantum gates and circuits generated with such
Hamiltonians
ˇU = exp(−i ˇHτ )
(56)
do not change “vacuum state” ˇU |∅(cid:105) = |∅(cid:105) similarly with U in Eq. (40), but
must commute with modiﬁed operator ˇN instead of N .
Let us consider analogues of states Eq. (43)
| ˇΞ(N )
(cid:105) = ˇa
ˇN | ˇΞ(N )
(cid:105) = ˇN | ˇΞ(N )
(57)
Quantum gates deﬁned by Eq. (56) due to property ˇN ˇU = ˇU ˇN does not
change ˇN , but number of units N in elements of computational basis may
be not ﬁxed.
Let us consider example of Eq. (57) with single creation operator
| ˇΞ(1)
k (cid:105) = ˇa
= |ˇk(cid:105),
ˇN |ˇk(cid:105) = |ˇk(cid:105),
1 ≤ k ≤ m.

k |∅(cid:105) .

· · · ˇa

|∅(cid:105),

(58)

j1 ...jN

j1 ...jN

j1 ...jN

(cid:105).

jN

j1

†

†

†

†

The operators ˇa
k are obtained from ˇak Eq. (52) by Hermitian conjugation
and |ˇk(cid:105) is (up to phase ι) an element of computational basis with units only
in positions corresponding to “path” from root to node k . The number of
units is equal to level (cid:96) of the node in the tree
N z |ˇk(cid:105) = (cid:96)k |ˇk(cid:105),
(cid:96)k = (cid:98)log2 k(cid:99) + 1.
The eigenvalues of ˇN operators Eq. (55) can be expressed directly for
computational basis using analogue of sums Eq. (41) or Eq. (46) with oper-
ators ˇnj written for diﬀerent ranges using Eq. (52)
1 − σ z
1 − σ z
2

j = 1, . . . , 2L−1 − 1,
j = 2L−1 , . . . , 2L − 1.

ˇnj = ˇa
j ˇaj =

ˇnj = ˇa
j ˇaj =

j σ z
2j σ z
2j+1

(60b)

(60a)

(59)

2

†

†

,

,

j

21

With quadratic expressions h deﬁned earlier Eq. (28) it may be rewritten
using Eq. (29) and Eq. (31)
1 − hz
2

j = 1, . . . , 2L − 1.

ˇnj =

(61)

,

j

Tensor product of σ z is diagonal matrices and eigenvalues ηj of hz
j Eq. (31)
for eigenvectors from computational basis can be expressed as
j |n1 , . . . , nm (cid:105) = ηj |n1 , . . . , nm (cid:105),
(j < 2L−1 )
hz

ηj = (−1)nj +n2j +n2j+1

(62)

and due to simple identity

1 − (−1)k
2

= k mod 2

(cid:40)

eigenvalues of ˇnj using Eq. (60) and Eq. (62) can be expressed as
j = 1, . . . , 2L−1 − 1,
j = 2L−1 , . . . , 2L − 1

(nj + n2j + n2j+1 ) mod 2,
nj ,

ˇnj =

(63)

(64)

and eigenvalue of ˇN is

ˇN =

m(cid:88)

ˇnj

j=1

Let us consider an example with single creation operator for node k
Eq. (58). The positions of units produce some path from root to k . Any
triple of nodes in Eq. (63) for j (cid:54)= k contains zero or two units and ˇnj is only
nonzero element in sum Eq. (64), ˇnj = δj k , thus, ˇN = 1.
Let us consider m elements with a single unit in computational basis.
Method used above illustrate that ˇN = 1 only for j = 1, but ˇN = 2 for j > 1
due to second unit in sum Eq. (64), because triple for k = j div 2 in Eq. (63)
also contains node j . It may be also checked directly, that for given indexing
Eq. (26)

†

†

j (cid:48) |∅(cid:105),

j = 2, . . . , m = 2L − 1,

| ˇΞ(2)
j (cid:48),j (cid:105) = ˇa
j ˇa
is element of computational basis (up to ι) with single unit in position j , see
Eq. (47)
| ˇΞ(2)
j÷2,j (cid:105) = ˇa
j ˇa

†
j÷2 |∅(cid:105) = ι|j (cid:105),

j = 2, . . . , m,

= j div 2

(65)

(66)

(cid:48)

j

†

22

there notation j ÷ 2 = j div 2 is used for brevity and both elements in each
pair j ∈ {2j (cid:48) , 2j (cid:48) + 1} are taken into account for j > 1. Thus
ˇN |1(cid:105) = |1(cid:105),
ˇN |j (cid:105) = 2|j (cid:105),
j > 1.
(67)
However, elements of computational basis with units in both positions 2j (cid:48)
and 2j (cid:48) + 1 also may be expressed in similar way
| ˇΞ(2)
2j (cid:48) |∅(cid:105) = |2j
+ 1(cid:105),
where notation from [1] is used
|k , k + 1(cid:105) = | 0 . . . 0

2j (cid:48) ,2j (cid:48)+1 (cid:105) = ˇa
2j (cid:48)+1ˇa

= 1, . . . , 2L−1 − 1,

11 0 . . . 0

(69)

(68)

(cid:105).

(cid:48)

j

(cid:48)

, 2j

(cid:48)

†

†

(cid:124) (cid:123)(cid:122) (cid:125)

k−1

(cid:124) (cid:123)(cid:122) (cid:125)

m−k−2

Thus, such a states also belong to subspace corresponding to eigenvalue 2 of
operator ˇN , cf Eq. (67)
ˇN |2j, 2j + 1(cid:105) = 2|2j, 2j + 1(cid:105),

1 ≤ j ≤ 2L−1 − 1.

(70)

6 Eﬃcient simulation

Let us start with analogues of eﬃcient classical simulation considered in
[18, 19] with calculation of expectation values of generators ˇej for binary trees
using exponential representation of gates ˇU with “quadratic” Hamiltonians
ˇH Eq. (32).
Unitary operators ± ˇUR ∈ SU(2m ) (elements of Spin group) are corre-
sponding to orthogonal matrix R with property

(cid:88)

ˇURˇej ˇU

†

R =

Rkjˇek ,

(71)

k

where summation is applied to actually used set of indexes. For binary
Spin(2m + 1) and R ∈ SO(2m + 1) or k = 2, . . . , 2m + 1 for C(cid:96)(2m), Spin(2m)
tree natural choice may include either k = 1, . . . , 2m + 1 for C(cid:96)(2m + 1),
and R ∈ SO(2m) ⊂ SO(2m + 1), cf Eq. (27) for m = 3.
Here consideration of all generators with R ∈ SO(2m + 1) may be useful,
because ˇe1 presents in quadratic Hamiltonian in terms for links such as hx
1 ,
hy
1 in Eq. (30). However, ˇe1 is dropped in constructions with creation and
annihilation operators Eq. (48).

23

Evolution of state due to such unitary operators is |φ(cid:48) (cid:105) = ˇUR |φ(cid:105) and
expectation value of ˇej is
(cid:48) |ˇej |φ

Rj k (cid:104)φ|ˇek |φ(cid:105),

(cid:48) (cid:105) = (cid:104)φ| ˇU

Rˇej ˇUR |φ(cid:105) =

(cid:88)

(72)

(cid:104)φ

†

k

†

where order of indexes is changed in comparison with Eq. (71) due to inver-
sion ˇU
R = ˇU −1
for matchgates [18] with R ∈ SO(2m), but for the diﬀerent operators ˇUR , ˇej
R . Eq. (72) is the formal algebraic analogue of an equation
constructed from binary trees instead of linear chain. The quadratic terms
were more suitable in [18, 19] and analogues of such expressions also can be
introduced
(cid:48) |iˇej1ˇej2 |φ
(cid:48) (cid:105) = (cid:104)φ|i ˇU
ˇUR |φ(cid:105) = (cid:104)φ|i ( ˇU
Rk1 j1 Rk2 j2 (cid:104)φ|iˇek1ˇek2 |φ(cid:105),
=

(cid:88)

ˇUR )|φ(cid:105)

ˇUR )( ˇU

Rˇej1ˇej2

Rˇej1

Rˇej2

(73)

(cid:104)φ

†

†

†

k1 (cid:54)=k2

j

(cid:104)φ

(cid:48) (cid:105) = (cid:104)hz

where condition k1 (cid:54)= k2 can be used because terms with equal indexes are
disappear due to orthogonality of matrix R.
For terminal indexes j = 2L−1 , . . . , 2L − 1 quadratic terms Eq. (28) can be
used for representation of single Pauli matrix Eq. (29), hz
j = iˇe2jˇe2j+1 = σ z
and expectation value is analogue with [18, 19]. However, for internal indexes
j , j = 1, . . . , 2L−1 − 1 are product of three Pauli matrices Eq. (31). It may
hz
(cid:40)(cid:104)Zj Z2j Z2j+1 (cid:105),
be written
(cid:48) |iˇe2jˇe2j+1 |φ
j (cid:105) =
(cid:104)Zj (cid:105),
(cid:40)(cid:104)nj (cid:13)+ n2j (cid:13)+ n2j+1 (cid:105),
and rewritten in agreement with analogue equation for ˇnj Eq. (63)
j = 1, . . . , 2L−1 − 1,
(cid:104)nj (cid:105),
j = 2L−1 , . . . , 2L − 1,
where (cid:104)nj (cid:105) is equal to probability p1 to measure value 1 for qubit j and (cid:13)+
denotes XOR (exclusive OR) operation for binary values
ˇnj = nj (cid:13)+ n2j (cid:13)+ n2j+1 = (nj + n2j + n2j+1 ) mod 2.
(76)
For terminal nodes j = 2L−1 , . . . , 2L − 1 the result of qubit measurement
in computational basis nj = ˇnj can be directly found from Eq. (73). For

j = 1, . . . , 2L−1 − 1,
j = 2L−1 , . . . , 2L − 1

(cid:104)ˇnj (cid:105) =

(74)

(75)

24

previous level (cid:96) = L − 1 and indexes j = 2L−2 , . . . , 2L−1 − 1 it includes an
expression with three terms
nj = ˇnj (cid:13)+ n2j (cid:13)+ n2j+1 = ˇnj (cid:13)+ ˇn2j (cid:13)+ ˇn2j+1 ,
for level (cid:96) = L − 2 expression n via ˇn require seven terms
nj = ˇnj (cid:13)+ ˇn2j (cid:13)+ ˇn4j (cid:13)+ ˇn4j+1 (cid:13)+ ˇn2j+1 (cid:13)+ ˇn4j+2 (cid:13)+ ˇn4j+3 .
For deeper levels (cid:96) = L − d similar expansions produce 2d terms and so ana-
of (cid:104)ˇnj (cid:105) or to measurements of separate qubits for terminal nodes.
logue of approach used in [18, 19] can be applied only either to computation
For internal nodes with level (cid:96) < L even for single qubit measurement
outcome should be used more complicated approach similar with applied to
multi-qubit outputs in a standard case [20], but with measurement of 2L−l
quantum “binary variables” ˇnj expressed as XOR operations with qubit val-
ues. Thus, despite of some resemblance with matchgate circuits the eﬀective
modeling with binary trees devotes special consideration.
Together with possible diﬃculties for internal nodes it has speciﬁc advan-
tages for terminal qubits. Linear combinations of quadratic Hamiltonians
Eq. (29) may generate arbitrary rotation and, thus, expectation values (cid:104)Zj (cid:105)
in computational basis Eq. (74) can be extended for eﬃcient simulation of
qubit measurement “along any axis.”
j = 2L−2 , . . . , 2L−1 − 1. Let us show, that for parent qubit ﬁxed in state
A pair of terminal qubits with indexes 2j , 2j + 1 have common parent
|0(cid:105) any transformation from SU(4) group may be implemented using only
quadratic Hamiltonian. The construction with auxiliary qubit uses isomor-
phism between SU(4) and Spin(6) and similar with a method discussed in
[21].
Let us extend a simpler example L = 2, m = 3 Eq. (27) to write seven
generators associated with the “terminal triple” of qubits with parent node
2L−2 ≤ j < 2L−1 for arbitrary L ≥ 2
ˇej = rj σ z
j ,
ˇe2j = rj σx
ˇe4j = rj σx

(77)

j σ z
2j ,
j σx
2j ,
ˇe4j+1 = rj σx
j σ y
2j ,

ˇe2j+1 = rj σ y
j σ z
2j+1 ,
ˇe4j+2 = rj σ y
j σx
2j+1 ,
ˇe4j+3 = rj σ y
j σ y
2j+1 .

Products of two generators Eq. (77) produces 21 diﬀerent terms, but only 15
of them do not change parent qubit with state |0(cid:105)
σµ
σ ν
σ z
µ, ν = x, y , z .

(78)

j σµ
2j σ ν
2j+1 ,

2j ,

2j+1 ,

25

The linear combinations of analogues of terms Eq. (78) without multiplier σ z
would produce arbitrary traceless Hamiltonian for two qubits, but σ z acts as
identity on state |0(cid:105) and so terms Eq. (78) also may generate arbitrary SU(4)
transformation of two terminal qubits if common parent qubit is |0(cid:105).
Let us now consider construction of gates ˇU Eq. (56) generated by
quadratic combinations Eq. (54) of ladder operators ˇaj and ˇa
nary tree. For such a case instead of Eq. (71) an auxiliary matrix U ∈ SU(m)
k Eq. (48) for bi-
can be introduced for operators ± ˇUU ∈ SU(2m ) with formal analogue of well-
known relations for ladder operators [1, 13]

†

j

m(cid:88)

m(cid:88)

ˇUUˇak ˇU †
U =

Ukj ˇaj ,

ˇUUˇa

†

k

ˇU †

U =

†

†

U
j k ˇa
j ,

(79)

j=1

j=1

†

†

k

†

l=1

†

†

(80)

ˇU †

†

lk |ˇl(cid:105).
U

m(cid:88)

m(cid:88)

m(cid:88)

l |∅(cid:105) =

U |∅(cid:105) =

where ¯Ukj is complex conjugation of coeﬃcients and U† = U−1 for unitary
matrix U.
A “path-state” |ˇk(cid:105) Eq. (58) satisﬁes an analogue of equations used in [1]
for |k(cid:105) Eq. (47) up to trivial change of variables, i.e.
Let us consider linear superposition of path states | ˇχ(cid:105) = (cid:80)m
ˇUU |ˇk(cid:105) = ˇUUˇa
k |∅(cid:105) = ˇUUˇa
U
lk ˇa
k=1 χk |ˇk(cid:105)
lkχk |ˇl(cid:105) ≡ m(cid:88)
ˇUU | ˇχ(cid:105) = ˇUU
χk |ˇk(cid:105) =
l |ˇl(cid:105), χ
.
U
χ
=
The Eq. (81) for “single-path” states ( ˇN = 1) is similar with evolution of
“single-particle” case (N z = 1) for qubit chain [1], but for all nodes except
of root in binary qubit tree |k(cid:105) belongs to ˇN = 2 subspace due to Eq. (67).
However, the same subspace also includes pairs |2j, 2j + 1(cid:105) Eq. (67) and an
analogy with “two-particle” case is also relevant.
For Hamiltonian respecting N the consideration of “number-preserving”
subspaces is natural for models of state transfer in quantum chains [1, 22].
In such a case two-qubit state were decomposed into three parts:

m(cid:88)

m(cid:88)

lkχk .

(81)

l,k=1

†

U

k=1

k=1

l=1

l=1

(cid:48)

l

(cid:48)

N =0

(cid:122) (cid:125)(cid:124) (cid:123)
(cid:124) (cid:123)(cid:122) (cid:125)

c00 |00(cid:105)

ˇN =0

(cid:122)
(cid:124)

(cid:125)(cid:124)

N =1

(cid:123)

(cid:123)(cid:122)

ˇN =2

N =2

(cid:122) (cid:125)(cid:124) (cid:123)
(cid:125)

c11 |11(cid:105)

|ψ(cid:105) =

c01 |01(cid:105) + c10 |10(cid:105) +

+

,

(82)

26

but terms with N = 1 and N = 2 in Eq. (82) in binary tree for pairs of
nodes 2j, 2j + 1 (0 < j < 2L−1 ) are belong to the same subspace ˇN = 2, and,
furthermore, N = ˇN = 0 is not aﬀected by ˇU Eq. (56) for state transfer.
For two consequent indexes 2j, 2j + 1 three terms with N (cid:54)= 0 ( ˇN = 2)
in Eq. (82) are generated by applications to |∅(cid:105) diﬀerent pairs of operators
between the same triple ˇa
j , ˇa
2j and ˇa
2j+1 due to Eq. (66) and Eq. (68). Thus,
indexes by operator ˇUU should correspond to unitary matrix U with simple
result of perfect transfer of such two-qubit pair into new position 2k , 2k + 1
constrains on three elements

†

†

†

|Uj k | = |U2j,2k | = |U2j+1,2k+1 | = 1.

(83)

For consideration of perfect transfer with single qubit one condition in
Eq. (83) may be superﬂuous.
The example illustrates possibility of exponential decrease of model di-
mension from 2m to m, but the construction of U with a sequence of steps
or appropriate Hamiltonians devotes separate consideration elsewhere. Even
reduced problem is more diﬃcult than analogue example for qubit chain be-
cause of less trivial structure of graph itself and more complicated properties
of modiﬁed operators such as ˇa and ˇa† .

References

[1] A. Yu. Vlasov, “Eﬀective simulation of state distribution in qubit
chains,” arXiv:1708.07439 [quant-ph]; Quantum Inf. Process. 17,
269 (2018).

[2] S. Backens, A. Shnirman, and Yu. Makhlin, “Jordan-Wigner transfor-
mations for tree structures,” arXiv:1810.02590 [cond-mat]; Scientiﬁc
Reports 9, 2598 (2019).

[3] A. M. Szczerba, “Spins and fermions on arbitrary lattices,” Comm.
Math. Phys. 98, 513–524 (1985).

[4] T. Ried, “Jordan-Wigner transformations and quantum spin systems on
graphs,” Master’s Thesis, Technische Universit¨at M¨unchen (2013).

[5] M. Steudtner and S. Wehner,“Quantum codes for quantum simulation of
fermions on a square lattice of qubits,” arXiv:1810.02681 [quant-ph];
Phys. Rev. A 99, 022308 (2019).

27

[6] Z. Jiang, A. Kalev, W. Mruczkiewicz, and H. Neven, “Optimal fermion-
to-qubit mapping via ternary trees with applications to reduced quan-

tum states learning,” arXiv:1910.10746 [quant-ph].

[7] J. E. Gilbert and M. A. M. Murray, Cliﬀord Algebras and Dirac Oper-
ators in Harmonic Analysis (Cambridge University Press, Cambridge,
1991).

[8] I. R. Porteous, Cliﬀord Algebras and the Classical Groups (Cambridge
University Press, Cambridge, 1995).

[19] R. Jozsa, B. Kraus, A. Miyake, and J. Watrous, “Matchgate and space-
bounded quantum computations are equivalent,” arXiv:0908.1467
[quant-ph]; Proc. R. Soc. London, Ser. A 466, 809–830 (2010).

[20] D. J. Brod, “Eﬃcient classical simulation of matchgate circuits with gen-
eralized inputs and measurements,” arXiv:1602.03539 [quant-ph];
Phys. Rev. A 93, 062332 (2016).

[21] A. Yu. Vlasov,

“Quantum circuits

arXiv:1311.1666 [quant-ph]; Quant.

and
Spin(3n)
Inf. Comp. 15,

groups,”
235–259

(2015).

[22] S. Lorenzo, T. J. G. Apollaro, S. Paganelli, G. M. Palma, and
F. Plastina, “Transfer of arbitrary two-qubit states via a spin chain,”
arXiv:1502.02458 [quant-ph]; Phys. Rev. A 91, 042321 (2015).

29

