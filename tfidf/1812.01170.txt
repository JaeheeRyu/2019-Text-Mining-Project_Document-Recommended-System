9
1
0
2

v
o

N

1
2

]

T

I

.

s

c

[

4
v
0
7
1
1
0

.

2
1
8
1

:

v

i

X

r

a

ON INCOMPRESSIBLE MULTIDIMENSIONAL NETWORKS

FELIPE S. ABRAH ˜AO, KLAUS WEHMUTH, HECTOR ZENIL, AND ARTUR ZIVIANI

Abstract. This work presents a theoretical investigation of incompressible
multidimensional networks deﬁned by a generalized graph representation. In
particular, we study the incompressibility (i.e., algorithmic randomness) of
snapshot-dynamic networks and multiplex networks in comparison to the in-
compressibility of more general forms of multidimensional networks, from which
snapshot-dynamic networks or multiplex networks are particular cases. In ad-
dition, we study some of their network topological properties and discuss how
these may be related to real-world complex networks. First, we show that
incompressible snapshot-dynamic (or multiplex) networks carry an amount of
algorithmic information that is linearly dominated by the size of the set of time
instants (or layers). This contrasts with the algorithmic information carried
by an incompressible general dynamic (or multilayer) network that is of the
quadratic order of the size of the set of time instants (or layers). Furthermore,
incompressible general multidimensional networks inherit most of the topolog-
ical properties from their respective isomorphic graph. Hence, we show that
these networks have very short diameter, high k-connectivity, and degrees of
the order of half of the network size within a strong-asymptotically dominated
standard deviation. Particularly, we show that incompressible general mul-
tidimensional networks have transtemporal (or crosslayer) edges. Thus, this
property may not correspond to the underlying structure of many real-world
networks that can be properly modeled by snapshot-like multidimensional net-
works.

(Felipe S. Abrah˜ao, Klaus Wehmuth, Artur Ziviani) National Laboratory for Scientific
Computing (LNCC), 25651-075 – Petropolis, RJ – Brazil
(Hector Zenil) Oxford Immune Algorithmics, RG1 3EU, Reading, U.K., Algorithmic Dy-
namics Lab, Unit of Computational Medicine, Department of Medicine Solna, Center
for Molecular Medicine, Karolinska Institute, SE-171 77 – Stockholm – Sweden. Al-
gorithmic Nature Group, Laboratoire de Recherche Scientifique (LABORES) for the
Natural and Digital Sciences, 75005 – Paris – France.

E-mail addresses: fsa@lncc.br, klaus@lncc.br, hector.zenil@ki.se, ziviani@lncc.br.

68Q30; 03D32; 68R10; 05C30; 05C78; 05C75;

2010 Mathematics Subject Classiﬁcation.
05C60; 05C80; 05C82; 94A15; 68Q01.
Key words and phrases. algorithmic randomness; generalized graphs; multiaspect graphs;
time-varying graphs; snapshot networks; multiplex networks; algorithmic complexity;
lossless
compression.
Authors acknowledge the partial support from CNPq through their individual grants: F.
S. Abrah˜ao (313.043/2016-7), K. Wehmuth (312599/2016-1), and A. Ziviani (308.729/2015-3).
Authors acknowledge the INCT in Data Science – INCT-CiD (CNPq 465.560/2014-8). Au-
thors also acknowledge the partial support from CAPES/STIC-AmSud (18-STIC-07), FAPESP
(2015/24493-1), and FAPERJ (E-26/203.046/2017). H. Zenil acknowledges the Swedish Research
Council (Vetenskapsr˚adet) for their support under grant No. 2015-05299.

1

 
 
 
 
 
 
2

1. Introduction

In a general sense, a multidimensional network (also known as high-order net-
work) is any network that has additional representational structures. For example,
this is the case of dynamic (i.e., time-varying) networks [11, 21, 24, 27], multilayer
networks [5, 15, 18], and dynamic multilayer networks [29, 30]. As the interest and
pervasiveness of complex network modelling and network analysis increase in net-
work science or in complex systems science, proper representations of such networks
into new extensions of graph-theoretical abstractions has become an important topic
of investigation [18, 19, 22].
In this regard, the general scope of this paper is to study the plain and pre-
ﬁx algorithmic randomness of multidimensional networks. Within the theoretical
framework of algorithmic information theory, complex networks theory, and graph
theory, we study incompressibility (i.e., algorithmic randomness) and computably
irreducible information content (i.e., plain or preﬁx algorithmic complexity) in gen-
eralized graph representations.
As shown in [16, 23, 35], approaches to network complexity based on classical
(or statistical) information theory have presented useful tools to ﬁnd, estimate or
measure underlying graph-theoretic topological structures or properties. However,
it has been shown that these estimations or resulting values are not invariant to
language description [35]. This comes from the reliance on probability distributions
that require making a choice of feature of interest relevant to the measure of inter-
est. For example, the node degrees for the study of their distribution in a network
disregards other representations of the same ob ject (network) and its possible un-
derlying generating mechanism. While some of these statistical approaches may be
useful when a feature of interest is selected they can only capture the complexity of
the representation and not the ob ject. This is in contrast to universal measures of
randomness such as algorithmic complexity whose invariance theorem guarantees
that diﬀerent representation will have convergent values. Of course, the complica-
tion is how to achieve the estimation of those universal measures which by virtue of
being universal are also semi-computable and their application require, therefore,
a much higher degree of methodological care compared to those measures that are
simply computable such as those based on traditional statistical approaches such
as entropy, or graph-theoretic such as node degree. Nevertheless, only algorith-
mic information theory has been giving us computably universal tools for studying
incompressibility of ﬁxed individual graphs that are not generated or deﬁned by
stochastic processes [35]. Thus, such an approach also diﬀers from the traditional
methods in random graphs theory, such as the probabilistic method.
Our approach is grounded in the theory and methods of algorithmic complexity
and algorithmic randomness [7, 9, 17, 20]. In this article, we apply the results on
labeling and algorithmic randomness introduced in [1], which extends the ones for
classical graphs to multiaspect graphs (MAGs) [30, 31]. MAGs are formal repre-
sentations of dyadic (or 2-place) relations between two arbitrary n-ary tuples and
have shown fruitful representational properties to network modelling [2, 3, 30, 34]
and analysis of multidimensional networks [11, 29, 32, 33]. First, we compare the
algorithmic complexity and incompressibility of snapshot-dynamic networks and
multiplex networks with more general forms of dynamic networks and multilayer
networks, respectively. In turn, dynamic networks and multilayer networks are con-
sidered as distinct types of multidimensional (or high-order) networks. Secondly,

3

we present some multidimensional topological properties of incompressible general
multidimensional networks. To tackle these problems in the present paper, we ap-
ply a theoretical approach by putting forward deﬁnitions, lemmas, theorems, and
corollaries. Then, we discuss relations between the results.
In Sections 2 and 3, we present some background results upon which we build the
contributions of this paper. In Section 4, we investigate the algorithmic randomness
of snapshot-dynamic networks and multiplex networks through the calculation of
the worst-case lossless compression of the characteristic string of the network. This
way, one can compare these two kinds of networks with the incompressibility of
more general forms of dynamic networks and multilayer networks, respectively.
Further, in Section 5, we investigate some multidimensional network topological
properties of incompressible multidimensional networks. Such topological proper-
ties include, more speciﬁcally, degree distribution of composite vertices, composite
diameter, and composite k-connectivity. As shown in [1], if the randomness de-
ﬁciency is asymptotically bounded above by a logarithmic term of the network
size, these ﬁndings follow from the fact that incompressible multidimensional net-
works inherit the topological properties from their respective isomorphic graphs
[30]. Hence, we also derive the presence of a new multidimensional network topo-
logical property that may not correspond to underlying structures of real-world
networks, e.g., of snapshot-dynamic networks or multiplex networks. In particu-
lar, we show the presence of transtemporal or crosslayer edges (i.e., edges linking
vertices at non-sequential time instants or layers).

2. Preliminary definitions and notation

2.1. Multiaspect graphs. In order to represent high-order networks, we are bas-
Deﬁnition 2.1. Let G = (A , E ) be a multiaspect graph (MAG), where E is the
ing our work on a generalized graph representation of dyadic relations between
n-tuples [30, 31]:
is an aspect. Each aspect σ ∈ A is a ﬁnite set and the number of aspects p =  A  
set of existing composite edges of the MAG and A is a class of sets, each of which
and so on. Each composite edge (or arrow) e ∈ E may be denoted by an ordered
2p-tuple (a1 , . . . , ap , b1 , . . . , bp ), where ai , bi are elements of the i-th aspect with
is called the order of G . By an immediate convention, we call a MAG with only
one aspect as a ﬁrst order MAG, a MAG with two aspects as a second order MAG
Note that A (G ) denotes the class of aspects of G and E (G ) denotes the com-
posite edge set of G . We denote the i-th aspect of G as A (G )[i]. So,  A (G )[i] 
denotes the number of elements in A (G )[i]. In order to match the classical graph
vertices. Therefore, we also denote the set A (G )[1] of elements of the ﬁrst aspect
of a MAG G as V (G ). Thus, a vertex should not be confused with a composite
case, we adopt the convention of calling the elements of the ﬁrst aspect of a MAG as
vertex. The set of all composite vertices v of G is deﬁned by

1 ≤ i ≤ p =  A  .

V(G ) = p

A (G )[i]

i=1

4

E(G ) = 2p

n=1

A (G)[(n − 1)
E (G ) ⊆ E(G )

and the set of all composite edges e of G is deﬁned by
(mod p) + 1)] ,
so that, for every ordered pair (u, v) with u, v ∈ V(G ), we have (u, v) = e ∈ E(G ).
Also, for every e ∈ E(G ) we have (u, v) = e such that u, v ∈ V(G ). Thus,
tional directed MAG (or graph), denoted as Gd = (A , E ).
simple MAG (or graph), denoted as Gc = (A , E ), so that the set of all composite
Deﬁnition 2.2. We say a directed MAG (or graph) without self-loops is a tradi-
Deﬁnition 2.3. We say an undirected MAG (or graph) without self-loops is a
edges E is sub jected to a restriction in the form
where1 there is Y ⊆ E(Gc ) such that

E (Gc ) ⊆ Ec (Gc ) ∶= {{u, v}   u, v ∈ V(Gc )} ,

{u, v} ∈ E (Gc ) ⇐⇒ (u, v) ∈ Y ∧ (v, u) ∈ Y ∧ u ≠ v
 Ec (Gc )  =  V(Gc ) 2 −  V(Gc ) 

We will have directly from this Deﬁnition 2.3 that
Concerning the presence or absence of composite edges in E (Gc ), we deﬁned the
2
Deﬁnition 2.4. Let e1 , . . . , e Ec (Gc )   be any arbitrarily ﬁxed ordering of composite
edges of a simple MAG Gc . We say that a string x ∈ {0, 1}∗ with l(x) =  Ec (Gc )  is
characteristic string [1] of a simple MAG:
a characteristic string of a simple MAG Gc iﬀ, for every ej ∈ Ec (Gc ),
ej ∈ E (Gc ) ⇐⇒ the j -th digit in x is 1 ,
where 1 ≤ j ≤ l(x).
Deﬁnition 2.5. The composite diameter DE (G ) is the maximum value in the set
of the minimum number of steps (through composite edges) in E (G ) necessary to
We deﬁne the composite diameter of G in an analogous way to diameter in
classical graphs:
reach a composite vertex v from a composite vertex u, for any u, v ∈ V(G ).
rected graph G when there is a bijective function f ∶ V(Gd ) → V (G) such that an
See also [30] for paths and distances in MAGs. Moreover, as in [30]:
edge e ∈ E (Gd ) if, and only if, the edge (f (πo (e)), f (πd (e))) ∈ E (G), where πo is a
Deﬁnition 2.6. We say a traditional MAG Gd is isomorphic to a traditional di-
function that returns the origin vertex of an edge and the function πd is a function
that returns the destination vertex of an edge.
Thus, the reader may notice that the aspects in A determine how the set E
will be deﬁned and, therefore, they determine the type of network that the MAG
is univocally representing: for example, a time-varying graph (TVG) as in [11, 34]
or a multilayer graph as in [29]. In the particular case of dynamic networks, as
deﬁned in [11, 34], we have that:

1 That is, the adjacency matrix of this graph is symmetric.

Deﬁnition 2.7. Let Gt = (V, E , T) be a second order MAG representing a time-
5
and E ⊆ V × T × V × T is the set of (composite) edges. We denote the set of time
instants of the graph Gt = (V, E , T) by T(Gt ) = {t0 , t1 , . . . , t T(Gt ) −1 }. Also, let
varying graph (TVG), where V is the set of vertices, T is the set of time instants,
V(Gt ) denote the set of vertices of Gt and  V(Gt )  denote the cardinality of the set
of vertices in Gt .
The terms vertex and node may be employed interchangeably in this article.
However, we choose to use the term node preferentially within the context of net-
works, where nodes may realize operations, computations or would have some kind
of agency, like in real-world networks. Thus, we choose to use the term vertex
preferentially in the mathematical context of graph theory.

2.2. Algorithmic information theory. In this section, we brieﬂy recover some of
Deﬁnition 2.8. Let {0, 1}∗ be the set of all ﬁnite binary strings.
the main deﬁnitions in algorithmic information theory (aka Kolmogorov complexity
Deﬁnition 2.9. Let l(x) denote the length of a ﬁnite string x ∈ {0, 1}∗ .2
theory or Solomonoﬀ-Kolmogorov-Chaitin complexity theory) [7, 9, 17, 20].
addition, let  X   denote the number of elements (i.e., the cardinality) in a set, if X
In
Deﬁnition 2.10. Let (x)
number x. In addition, let (x)L denote the representation of the number x ∈ N in
is a ﬁnite set.
2 denote the string which is a binary represenation of the
language L.
Deﬁnition 2.11. Let LU denote a binary universal programming language for a
Deﬁnition 2.12. Let L′
universal Turing machine U.
Deﬁnition 2.13. Let  ⋅ , ⋅  denote an arbitrary recursive bijective pairing function.
U denote a binary preﬁx-free (or self-delimiting ) universal
programming language for a preﬁx universal Turing machine U.
This notation can be recursively extended to  ⋅ ,  ⋅ , ⋅  and, then, to an ordered
tuple  ⋅ , ⋅ , ⋅ . This iteration can be recursively applied with the purpose of deﬁning
ﬁnite ordered tuples ⋅ , . . . , ⋅.
Deﬁnition 2.14. The (unconditional) plain algorithmic complexity (also known as
C (w), is the length of the shortest program w∗ ∈ LU such that U(w∗ ) = w.3 The
C-complexity, plain Kolmogorov complexity, plain program-size complexity or plain
Solomonoﬀ-Komogorov-Chaitin complexity) of a ﬁnite binary string w, denoted by
ﬁnite string x, denoted by C (y  x), is the length of the shortest program w∗ ∈ LU
conditional plain algorithmic complexity of a binary ﬁnite string y given a binary
such that U(x, w∗ ) = y . Note that C (y) = C (y  ), where  is the empty string.
C (x, y) ∶= C (x, y) and the C-complexity of information in x about y denoted by
We also have the joint plain algorithmic complexity of strings x and y denoted by

IC (x ∶ y) ∶= C (y) − C (y  x).

2 In [17], l(x) is denoted by  x .
U(p) = w.
3 Note that w∗ denotes the lexicographically ﬁrst p ∈ LU such that l(p) is minimum and

6

w∗ ∈ L′

Note 2.1. For an edge set E (G ), let C (E (G )) ∶= C (E (G )) denote
C (e1 , z1  , . . . , en , zn )
zi = 1 ⇐⇒ ei ∈ E (G ) ,
where zi ∈ {0, 1} with 1 ≤ i ≤ n =  E(G ) . The same applies analogously to C (E (G))
such that
and to the conditional, joint, and C-complexity of information cases.
Deﬁnition 2.15. The (unconditional) preﬁx algorithmic complexity (also known
denoted by K (w), is the length of the shortest program w∗ ∈ L′
as K-complexity, preﬁx Kolmogorov complexity, preﬁx program-size complexity
U such that U(w∗ ) =
a binary ﬁnite string x, denoted by K (y  x), is the length of the shortest program
or preﬁx Solomonoﬀ-Komogorov-Chaitin complexity) of a ﬁnite binary string w,
U such that U(x, w∗ ) = y . Note that K (y) = K (y  ), where  is the empty
w.4 The conditional preﬁx algorithmic complexity of a binary ﬁnite string y given
y denoted by K (x, y) ∶= K (x, y), the K-complexity of information in x about y
string. Similarly, we have the joint preﬁx algorithmic complexity of strings x and
denoted by IK (x ∶ y) ∶= K (y) − K (y  x), and the mutual algorithmic information of
the two strings x and y denoted by IA (x ; y) ∶= K (y) − K (y  x∗ ).
Note 2.2. For an edge set E (G ), let K (E (G )) ∶= K (E (G )) denote
K (e1 , z1  , . . . , en , zn )
zi = 1 ⇐⇒ ei ∈ E (G ) ,
where zi ∈ {0, 1} with 1 ≤ i ≤ n =  E(G ) . The same applies analogously to K (E (G))
such that
and to the conditional, joint, K-complexity of information, and mutual cases.
2.3. Algorithmically random multiaspect graphs. In order to study C-randomness
(i.e., plain algorithmic randomness) of simple MAGs analogously to classical graphs,
ﬁrst we need to extend the concept of labeling in classical graphs to families of sim-
ple MAGs [1]:
∈ {0, 1}∗ such that, for every Gc ∈ FGc and for every ai , bi , j ∈ N
with 1 ≤ i ≤ p ∈ N:
are programs p′
1 , p′
Deﬁnition 2.16. A family FGc of simple MAGs Gc is recursively labeled iﬀ there
(I) if (a1 , . . . , ap ) , (b1 , . . . , bp ) ∈ V (Gc ), then
U (a1 , . . . , ap  , b1 , . . . , bp  , p
(II) if (a1 , . . . , ap ) or (b1 , . . . , bp ) does not belong to any V (Gc ) with Gc ∈ FGc ,
U (a1 , . . . , ap  , b1 , . . . , bp  , p
then

) = (j )
) = 0
1 ≤ j ≤  Ec (Gc )  =  V(Gc ) 2 −  V(Gc ) 

′

′

1

2

2

1

(III) if

then

U (j, p

′

) = a1 , . . . , ap  , b1 , . . . , bp  = (ej )
,
2

4 w∗ denotes the lexicographically ﬁrst p ∈ L′
U such that l(p) is minimum and U(p) = w.

2

2

7

1 ≤ j ≤  Ec (Gc )  =  V(Gc ) 2 −  V(Gc ) 

(IV) if
does not hold for any V (Gc ) with Gc ∈ FGc , then
U (j, p
) = a1 , . . . , ap  , b1 , . . . , bp  = 0
2
Deﬁnition 2.17. A classical graph G with  V (G)  = n is δ(n)-C-random if, and
Second, we extend the deﬁnition of plain algorithmically random classical graphs
in [6, 20] to simple MAGs. In the classical graph case, we have in [6, 20]:
only if, it satisﬁes

′

2

C (E (G)  n) ≥ n
 − δ(n)
n  δ(n)

δ ∶ N → N

2

where

where

is the randomness deﬁciency function.
Deﬁnition 2.18. We say a simple MAG Gc is δ( V(Gc ) )-C-random iﬀ it satisﬁes
Therefore, in the simple MAG case, an analogous deﬁnition holds as introduced
in [1]:

C (E (Gc )    V(Gc ) ) ≥  V(Gc ) 
 − δ( V(Gc ) ) ,
n  δ(n)

δ ∶ N → N

2

is the randomness deﬁciency function.
Deﬁnition 2.19. We say a simple MAG Gc is O(1)-K-random iﬀ it satisﬁes
As introduced in [1], one can also apply this same concept of algorithmic ran-
domness to the preﬁx-free (or self-delimited) version, i.e., K-randomness:

K (E (Gc )) ≥  V(Gc ) 
 − O(1)

2

3. Background results

In this section, we brieﬂy recover some previous results in [1]. These are obtained
from an extension of algorithmically random classical (i.e., labeled simple) graphs
in [6, 20, 35, 37, 38] to multiaspect graphs [30, 31]. Thus, the deﬁnitions and notation
on multiaspect graphs are based on [30, 31] and those on algorithmically random
graphs are based on [6, 20, 35, 37, 38]. For a complete formalization and discussion
on the deﬁnitions and notation, see also [1].

8

3.1. Algorithmic information theory. First of all, it is important to remember
Lemma 3.1. For every x, y ∈ {0, 1}∗ and n ∈ N,
some basic and important relations in algorithmic information theory [8, 9, 17, 20].
(1)

C (x) ≤ l(x) + O(1)
C (y  x) ≤ C (y) + O(1)
K (x) ≤ l(x) + O(lg(l(x)))
K (y  x) ≤ K (y) + O(1)
C (y   x) ≤ K (y   x) + O(1) ≤ C (y   x) + O(lg(C (y   x)))
K (x) ≤ K (x, y) + O(1) ≤ K (y) + K (x  y) + O(1)
C (x) ≤ C (x, y) + O(1) ≤ C (y) + C (x  y) + O(lg(C (x, y)))
C (x) ≤ K (x) + O(1)
K (n) = O(lg(n))
K (x) ≤ C (x) + K (C (x)) + O(1)

(2)

(3)

(4)

(5)

(6)

(7)

(8)

(9)
IA (x; y) = IA (y ; x) ± O(1)
(10)
Note that the inverse relation K (x, y) + O(1) ≥ K (y) + K (x  y) + O(1) does not
(11)
hold in general in Equation (7). In fact, one can show that K (x, y) = K (y) + K (x  
y , K (y)) ± O(1), which is the key step to prove Equation (11). In this way, we
MAG Gc , i.e., the irreducible information necessary to determine/compute E (Gc ),
is formally captured by IA (E (Gc ) ; E (Gc )) = K (E (Gc )) ± O(1). In the present
have that the notion of network topological (algorithmic) information of a simple
article, wherever the concept of information is mentioned, we are in fact referring
to algorithmic information.

=

n=1

3.2. Multiaspect graphs and graphs isomorphism. In order to represent mul-
tidimensional networks, we are basing our work on a generalized graph representa-
tion of dyadic relations between n-tuples [30, 31] called multiaspect graphs (MAGs).
Corollary 3.1. For every simple MAG Gc of order p > 0, where al l aspects are non-
Directly from [30], one has that a simple MAG is basically equivalent to a classical
(i.e., simple labeled) graph:
(V , E ) with  V (G)  = p∏
 A (Gc )[n]  that is isomorphic to Gc .
empty sets, there is a unique (up to a graph isomorphism) classical graph GGc
We also have that the concepts of walk, trail, and path become well-deﬁned for
MAGs analogously to within the context of graphs. See Section 3.5 in [30].
3.3. Algorithmically random multiaspect graphs. In order to study plain
extended the deﬁnition of plain algorithmically random (i.e., δ( V (G) )-C-random)
algorithmic randomness (i.e., C-randomness) of simple MAGs, we extended in [1]
the concept of labeling in classical graphs to simple MAGs. Then, we directly
classical graphs to simple MAGs. Thus, by combining Corollary 3.1 with well-
≠ ࢝ be an arbitrary recursively labeled family of simple
MAGs Gc . Then, for every Gc ∈ FGc
known inequalities in algorithmic information theory [9, 17, 20], we showed that:
Theorem 3.1. Let FGc

Gc is (δ( V(Gc ) ) + O(log2
( V(Gc ) )))-C-random
G is (δ( V (G) ) + O(log2
( V (G) )))-C-random
iﬀ
where G is isomorphic (as in Deﬁnition 2.6) to Gc .

9

The existence of such recursively labeled inﬁnite families also follows from [1]
(see also Lemma 3.3 and Theorem 3.2):

Lemma 3.2. There is a recursively labeled inﬁnite family FGc of simple MAGs
Gc with arbitrary symmetric adjacency matrix such that every one of them has the
same order p.

In addition, it is shown in [1] that the binary string that determines the pres-
ence or absence of a composite edge in Deﬁnition 2.4 can be properly deﬁned for
for every Gc ∈ FGc and x ∈ {0, 1}∗ , where x is the characteristic string of Gc , the
recursively labeled families:
Corollary 3.2. Let FGc be a recursively labeled family of simple MAGs Gc . Then,
fol lowing relations hold:
(12)

C (E (Gc )   x) ≤ K (E (Gc )   x) + O(1) = O(1)
C (x   E (Gc )) ≤ K (x   E (Gc )) + O(1) = O(1)
K (x) = K (E (Gc )) ± O (1)
IA (x; E (Gc )) = IA (E (Gc ); x) ± O(1) = K (x) − O (1) = K (E (Gc )) ± O(1)

(13)

(14)

(15)

In summary, Theorem 3.1 shows that the plain algorithmic complexity of sim-
ple MAGs and of its respective isomorphic classical graphs are roughly the same,
except for the amount of algorithmic information necessary to encode the length
of the program that performs this isomorphism on an arbitrary universal Turing
incompressibility of E (Gc )). That is, more formally, every network topological
machine. In fact, regarding the connections through composite edges, this shows
that not only “most” of the network topological properties of G are inherited by
Gc (and vice-versa), but also “most” of its topological incompressibility (i.e., the
being (δ( V(Gc ) ) + O(log2
( V(Gc ) )))-C-random will be inherited by Gc from G, if
G is (δ( V (G) ) + O(log2
( V (G) )))-C-random and  V (G)  is large enough. And
property (regarding the connections through composite edges) that derives from Gc
the inverse inheritance also holds. For example, we extended in [1] some results
MAGs Gc . Then, the fol lowing hold for large enough Gc ∈ FGc :
from [6, 20] on plain algorithmically random classical graphs to simple MAGs:
(1) The degree d(v) of a composite vertex v ∈ V(Gc ) in a δ( V(Gc ) )-C-random
Corollary 3.3. Let FGc be an arbitrary recursively labeled inﬁnite family of simple
MAG Gc ∈ FGc satisﬁes
(2) o( V(Gc ) )-C-random MAGs Gc ∈ FGc have
2
4

 = O  V(Gc )  (δ( V(Gc ) ) + O(log2
 V(Gc ) 
± o( V(Gc ) )

d(v) −   V(Gc )  − 1

( V(Gc ) )))

disjoint paths of length 2 between each pair of composite vertices u, v ∈
V(Gc ). In particular, o( V(Gc ) )-C-random MAGs Gc ∈ FGc have composite
10
Thus, an incompressible simple MAG under randomness deﬁciency δ( V(Gc ) ) =
o( V(Gc ) ) tends to be an expected “almost regular” graph in the limit when the
diameter 2.
network size increases indeﬁnitely; for suﬃciently large set of composite vertices,
o( V(Gc ) )-connected. Furthermore, from Deﬁnition 2.19, one can build an inﬁnite
these MAGs also cross a phase transition in which the diameter between composite
vertices becomes 2; with respect to k-connectivity, as deﬁned in [6], they are
family of simple MAGs in which every member is O(1)-K-random and, in turn,
that are O(1)-K-random.
also retrieve their plain algorithmically randomness [1]:
Lemma 3.3. There is a recursively labeled inﬁnite family FGc of simple MAGs Gc
such that, for every Gc ∈ FGc and n ∈ N, if x n is its characteristic string and
is O(log2
Theorem 3.2. Let FGc be a recursively labeled inﬁnite family of simple MAGs Gc
n =  Ec (Gc ) , then x ∈ [0, 1] ⊂ R is O(1)-K-random. Thus, every MAG Gc ∈ FGc
( V(Gc ) ))-C-random and O(1)-K-random. In addition, there is such a
family FGc with Ω = x ∈ [0, 1] ⊂ R, where Ω is the halting probability [7, 9].
4. Snapshot-like multidimensional networks

 V(Gc ) 

±

4

This section presents a theoretical investigation of the consequences of the re-
sults in Section 3.3 to some of the common representations of dynamic networks
and multilayer networks. As we will explain and formalize in Section 4.2, we choose
a diﬀerential approach to the dynamic and multilayer case, so that both become
particular cases of general multidimensional networks while keeping their own dis-
tinct physical interpretation of what each ‘dimension’ (or aspect) [30–32] repre-
sents. In this way, we ﬁrst present the investigation of the algorithmic complexity
of snapshot-based representations of dynamic networks. Then, in Section 4.2, we
introduce the same kind of investigation for multiplex networks.

4.1. Snapshot-dynamic networks. In the context of real-world complex net-
works analysis, one may highlight some important representation models of dy-
namic networks, such as, time-varying graphs (TVGs) [11, 30, 31, 34], temporal
networks (TNs) [24, 27], temporal graphs (TGs) [21], and snapshot networks (SNs)
[27, 34]. In this direction, we follow the same unifying and universal approach in
[34] with the purpose of showing that a particular class of dynamic networks (in
the case, snapshot-dynamic networks) displays less irreducible information content
than a more general representation of dynamic networks such as TVGs. However,
studying the advantages and disadvantages of each representation model in terms of
network analysis is not in our current scope. Thus, we focus on studying a general
snapshot-based representation of dynamic networks and its algorithmic randomness
in relation to time-varying graphs (TVGs) and its algorithmic randomness. Note
that TVGs are second order multiaspect graphs (MAGs) [11, 33, 34].
The main idea is to: ﬁrst, brieﬂy discuss equivalences of some of the main rep-
resentations of snapshot-like dynamic networks; secondly, study the algorithmic
randomness of snapshot-dynamic networks, which can be represented by a particu-
lar class of TVGs; and, then, compare with the algorithmic randomness of general

11

undirected dynamic networks, which are arbitrary simple TVGs, i.e., second order
simple MAGs.
Except for the cases in which the pertinence of the vertices in each time in-
stant (and not only its connectivity in each time instant) do matter in the network
Gi = (Vi , Ei ) in the form (G0 , . . . , Gtmax
analysis—see node-alignment below—, one can easily show that a snapshot-based
). On the other hand, in [34], a snapshot
representation as in [27] is equivalent to the snapshot-based representation in [34].
To this end, note that, in [27], a snapshot network is deﬁned as a sequence of graphs
network is a TVG composed of only spatial edges, i.e., edges that connect two
vertices at the same time instant only. In other words, a snapshot-like dynamic
network in [34] is a special case of dynamic network that can be solely represented
by, for example, the main diagonal blocks of the adjacency matrix of the isomorphic
graph to the TVG in Figure 1.



Vi ∈(V0 ,...,Vtmax ) Vi

V =

Figure 1. The adjancency matrix of the isomorphic graph to the
For the sake of simplicity, we call an arbitrary TVG Gt = (V, E , T) composed
TVG, which represents a sequentially coupled node-aligned dy-
namic network.
(V0 , . . . , Vtmax
) in Gi = (Vi , Ei ) may be mapped onto a larger vertex set
of only spatial edges as a spatial TVG. Therefore, the sequence of vertex sets
such that Gt = (V, E , T),  {Gi   Gi ∈ (G0 , . . . , Gtmax
(u, v) ∈ Ei (Gi ) ⇐⇒ (u, ti , v , ti ) ∈ E (Gt ) ,
where 0 ≤ i ≤ tmax . Inversely, a spatial TVG can be univocally represented by a
sequence of graphs (G0 , . . . , Gtmax
(16)
) as in [27] by simply assuming Vi = Vj for every
0 ≤ i ≤ tmax and 0 ≤ j ≤ tmax , so that the equivalence in Equation (16) also holds.
In most cases, a node-alignment [12, 18] hypothesis (i.e., Vi = Vj for every 0 ≤
i ≤ tmax and 0 ≤ j ≤ tmax ) is assumed, so that no additional information would be
needed to determine which vertices do not belong to a speciﬁc time instant. Thus,
for the present purposes of this article, we assume that the snapshot network is

)}  =  T(Gt ) , and

12
an irreducible information dependency on the sequence (V ࢨ V0 , . . . , V ࢨ Vtmax
node-aligned. Nevertheless, an interesting future research would be to investigate
) of
the worst-case scenarios in which additional information is needed to recover the
original snapshot network that is not node-aligned from the spatial TVG. Indeed,
excluded vertices may take place in a similar manner to the one on the companion
tuple in [1, Theorem 3.1].
In any event, note that retrieving the correspondent
spatial TVG [30, 34] from the snapshot network [27] is always straightforward by
the addition of empty nodes [18]] (or, in MAG terminology, unconnected composite
vertices [31]), since every TVG is deﬁned on the set of composite vertices [30] and,
stricting the set E(Gt ) of all possible composite edges of a TVG Gt into another
therefore, is always node-aligned by deﬁnition.
set E′ (Gt ) such that, for every e ∈ E(Gt ) and i, j ∈ N,
Another formalization of a snapshot-like dynamic network may be through re-
e = (u, ti , v , tj ) ∈ E′ (Gt ) ⇐⇒ j = f (i) ,
where f ∶ {0, f (0), f (f (0)), . . . , f −1 ( T(Gt )  − 1)} → {f (0), f (f (0)), . . . ,  T(Gt ) −1}
these restricted TVGs Gt = (V, E ′ , T), where E ′ (Gt ) ⊆ E′ (Gt ), may present ad-
is a strictly increasing bijective function deﬁned on any recursive iteration. Thus,
vantages when considering a more realistic scenario in which relations or commu-
nications between nodes are not instantaneous or demand non-equal time intervals
over time. In addition, if one allows temporal edges (i.e., edges connecting the same
node at two distinct time instants [34]), which are directly analogous to coupling
edges [18] in the multilayer case, some assumptions like the one that guarantees the
transitivity on a node in the case it is disconnected within one or more snapshots
become unnecessary.
In fact, unlike the multilayer case in which there may not be a physical inter-
pretation of the necessity of preserving the pairwise ordering of layers—as we will
also discuss in Section 4.2—, this assumption of transitivity is represented by a
restriction on the set of temporal (or coupling) edges: we say a TVG is sequential ly
the time instant ti to the time instant ti+1 only and, for every 0 ≤ i ≤ tmax , every
coupled if all the temporal (or coupling) edges are connecting the same node u from
node u has a temporal (or coupling) edge to itself from the time instant ti to the
time instant ti+1 . The reader is invited to note that sequentially coupling is an even
stronger restriction of the set of coupling edges than saying that the couplings are
diagonal and/or categorical as in [18]—see also Section 4.2. That is, if the network
in which j = i + 1. An example of sequentially coupled networks are the temporal
is sequentially coupled, there is no other temporal (or coupling) edge connecting
a node u at time instant ti to the same node u at time instant tj than the case
Thus, one can see that a snapshot-like dynamic network in the form (V, E ′ , T)
networks as deﬁned in [5], should they be also node-aligned.
enables one to better represent the cases in which the sequential coupling does
not hold in general; or, in other words, in which some nodes may not relay in-
formation for future communication in forthcoming time instants. Related to this
This representation of snapshot-like dynamic networks in the form (V, E ′ , T) can
issue, it is a consequence of the result we will demonstrate in Section 5 that arbi-
also be reduced to spatial TVGs (V, E , T′′ )—i.e., without the restrictions in the
trary incompressible simple TVGs are not sequentially coupled. See Corollary 5.2.

′′

i

′′

i

i

) ∈ E (Gt )

 T′′ (Gt )  ≤  T(Gt )  − 1, and

other set T′′ (Gt ) of time instants while preserving the previous ordering: for ex-
13
≡ (ti , tf (i) ), where
set of composite edges—by injectively mapping the set of time intervals onto an-
ample, one runs a recursive bijective procedure that makes t′′
e = u, ti , v , tf (i)  ∈ E′ (Gt ) ⇐⇒ (u, t
Again, as also occurred for snapshot networks (G0 , . . . , Gtmax
), retrieving the spatial
TVG from a snapshot-like dynamic network (V, E ′ , T) is straightforward, whereas
i , v , t
mine which is the time interval (ti , tf (i) ) that each t′′
the inverse conversion may require additional information, in particular to deter-
case information dependency of a non-uniform function f (i) will be necessary; and
is representing (in the case
these intervals are not uniformly equal). Thus, a future investigation of the worst-
to determine/compute E ′ ) carried by an arbitrary (V, E ′ , T) may be less com-
the irreducible topological information (i.e., the irreducible information necessary
pressible than that of spatial TVGs.
In this way, for the purposes of this article, we assume hereafter the represen-
tation of a snapshot-like dynamic network as a spatial TVG; and we call them
simply as snapshot-dynamic network. Note that underlying properties in snapshot-
dynamic networks, like the sequential coupling, are ﬁxed and the presence of such
composite edges are always recursively decidable from the composite vertices’ la-
bels. Therefore, the algorithmic information of a spatial TVG and the algorithmic
information of a spatial TVG with the addition of sequential couplings can only
diﬀer by a constant (that only depends on the chosen language LU ) and, thus, is
negligible in our forthcoming results.
e ∈ E (Gt ) in a traditional TVG Gd
= (V, E , T). Note that a traditional MAG is
It is straightforward to calculate the maximum number of spatial directed edges
= (V, E , T) as a TVG without (spatio-temporal [34])
a (directed or undirected) MAG without (composite) self-loops [1, 30]. Moreover,
from [11, 34], we have that a TVG is a second order MAG. Therefore, we deﬁne a
traditional directed TVG Gd
T(Gd
self-loops. This way, we will have that there are
possible spatial directed edges.
= (V, E , T) as a particular case of a simple second order MAG, where a
From a simple graph (i.e., an undirected graph without self-loops) perspective,
we may consider spatial TVGs as sequences of simple graphs. We call a simple
TVG Gu
 T(Gu
simple MAG is deﬁned in [1] as a traditional undirected MAG. This way, we will
have that there are
2
= (V, E , T) that belongs
Now, let G′
possible spatial undirected edges in simple spatial TVGs.
t denote an arbitrary simple spatial TVG Gu
edge in E (G′
to a recursively labeled inﬁnite family FG
); and we call it the characteristic string of G′
of arbitrary simple TVGs. The existence
of such a family is guaranteed by Lemma 3.2. Directly from Deﬁniton 2.4, we
have the binary string that univocally represents the presence or absence of an
the information that is necessary to computably retrieve the entire G′
t [1].
In this sense,
from Corollary 3.2, one can see that a characteristic string promptly contains all
t , except for

)2 − V(Gd

) 2 −  V(Gu

)    V(Gu

t

)

) V(Gd

t

) 



t

t

t

t

t

′

t

t

t

t

t

14

the information required to apply a previously known recursive way to label the
composite vertices and order the composite edges. In fact, as shown in [1], this
exception shall be taken into account for MAGs in general. This occurs because,
aspects [30]—, the information necessary to compute E (Gc ) from a characteristic
for certain multidimensional networks that can only be represented by a MAG with
a high enough order—note that the order of a MAG is deﬁned as the number of
string x may be dominated by the information necessary to deﬁne the sizes and the
ordering of the dimensions (in the case of MAGs, the aspects). See [1, Theorem
3.1].
It is also important to note that the information encoded in the characteristic
string may be displaying a decompressed form of its algorithmic information con-
tent. To tackle this issue, we deﬁne the algorithmic-informational version of the
characteristic string, and thus formalizing such a notion of topological (algorithmic)
information—see Theorem 4.1, Corollary 3.2, and Section 3.1—that is potentially
agnostic with respect to node labeling or indexing:
∈ LU be ﬁxed and only depend on FGc . We say a binary string y ∈ {0, 1}∗ is
an algorithmical ly characteristic string of Gc with respect to FGc iﬀ U(y , p′′
1 , p′′
Deﬁnition 4.1. Let FGc be a recursively labeled family of simple MAGs Gc . Let
Thus, if y is such an algorithmically characteristic string, it is immediate to show
that

p′′
E (Gc ) and U(E (Gc ) , p′′

) =

2

2

1

) = y .
C (E (Gc ) y) ≤ K (E (Gc ) y) + O(1) = O(1)
C (y  E (Gc )) ≤ K (y  E (Gc )) + O(1) = O(1)
K (E (Gc ) y) + O(1) = O(1)
K (y  E (Gc )) + O(1) = O(1)

hold independently of the choice of Gc in FGc . On the other hand, it may not be
the case that the opposite implication (i.e.,

and

2

2

U(E (Gc ) , p′′

) = E (Gc ) and

and
∈ LU such that U(y , p′′
implying the existence of constants p′′
) = y) does hold in general—and this should be an interesting future
1 , p′′
research. For example, a possible question in this direction might be whether it is
possible or not to construct a recursively labeled inﬁnite family of MAGs in which
there is an inﬁnite subfamily of MAGs that are K-trivial [17], but not computable,
with respect to a string y .
In any event, from the proof of Corollary 3.2 presented in [1], we have that
Deﬁniton 4.1 is always satisﬁable by taking the algorithmically characteristic string
y as, for instance, the very characteristic string. This holds because of the recur-
sively labeling of the entire family of MAGs, as in Deﬁnition 2.16. However, since
one surely knows there are

1

 ( V(G′

t

)   T(G′

) )2 −  V(G′

)   T(G′

) 

t

t

 −  T(G

′

t

t

)    V(G′

t

) 2 −  V(G′

) 

t



2
that are sequential couplings) and G′
non-existent non-spatial undirected edges (including non-spatial undirected edges
t is a second order simple MAG Gc , one can

2

15

t

compress the characteristic string of G′
t in such a way that the resulting algorithmi-
cally characteristic string retains the algorithmic information carried, or conveyed,
= (V, E , T) be a simple spatial TVG that belongs to a re-
Theorem 4.1. Let G′
by the usual characteristic string:
y ∈ {0, 1}∗ that is an algorithmically characteristic string of G′
cursively labeled inﬁnite family FG
of simple TVGs. Then, there is a binary string
 + O (log2
t such that

K (y) ≤ l(y) + O(1) ≤  T(G

)   T(G

( V(G

) )) ,

′

′

′

′

t

t

t

t

t

t

t

2

)    V(G′
) 2 −  V(G′
) 
∗ ) ≤ K (x   y) + O (1) ≤ O (1) ,
K (x) ≤ K (y) + O(1) ,
K (y) ≤ K (x) + O(1) ,
∗ ) ≤ K (y   x) + O(1) ≤ O(1)

′ ) =  T(G

)    V(G′

) 2 −  V(G′

K (x   y
K (y   x
and
hold, where x is the characteristic string of G′
t .
Proof. The main idea of the proof is based on showing a Turing equivalence between
the string y and its respective characteristic string x. Then, as in the proof of
characteristic string x and the string E (G′
). So, ﬁrst let y ′ ∈ {0, 1}∗ be any
Corollary 3.2 presented in [1], we will recover the Turing equivalence between the
arbitrary binary string with
l(y
universal Turing machine U that takes j ∈ N as input and returns the j -th edge
Let p′
∈ {0, 1}∗ be a binary string that represents an algorithm running on a preﬁx
in Ec (G′
). The existence of such p′
2
labeling in [1] (see Deﬁnition 2.16). Moreover, p′
. Let s1 ∈ {0, 1}∗ be a binary string that represents an algorithm
2 is guaranteed by the deﬁnition of recursively
2 is independent of the choice of G′
in the family FG
(2) calculates U(j ′ , p′
(1) takes p′
2 , y ′ and j as inputs;
) for every j ′ ≤ j ;
running on a preﬁx universal Turing machine U that:
(3) enumerates all the spatial edges ej ′ = U(j ′ , p′
) as a subsequence of the
sequence of possible undirected edges in (e1 , . . . , ej );
(a) 0, if U(j, p′
) is not a spatial edge;
(4) and returns:5
(b) 1, if U(j, p′
) is the i-th spatial edge and the i-th digit in y ′ is 1;
(c) 0, if U(j, p′
) is the i-th spatial edge and the i-th digit in y ′ is 0.
whether tu = tv or not in e = (u, tu , v , tv ), which is a decidable (and computationally
cheap) procedure. Let s2 ∈ {0, 1}∗ be a binary string that represents an algorithm
Note that deciding whether an edge e is spatial or not follows directly from deciding
running on a preﬁx universal Turing machine U that:

) 



′

′

2

2

2

2

2

2

t

t

t

t

t

t

of the snapshot-dynamic network, one can add here a clause also returning 1 if U(j, p′
2 ) is a
5 Alternatively, in the case the sequential couplings were not excluded in the representation
sequential coupling. The reader is invited to note that the theorem holds anyway.

16

′

′

t

t

t

t

t

t

t

t

t

t

.

2

) 

t

 ;

′

t ) T(G

′

t )

 ∈ N .

)   T(G′

′

t ) T(G
t )2 −V(G

′

 ( V(G′

(1) takes s1 , p′
2 , y ′ and
(2) calculates U(j, y ′ , p′
as inputs;

 ( V(G′
)   T(G′
) )2 −  V(G′
)   T(G′
) 

1 ≤ j ≤  ( V(G′
)   T(G′
) )2 −  V(G′
)   T(G′
) 

) )2 −  V(G′
)   T(G′
( V(G′
)   T(G′
K (x) ≤ K (y) + O(1) ≤ l(k , y
≤ l(y
( V(G
)   T(G
∗ ) ≤ K (x   y) + O (1) ≤ O (1) .

2 , s1 ) for every j with
2
x = z1 . . . zn
2
(3) and returns the binary string
zi = 1 ⇐⇒ U(i, y
2 , s1 ) = 1 ,
such that
where zi ∈ {0, 1} with 1 ≤ i ≤ n =  V(G
, p
Now, let y = k , y ′ , p′
2 , s1 , s2 , where k is the self-delimiting binary representation
of
We know one can encode k in O log2
) )2  bits. Therefore, since
2 , s1 , and s2 are ﬁxed and independent of the choice of G′
2
2 , s1 , s2 ) + O(1) ≤
t , we will have that, by
the minimality of the preﬁx algorithmic complexity,
′ ) + O log2
, p
K (x   y
and
On the other hand, in order to show that K (y) ≤ K (x) + O(1), let s3 ∈ {0, 1}∗ be
a binary string that represents an algorithm running on a preﬁx universal Turing
(1) takes p′
machine U that:
(2) enumerates all the spatial edges using program p′
(3) and builds the binary string y ′ = y ′
= 1, if j corresponds to the i-th spatial edge and the j -th digit of x
2 , s1 , s2 , and x as inputs;
1 . . . y ′
(a) y ′
k′ such that:
2 ;
(b) y ′
= 0, if j corresponds to the i-th spatial edge and the j -th digit of x
(4) ﬁnally, s3 returns the binary string k , y ′ , p′
is 1;
2 , s1 , s2  = y .
is 0;
Note that x was already given as input and
Therefore, since p′
2 , s1 , s2 , and s3 are ﬁxed and independent of the choice of G′
2
K (y) = K (k , y
2 , s1 , s2 ) ≤ K (x, p
2 , s1 , s2 , s3 ) + O(1) ≤ K (x) + O(1)
t ,
we will have that, by the minimality of the preﬁx algorithmic complexity,

l(x) =  ( V(G′

) )2 −  V(G′

)   T(G′

)   T(G′

 .

) )2 

′

t

) 

t

t

t

′

′

, p

′

′

t

′

t

t

′

p′

t

t

i

i

17

2

2

and

);

K (E (Gc )   x) ≤ l (p) ≤ O(1)

∗ ) ≤ K (y   x) + O(1) ≤ O(1)

K (y   x
Now, let p be a binary string that represents the algorithm running on a universal
Turing machine that:
(2) for 1 ≤ j ≤ l(x), reads each j -th bit of x;
(1) receives the string x as its input;
(4) and, from the outputs ej of these programs j, p′
(3) calculates U (j, p′
, returns the string
e1 , z1  , . . . , en , zn , where: zj = 1, if the j -th bit of x is 1; and zj = 0, if
Thus, since p′
the j -th bit of x is 0.
2 is ﬁxed, we will have that there is a self-delimiting binary encoding
U (x, p) = e1 , z1  , . . . , en , zn 
holds. Then, by the minimality of K (⋅), we will have that
of p such that
string x from E (Gc ), we will have another program q such that there is a self-
Analogously to program p, using program p′
1 instead of p′
U (e1 , z1  , . . . , en , zn  , q) = x
2 in order to build the
delimiting binary encoding of q such that
holds and, by the minimality of K (⋅), we have that
Note that p, q , p′
1 , p′
let p′′
U(U(y), p) = e1 , z1  , . . . , en , zn  = E (Gc ) .
2 , s1 , s2 , s3 are ﬁxed. Therefore, in order to ﬁnish the proof, just
1 be the binary string that represents the algorithm running on a universal
Turing machine U that receives y as input and returns the value of
Similarly, let p′′
universal Turing machine U that receives E (Gc ) as input and returns the value
2 be the binary string that represents the algorithm running on a
2 , s1 , s2 , s3 ) = y .
of
= (V, E , T) that belongs to a recursively
Thus, for every simple spatial TVG G′
labeled inﬁnite family FG
Theorem 4.1, and Corollary 3.2,
C E (G
of simple TVGs, we will have that, from Lemma 3.1,

K (x   E (Gc )) ≤ l (q) ≤ O(1)

U(U (E (Gc ) , q) , p

)  ( V(G

))   T(G

(cid:3)

′

′

′

′

′

t

t

t

t

t

′

)) ) ≤ K (E (G
)) + O(1) ≤
≤  T(G
)    V(G′
) 2 −  V(G′
) 

( V(G
)   T(G
) ))

′

t

t

+ O (log2
2
Corollary 3.2, and Theorem 3.2 that, for arbitrary O(1)-K-random simple TVGs
holds.6 On the other hand, as shown in [1], we directly have from Lemma 3.3,

6 In fact, one can even improve this inequality to show that C E (G′

t )  ( V(G′
t ))   T(G′
t )) ) ≤

′

′

t

t

t

t

O  T(G′
t )   V(G
t )2 −V(G
t )

′

′

.

2

18

2

Gt ,

K (E (Gt )) ≥  ( V(Gt )   T(Gt ) )2 −  V(Gt )   T(Gt ) 
 − O(1)
C (E (Gt )   ( V(Gt ))   T(Gt )) )) ≥  ( V(Gt )   T(Gt ) )2 −  V(Gt )   T(Gt ) 

( V(Gt )   T(Gt ) )) .
 −  T(Gt )    V(Gt ) 2 −  V(Gt ) 

( V(Gt )   T(Gt ) ))

and
−O (log2
Therefore, for large enough sets of time instants, O(1)-K-random simple TVGs
2
carry at least
−O (log2
more topological (or network) irreducible information than any simple spatial TVG
could carry.

 ( V(Gt )   T(Gt ) )2 −  V(Gt )   T(Gt ) 

2

2

4.2. Multiplex networks. Other network models of increasing importance in net-
work science are those in which the nodes and/or connections between nodes may
● social networks,
have distinct features [5, 10, 13, 14, 18, 19, 30–32] other than the time dependency.
For example, one may diﬀerentiate, in the case of:
– between connection features, such as friendship, family, professional
colleagues, face-to-face interaction, email interaction, etc [10, 12, 18];
● biological networks,
– or between node features, such as gender, online platform, school, city,
company, etc [10, 18];
– between connection features, such as distinct nature of protein-protein
reactions [14], neuronal interactions (in particular, either through chem-
ical or ionic channels) [5], etc;
● multimodal transportation networks,
– or between node features, such as distinct species, gene pool, commu-
nity, location [25], etc;
– between connection features, such as bus network, the subway network,
the air transportation network [19, 29], etc;
– or between node features, such as airline companies [29], etc.
Usually in the modeling of complex networked systems, each of these features has
been called a layer [5, 18, 29, 31]. Particularly, in this section, we focus on con-
nection features, analyzing the theoretical characteristics of the so called multiplex
networks [12, 18], which are a type of multilayer network. We ﬁrst brieﬂy discuss
some representation equivalences. Then, we apply an analogous investigation to
that of Section 4.1.
Before presenting multiplex networks, it is important to recover some deﬁnitions
and nomenclatures from the previous literature on the sub ject, clarifying conditions
or assumptions behind the mathematical concepts, so as to enable unambiguous ap-
plications of our theoretical results in future studies of real-world networks. In doing
so, we are not only grounding our nomenclature on, but also following the same
purpose of terminology uniﬁcation in [18]. In this way, we choose an approach in

19

● L = {La }d

order that one can distinguish between multilayer networks and dynamic networks,
even though both can be viewed as just distinct physical interpretations of the same
(or, equivalently, in [5]), a multilayer network M = (VM , EM , V , L) is understood as
kind of network’s aspect (or dimension).
with the multidimensional (i.e., high-order) approach formalized in [30, 31]. In [18]
To this end, we compare a well-known deﬁnition of multilayer network as in [18]
an interconnected and/or intraconnected labeled collection of graphs. Each of these
graphs represents a ‘layer’ whose (distinct or not) vertex sets can be either linked
network M = (VM , EM , V , L) [18] is deﬁned by:
within this ‘layer’ or linked to a vertex in another ‘layer’. Formally, a multilayer
● V denotes the set of all possible vertices v ;
a=1 denotes a collection of d ∈ N sets La composed of elementary
layers α ∈ La ;
● VM ⊆ V × L1 ×  × Ld denotes the subset of all possible vertices that belong
to a ‘layer’ L1 ×  × Ld ;
● EM ⊆ VM × VM denotes the set of interlayer and/or intralayer edges con-
necting two node-layer tuples (v , α1 , . . . , αd ) ∈ VM .
An interlayer edge is deﬁned as ((u, α1 , . . . , αd ) , (v , β1 , . . . , βd )) ∈ EM such that
(α1 , . . . , αd ) ≠ (β1 , . . . , βd ) and an intralayer is deﬁned as ((u, α1 , . . . , αd ) , (v , β1 , . . . , βd )) ∈
EM such that (α1 , . . . , αd ) = (β1 , . . . , βd ). In addition, one deﬁnes a coupling edge
((u, α1 , . . . , αd ) , (v , β1 , . . . , βd )) ∈ EM as an interlayer edge with u = v .
nition 2.1) and a multilayer M = (VM , EM , V , L): V is the usual set of vertices
V (G ) ≡ A (G )[1]; each set La is the a-th aspect A (G )[a] of a MAG G ; VM
is a subset of the set of all composite vertices V(G ), where a node-layer tuple
Actually, there are in fact some equivalences between a MAG [30] (see Deﬁ-
(v , α1 , . . . , αd ) ∈ VM is a composite vertex v ∈ V(G ); EM ≡ E (G ) is a subset
of the set of all composite edges E(G ). The only distinctive characteristic of
M = (VM , EM , V , L) and G = (A , E ) is the possibility that one or more vertices do
M is node-aligned [12, 18], i.e., VM = V × L1 ×  × Ld , this multilayer network M is
equivalent to a (d + 1)-order MAG. Thus, a node-aligned multilayer network with
d layers is a network that can be mathematically represented by a (d + 1)-order
not belong to one or more aspects of a MAG. Therefore, if a multilayer network
MAG.
In most cases, as mentioned in Section 4.1, a node-alignment hypothesis can be
information needed to retrieve VM from V × L1 ×  × Ld . Due to this possibility, the
assumed [18], except for the cases in which the pertinence of the vertices in each
layer (and not only its connectivity) do matter in the network analysis.
In this
MAG G with d + 1 aspects and EM = E (G ). Anyway, for the purposes of the present
regard, we also leave as future research the investigation of the worst cases for the
algorithmic information carried by M may be larger than that of the correspondent
that EM  denotes the string E (G ) with respect to such correspondent MAG G ,
where EM ∶= E (G ).
article, we assume hereafter that the multilayer networks M are node-aligned, so
Besides the above formalities, we choose a distinguishing interpretation of the
and “multilayerism”.7
two currently studied multidimensional structures in complex networks: dynamism
dynamic networks are considered as a particular type of multilayer networks), we are
In accordance with [29–31], and unlike [5, 13, 18] (where

7 And this distinction will be reﬂected in our nomenclature and in our notation.

20

considering a time-varying graph topology, like in dynamic networks in Section 4.1,
and a multilayer topology, like the ones of the above described M , as two distinct
multidimensional structures.
At a ﬁrst glance, both the mathematical representations of a ﬁnite time progres-
sion and of a ﬁnite number of diﬀerent layers can be performed by an ordered set
of labels (or indexes). However, besides distinct physical properties, a multilayer
network may not need to obey a sequential indexing of layers that corresponds to
a meaningful ordering of the physical counterparts of each layer. This promptly
diﬀers from the sequential coupling introduced in Section 4.1. For example, node
features (e.g., species, gender, or company) or connection features (e.g., bus net-
work or email interaction) in the multilayer case do not have an intrinsic underlying
structure that indicates the direction that the information is ‘ﬂowing through’ an
edge, whereas the opposite holds in principle for time instants in dynamic networks.
Moreover, as we will show in Section 5, some topological properties, such as the
presence of crosslayer edges, may happen to make sense in multilayer networks,
whereas, in dynamic networks—specially, in snapshot-dynamic networks—, some
topological properties, such as the presence of transtemporal edges, do not.
In addition, we are assuming a general meaning of the nomenclature ‘multidi-
mensional’ so as to encompass both each individual node (or connection) feature8
and each type of the individual node (or connection) features. We say that each
type of individual feature, such as being an arbitrary time instant or being an arbi-
trary layer, is a node dimension. Thus, a node dimension corresponds to an aspect
of a MAG, as in [29–31]. This is in consonance with a common understanding of a
dimension as being an aspect or property in which a particular ob ject can assume
diﬀerent values, names, etc.
through a family relation lies on a diﬀerent ‘dimension’ than that of a node u′ linked
However, note that this diﬀers from some usages of the term in the literature of
to a node v ′ through a professional relation. In this sense, the particular ob ject that
network science, where for example one may say that a node u linked to a node v
can assume diﬀerent values is the connection itself and the diﬀerent values are the
nodes. This way, any element of an aspect of a MAG other than the set of vertices
represents a ‘dimension’. In fact, such usage of the term may be also found in an
overlap with that of multiplex networks [4, 5]. Thus, in order to avoid ambiguities,
we call this kind of dimension as connection dimension. As a consequence, it derives
directly from our chosen nomenclature that every connection dimension belongs to
a node dimension.
In this way, our approach ensures that in any case one employs multidimensional
networks, it can either mean networks with more than one node dimension, e.g.,
a dynamic network, or networks with more than one connection dimension (even
if there is only one extra node dimension containing these connection dimensions),
e.g., a social network with only two types of interactions, like family and profes-
sional. Thus, unlike for example in [4, 5], in which multidimensional networks refers
basically to multiplex networks, we adopt the convention of deﬁning a general mul-
tidimensional network as a network that has more than one node dimension and
more than one connection dimension. As a consequence, both multilayer networks
and dynamic networks become particular cases of general multidimensional net-
works. Also note that a network with only one node dimension and connection

8 See ﬁrst paragraph of this section for more examples of these individual features.

21

a=1

dimension is a monoplex (i.e., single-layer or monolayer) network [12, 15, 18] and,
consequentially, is totally equivalent to a traditional graph.
In addition, we deﬁne a high-order network as a network that can be mathemat-
ically represented by a high-order MAG, i.e., a MAG with two or more aspects,
each containing two or more elements [1, 29, 32]. Therefore, every node-aligned
m(G ), which is deﬁned as the MAG G ) with the unconnected composite vertices
general multidimensional network is a high-order network. In fact, it is shown in
section 3.3 in [31] that one can, for instance, construct a main-component graph
excluded. In this sense, if one allows the a priori exclusion of arbitrary compos-
ite vertices, it is possible to deﬁne MAGs that are not node-aligned, which would
establish a complete equivalence between general multidimensional networks and
high-order networks according to our nomenclature. However, in consonance with
Section 2.1 and [1], we choose to stick with the notion of a MAG deﬁned on a full
set of possible composite vertices in this article. Hereafter, unless speciﬁed diﬀer-
ently, multidimensional networks refers to node-aligned general multidimensional
(i.e., high-order) networks and dimension refers to a node dimension. Whereas we
are focusing on the multiplex case in this section, we will return to higher-order
As in [12, 18], and similarly in [15], a multiplex network M is a particular case of
multilayer networks M = (VM , EM , V , L) that are diagonally coupled, categorical,
network properties in Section 5.
and potentially layer-connected, where L = {La}1
= {L1 } and  L1   ≥ 2. From
interlayer edge ((u, α) , (v , β )) ∈ EM , where α ≠ β , one has that u = v ; a network
M is categorical ly coupled if and only if, for every (u, α) , (u, β ) ∈ VM , one has that
((u, α) , (u, β )) ∈ EM . Also in consonance with [18], we deﬁne here a condition for
[18], we have that: a network M is diagonal ly coupled if and only if, for every
to each pair of layers for at least one vertex u ∈ V : a network M is potential ly layer-
connected if and only if one has that Vα ∩ Vβ ≠ ࢝, where Vγ ∶= {v   (v , γ ) ∈ VM } and
multiplex networks in order to ensure that the categorical couplings always apply
α, β , γ ∈ L1 are arbitrary. This property is particularly important if M is not node-
multilayer networks, we will have that any node-aligned multiplex network M is
aligned.
In general, most multiplex networks are considered to be node-aligned
[18]. In fact, for example in [5, 26], multiplex networks are deﬁned already assum-
ing a node-alignment hypothesis. Moreover, as we already saw for node-aligned
node-aligned multiplex network M. As in Section 4.1, note that diagonal cou-
equivalent to a particular type of second order MAG. Hereafter, unless speciﬁed
diﬀerently, we will consider only node-aligned multiplex networks.
Let GM be the second order simple MAG that is equivalent to an undirected
are always recursively decidable from the composite vertices’ labels.9 Let G′M =
pling and categorical coupling are ﬁxed and the presence of such composite edges
(V, E , L1 ) denote the second order simple MAG GM with all the interlayer edges
excluded. In addition, G′M belongs to a recursively labeled inﬁnite family FG
rithmic information of GM and the algorithmic information of G′M can only diﬀer
arbitrary simple second order MAGs. Then, analogously to Section 4.1, the algo-
by a constant (that only depends on the chosen language LU ) and, thus, will be neg-
in this section, as the reader may notice, G′M is in fact an equivalent representa-
ligible in our forthcoming results. With these deﬁnitions and nomenclature clariﬁed
tion of a spatial simple TVG, except for a change in notation and nomenclature.

′M of

9 See the construction of program s1 in the proof of Theorem 4.1.

( V(G

′M )   L1 (G

′M ) )) ,

2

K (y) ≤ l(y)+O(1) ≤  L1 (G

′M )    V(G′M ) 2 −  V(G′M ) 
K (x) ≤ K (y) + O(1) ,
∗ ) ≤ K (x   y) + O (1) ≤ O (1) ,
K (y) ≤ K (x) + O(1) ,
∗ ) ≤ K (y   x) + O(1) ≤ O(1)
 ( V(G′M )   L1 (G′M ) )2 −  V(G′M )   L1 (G′M ) 
′M )    V(G′M ) 2 −  V(G′M ) 

( V(G
′M ) ))

22
Corollary 4.1. Let G′M = (V, E , L1 ) belong to a recursively labeled inﬁnite family
Therefore, we can now directly translate Theorem 4.1 and all the other results from
Section 4.1:
′M of simple second order MAGs. Then, there is a binary string y ∈ {0, 1}∗ that
is an algorithmically characteristic string of G′M such that
FG
+O (log2
K (x   y
K (y   x
and
hold, where x is the characteristic string of G′M .
Therefore, for large enough sets L1 , O(1)-K-random undirected node-aligned
multilayer networks with L = {L1} (i.e., simple second order MAGs) carry at least
−O (log2
2
2
more topological (or network) irreducible information than any node-aligned undi-
rected multiplex network could carry. Moreover, it will also be a consequence of
Theorem 5.1 that incompressible node-aligned general multilayer networks cannot
be diagonally coupled and, therefore, cannot be multiplex networks. To this end,
just replace an aspect corresponding to a set of layers with the ﬁrst aspect (which is
the set of vertices) and vice-versa. Thus, this section shows a comparison between
the algorithmic complexity of multiplex network with a more general multilayer
network. As in [28], another interesting line of research would be to compare the
multiplex case with that of the network that, in turn, results from a restriction, or
collapsing, of the multiplex topology: the aggregated graph (or aggregated mono-
plex network).

′M )   L1 (G

 −  L1 (G

5. Multidimensional degree, connectivity, diameter, and
a number of bits of irreducible information upper bounded by O  T    V 2 − V 
non-sequential interdimensional edges
. In
We saw in Section 4.1 that snapshot-dynamic networks inevitably can carry only
Section 4.2, we showed that the same also occurs for multiplex networks. Thus, one
can deﬁne a non-empty class of (undirected) networks whose topological information
characterizes a snapshot-like structure, in particular containing snapshot-dynamic
Deﬁnition 5.1. Let G ′
networks or multiplex networks:
like multidimensional network with respect to dimension (i.e., aspect) A (G )[i] if
network mathematically represented by the MAG G ′
sively labeled inﬁnite family FG ′
c be a simple second order MAG that belongs to a recur-
and only if there is an algorithmically characteristic string y = y ′ , w ∈ {0, 1}∗ of
c of simple second order MAGs. We say that the
c is a (undirected) snapshot-

2

2

G ′
kj =  A (G )[j ] 

zh = 1 ⇐⇒ e′ ∈ E (G ′

 ∈ {0, 1}∗ , 1 ≤ α ≤  A (G )[i] ,

c such that w ∈ {࢝} ∪ {0, 1}∗ is independent of the choice of G ′
c ∈ FG ′
c and y ′ =
x1 , . . . , x A (G )[i]   ∈ {0, 1}∗ , where xα = z1 , . . . , zkj
23
, j ≠ i, zh ∈ {0, 1}, 1 ≤ h ≤ kj , and, for every h-th element e′ of
{e (u, α, v , α) ∈ Ec (G ′
c )}, we have
c ) .
In other words, a (undirected) snapshot-like multidimensional network is a net-
work that can be totally represented by a second order simple MAG whose com-
posite edge set can be algorithmically determined by only informing a sequence of
presences or absences of composite edges connecting two nodes within the same
node dimension. Note that the proof of Theorem 4.1 and Corollary 4.1 guarantees
that Deﬁnition 5.1 is satisﬁable, for example, by snapshot-dynamic networks or
multiplex networks that are node-aligned. The reader is also invited to note that
Deﬁnition 5.1 can be generalized for simple MAGs with more than two aspects.
As we will show in this section, although an incompressible multidimensional
network carries much more information in its topology than any snapshot-like mul-
tidimensional network—see Sections 4.1 and 4.2—, it displays some properties that
may not be seen in real-world multidimensional networks, e.g., in those that can be
univocally represented by snapshot-like multidimensional networks.
First, since a TVG is just a second order MAG, it is immediate to show in
Corollary 5.1 that the previously studied Corollary 3.3, which holds for arbitrary
order p [1], also applies to simple TVGs. Thus, for the sake of exempliﬁcation, we
Gt that are O(log2
start with the dynamic case. Then, we generalize to the multidimensional case.
( V(Gt ) ))-C-random. Then, the fol lowing hold for large enough
Gt ∈ FGt , where V(Gt ) = V(Gt ) × T(Gt ):
Corollary 5.1. Let FGt be a recursively labeled inﬁnite family FGt of simple TVGs
(1) The degree d(v) of a composite vertex v ∈ V(Gt ) in a MAG Gt ∈ FGt
satisﬁes

d(v) −   V(Gt )  − 1

( V(Gt ) ))) .

 = O  V(Gt )  (O(log2
 V(Gt ) 
± o( V(Gt ) )

V(Gt ).

2
(2) Gt has
disjoint paths of length 2 between each pair of composite vertices u, v ∈
4
satisﬁes the conditions of Corollary 3.3 for some δ( V(Gc ) ). In fact, this follows
(3) Gt has (composite) diameter 2.
From Lemma 3.3, it is also immediate that there is an incompressible TVG that
from Theorem 3.2 by assuming a family of initial segments of a K-random (i.e.,
preﬁx algorithmically random) real number. For example, one may take initial seg-
ments of the halting probability (or Chaitin’s constant) [1]. Thus, from Lemma 3.3,
Corollary 3.2, and Theorem 3.2, we have that Corollary 5.1 is satisﬁable with
Now, let a transtemporal edge be a composite edge e = (u, ti , v , tj ) ∈ E (Gt ) with
j ≠ i ± 1 and j ≠ i. Thus, the short composite diameter and high k-connectivity of

δ( V(Gc ) ) = O(log2

( V(Gt ) )).

a O(log2
( V(Gt ) ))-C-random simple TVG ensures the existence of transtemporal
24
Corollary 5.2. Let Gt be a simple TVG satisfying Corol lary 5.1 with  T(Gt )  > 8.
Then, between every pair of vertices u, v ∈ V(Gt ) and time instants ti , tj ∈ T(Gt )
edges in Gt :
with j > i + 2, there is at least one transtemporal edge e ∈ E (Gt ).
In fact, Corollary 5.2 holds as a particular case of undirected high-order net-
works (i.e., undirected node-aligned general multidimensional networks), as we will
demonstrate below. The multilayered case with just one additional aspect besides
the set of vertices is totally analogous to Corollary 5.2. For the multidimensional
pect in turn may be the set T(Gc ) = A (Gc )[2] of time instants or it may be the
case, we will have that the ﬁrst aspect still is the set of vertices. The second as-
ﬁrst layer type L1 (Gc ) = A (Gc )[2]). The further aspects are any other layer type
Lk (Gc ) = A (Gc )[k + 1], where k ≤  A (Gc )  − 1, or any other node dimension. Note
that, unlike in [18], we refer to each element of Lk (Gc ) as a layer and to each
(α1 , . . . , αk ) ∈ L1 (Gc ) ×  × Lk (Gc ) as a layer tuple (or composite layer), instead of,
respectively, a elementary layer and a layer. Moreover, we refer to each set Lk (Gc )
as a layer type and to each arbitrary set Li (Gc ) ×  × Lj (Gc ) as a multilayer type.
e = (u, . . . , xki , . . . , xps , v , . . . , xkj . . . , xps′ ) ∈ E (Gc ) with j ≠ i ± 1 and j ≠ i.
By generalizing the temporal case, let a crosslayer edge be a composite edge
the aspect A (Gc )[k] corresponds to an arbitrary node dimension of the general
In
fact, in accordance with Section 4.2, both transtemporal and crosslayer edges are
particular cases of what we call by a non-sequential interdimensional edge, should
Corollary 3.3 applies to simple MAGs with order p ≥ 2, as proved in [1], Corollary 5.2
multidimensional network (instead of time or layers). This way, by noting that
Theorem 5.1. Let Gc be any large enough O(log2
( V(Gc ) ))-C-random simple
MAG with order p ≥ 2 that satisﬁes Corol lary 3.3 with δ ( V(Gc ) ) = O(log2
becomes indeed a particular case of:
where 2 ≤ k ≤ p. Then, between every pair of composite vertices
such that
(u, . . . , xki , . . . , xps )
(v , . . . , xkj . . . , xps′ )
in V(Gc ) with j > i + 2, there is: at least one crosslayer edge e ∈ E (Gc ), if Lk−1 (Gc ) =
and
A (Gc )[k]; at least one transtemporal edge e ∈ E (Gc ), if T(Gc ) = A (Gc )[k]; or at
least one non-sequential interdimensional edge e ∈ E (Gc ), if A (Gc )[k] corresponds
to any arbitrary node dimension.
Proof. Both transtemporal edges and crosslayer edges are particular cases of non-
A (Gc )[k]. Thus, we will prove only the general case. First, if
sequential interdimensional edges, except for a network interpretation of the aspect
(u, . . . , xki , . . . , xps , v , . . . , xkj . . . , xps′ ) ∈ E (Gc ) ,
then it immediately satisﬁes the deﬁnition of non-sequential interdimensional edge.
Since Gc is large enough, satisfying Corollary 3.3 with

 A (Gc )[h]  > 8 ,

 A (Gc )[k]  =

 V(Gc ) 


2≤h≤p,h≠k≤p

δ ( V(Gc ) ) = O(log2

( V(Gc ) )) ≤ o( V(Gc ) ) ,

( V(Gc ) ))

 V(Gc ) 

(v

′

′

 V(Gc ) 

4

2≤h≤p,h≠k≤p

the case in which there is (v ′ , . . . , xkz , . . . , xps′′ ) ∈ V(Gc ) with xkz ∈ A (Gc )[k] such
25
then the composite diameter becomes 2. Therefore, it only remains to investigate
(u, . . . , xki , . . . , xps , v
, . . . , xkz , . . . , xps′′ ) ∈ E (Gc )
that
, . . . , xkz , . . . , xps′′ , v , . . . , xkj . . . , xps′ ) ∈ E (Gc )
and
From Corollary 3.3, we have that, for every pair of composite vertices (u, . . . , xki , . . . , xps )
between (u, . . . , xki , . . . , xps ) and (v , . . . , xkj . . . , xps′ ). But, since Gc can have arbi-
and (v , . . . , xkj . . . , xps′ ), there are
± o( V(Gc ) ) disjoint paths of length 2
trarily large sets V(Gc ) and
then the number of possible distinct composite vertices (v ′ , . . . , xkz , . . . , xps′′ ) with
z = i or z = j will be always smaller than or equal to
2

 V(Gc ) 
 A (Gc )[h]  > 8,
 V(Gc ) 

ïï V(Gc ) 

 A (Gc )[h] ï =
= 2  V(Gc )  ïïïï
 V(Gc ) 
 V(Gc ) 

 A (Gc )[h]  ïïï
 V(Gc ) 
− o( V(Gc ) )
< 2
=
2  V(Gc )   =
=
 V(Gc ) 
− o( V(Gc ) )

lim V(Gc ) →∞ 2  V(Gc )   1

2≤h≤p,h≠k≤p

lim V(Gc ) →∞

8
8
composite vertices connecting (u, . . . , xki , . . . , xps ) and (v , . . . , xkj . . . , xps′ ). There-
4
fore, there will be at least one composite vertex (v ′ , . . . , xkz , . . . , xps′′ ) with i + 1 < z ,
Thus, in the limit, it will eventually be strictly smaller than the number of distinct
z + 1 < j , z < i, or j < z .

(cid:3)

2≤h≤p,h≠k≤p

−1 <

6. Conclusions

In this work, we have extended the results from [38] and [1] and studied the plain
and preﬁx algorithmic randomness of high-order networks that can be formally rep-
resented by multiaspect graphs (MAGs). We have dealt with the incompressibility
of multidimensional networks, especially node-aligned undirected multilayer net-
works or dynamic networks. First, we have compared time-varying graphs with
other snapshot-like representations of dynamic networks. We have shown that in-
compressible snapshot-dynamic networks carry an amount of topological algorith-
mic information that is linearly dominated by the size of the set of time instants.
To this end, we have applied a study of a worst-case lossless compression of the
algorithmically characteristic string of the network. The algorithmically character-
istic string contains all the necessary information to computationally represent the
entire network such that it is potentially agnostic with respect to node labeling or
indexing.

26

Then, after a careful analysis of previous nomenclature and assumptions in the
literature, we have shown that the same results can be applied to multiplex net-
works, where the set of layers plays the role of the set of time instants instead.
In this regard, we have shown that both snapshot-dynamic networks and mul-
tiplex networks are two particular and distinct cases of snapshot-like multidimen-
sional networks, but that are equivalent (except by a constant that only depends
on the chosen universal programming language) in terms of algorithmic complexity.
In addition, from previous results, we have shown that the topological informa-
tion carried by incompressible general multidimensional networks is on the qua-
dratic order of the size of the set of time instants instead. Therefore, the maximum
amount of topological information of an incompressible snapshot-like multidimen-
sional network may be much smaller than the amount of topological information of
an incompressible general multidimensional network.
Secondly, we have investigated some topological properties of incompressible
multidimensional networks. To this end, we have applied previous results for in-
compressible MAGs. We have shown that these networks have very short diameter,
high k-connectivity, and degrees on the order of half of the network size within
a strong-asymptotically dominated standard deviation. Therefore, these theoret-
ical ﬁndings relate lossless compression of multidimensional networks with their
network topological properties. For example, these properties are expected to hap-
pen in both artiﬁcial or real-world high-order networks that carry a maximal and
irreducible network topology in terms of information content.
In this way, such
theoretical results may give rise to future tools that could be applied to, for in-
stance, high-order network summarization algorithms and the reducibility problem
(i.e., the problem of ﬁnding the aggregate graph that represents the original multi-
dimensional network and preserves its core properties during network analysis).
Furthermore, we have also shown the presence of transtemporal or crosslayer
edges (i.e., edges linking vertices at non-sequential time instants or layers) in those
incompressible multidimensional networks. Although representations of more gen-
eral forms of multidimensional networks may carry much more topological infor-
mation, this presence of transtemporal or crosslayer edges may not correspond to
some underlying structures of real-world networks. Speciﬁcally, this is the case of
snapshot-dynamic networks, where transtemporal edges would not have any phys-
ical correspondence to connections that ‘jump across time instants’. On the other
hand, in the crosslayer case, it can make sense for some multilayer networks, where
the indexing or ordering of the layers does not correspond to any pre-established
physical structure. Thus, with the purpose of bringing algorithmic randomness to
the context of multidimensional networks—or, in general, complex networks—, our
theoretical results suggest that estimating or analyzing both the incompressibility
and the network topological properties of real-world networks cannot be taken into
a universal approach. Similarly to what we have shown for snapshot-based rep-
resentations of multidimensional networks, the algorithmic randomness of certain
networks may be strongly dependent on the underlying constraints or structure of
the network.
This study and approach is key to move forward from statistical approaches
to non-statistical challenges in the context of network science and beyond, such
as those related to model generation, feature selection and data dimensionality
reduction as already started in [36]. For example, in dynamic multilayer networks,

27

one important challenge is to disentangle the cause and eﬀect between and inside
diﬀerent networks over time, a problem relevant to almost every area of science
where processes can be represented as networks and interactions as connections to
other networks.

References

[1] Felipe S. Abrah˜ao, Klaus Wehmuth, Hector Zenil, and Artur Ziviani, Algorithmical ly ran-
dom families of generalized graphs and their topological properties, 2018. Preprint available
at: https://arxiv.org/abs/1810.11719. Also available as the research report no. 8/2018,
National Laboratory for Scientiﬁc Computing (LNCC), Petr´opolis, Brazil.
[2] Felipe S. Abrah˜ao, Klaus Wehmuth, and Artur Ziviani, Emergent Open-Endedness from
Contagion of the Fittest, Complex Systems 27 (2018), no. 04, available at http://doi.org/

10.25088/ComplexSystems.27.4.369.

[3]

, Algorithmic Networks: central time to trigger expected emergent open-endedness,
Theoretical Computer Science (2019), available at https://doi.org/10.1016/j.tcs.2019.

03.008.

[4] Michele Berlingerio, Michele Coscia, Fosca Giannotti, Anna Monreale, and Dino Pedreschi,
Foundations of Multidimensional Network Analysis, 2011 international conference on ad-
vances in social networks analysis and mining, 2011jul, pp. 485–489.
[5] S. Boccaletti, G. Bianconi, R. Criado, C.I. del Genio, J. G´omez-Garde˜nes, M. Romance,
I. Sendi˜na-Nadal, Z. Wang, and M. Zanin, The structure and dynamics of multilayer net-
works, Physics Reports 544 (2014nov), no. 1, 1–122, available at http://doi.org/10.1016/

j.physrep.2014.07.001.

[6] Harry Buhrman, Ming Li, John Tromp, and Paul Vit´anyi, Kolmogorov Random Graphs and
the Incompressibility Method, SIAM Journal on Computing 29 (1999jan), no. 2, 590–599,

available at http://doi.org/10.1137/S0097539797327805.

[8]

[7] Cristian S. Calude, Information and Randomness: An algorithmic perspective, 2nd ed.,
Springer-Verlag, 2002.
, Information: The Algorithmic Paradigm, Formal theories of information, 2009,
pp. 79–94.
[9] Gregory Chaitin, Algorithmic Information Theory, 3rd ed., Cambridge University Press, 2004.
[10] Noshir S. Contractor, Peter R. Monge, and Paul M. Leonardi, Multidimensional networks
and the dynamics of sociomateriality: Bringing technology inside the network, International
Journal of Communication 5 (2011), 682–720.
[11] Eduardo Chinelate Costa, Alex Borges Vieira, Klaus Wehmuth, Artur Ziviani, and Ana
Paula Couto da Silva, Time Centrality in Dynamic Complex Networks, Advances in Complex

Systems 18 (2015), no. 07n08, available at http://dx.doi.org/10.1142/S021952591550023X.

[12] Emanuele Cozzo, Guilherme Ferraz de Arruda, Francisco Aparecido Rodrigues, and Yamir
Moreno, Multiplex Networks, SpringerBriefs in Complexity, Springer International Publish-
ing, Cham, 2018.
[13] Manlio De Domenico, Clara Granell, Mason A. Porter, and Alex Arenas, The physics of
spreading processes in multilayer networks, Nature Physics 12 (2016oct), no. 10, 901–906,

available at http://www.nature.com/articles/nphys3865.

[14] Manlio De Domenico, Vincenzo Nicosia, Alexandre Arenas, and Vito Latora, Structural re-
ducibility of multilayer networks, Nature Communications 6 (2015dec), no. 1, 6864, available

at http://www.nature.com/articles/ncomms7864.

[15] Manlio De Domenico, Albert Sol´e-Ribalta, Emanuele Cozzo, Mikko Kivel¨a, Yamir Moreno,
Mason A. Porter, Sergio G´omez, and Alex Arenas, Mathematical Formulation of Multilayer
Networks, Physical Review X 3 (2013dec), no. 4, 041022, available at https://link.aps.

org/doi/10.1103/PhysRevX.3.041022.

[16] Matthias Dehmer, Frank Emmert-Streib, and Alexander Mehler (eds.), Towards an Informa-
tion Theory of Complex Networks, Birkh¨auser Boston, Boston, 2011.
[17] Rodney G. Downey and Denis R. Hirschfeldt, Algorithmic Randomness and Complexity,
Theory and Applications of Computability, Springer New York, New York, NY, 2010.
[18] M. Kivela, Alex Arenas, Marc Barthelemy, James P. Gleeson, Yamir Moreno, and Mason A.
Porter, Multilayer networks, Journal of Complex Networks 2 (2014sep), no. 3, 203–271, avail-

able at http://doi.org/10.1093/comnet/cnu016.

28

[19] Renaud Lambiotte, Martin Rosvall, and Ingo Scholtes, From networks to optimal higher-
order models of complex systems, Nature Physics 15 (2019apr), no. 4, 313–320, available at

http://doi.org/10.1038/s41567- 019- 0459- y.

[20] Ming Li and Paul Vit´anyi, An Introduction to Kolmogorov Complexity and Its Applications,
2nd ed., Springer Science & Business Media, New York, 1997.
[21] Othon Michail, An Introduction to Temporal Graphs: An Algorithmic Perspective, Algo-
rithms, probability, networks, and games, 2015, pp. 308–343.
[22] Othon Michail and Paul G. Spirakis, Elements of the theory of dynamic networks, Communi-
cations of the ACM 61 (2018jan), no. 2, 72, available at http://doi.org/10.1145/3156693.
[23] Abbe Mowshowitz and Matthias Dehmer, Entropy and the complexity of graphs revisited,
Entropy 14 (2012mar), no. 3, 559–570, available at http://doi.org/10.3390/e14030559.
[24] Ra j Kumar Pan and Jari Saram¨aki, Path lengths, correlations, and centrality in temporal
networks, Physical Review E 84 (2011jul), no. 1, 016105, available at http://doi.org/10.

1103/PhysRevE.84.016105.

[25] Shai Pilosof, Mason A. Porter, Mercedes Pascual, and Sonia K´eﬁ, The multilayer nature of
ecological networks, Nature Ecology & Evolution 2017 1 (2017mar), no. 4, 0101, available at

https://www.nature.com/articles/s41559- 017- 0101.

[26] Filippo Radicchi and Ginestra Bianconi, Redundant Interdependencies Boost the Robustness
of Multiplex Networks, Physical Review X 7 (2017jan), no. 1, 011013, available at https:

//link.aps.org/doi/10.1103/PhysRevX.7.011013.

[27] Giulio Rossetti and R´emy Cazabet, Community Discovery in Dynamic Networks, ACM Com-
puting Surveys 51 (2018feb), no. 2, 1–37, available at https://doi.org/10.1145/3172867.
[28] A. Santoro and V. Nicosia, Algorithmic complexity of multiplex networks, 2019.
[29] Klaus Wehmuth, Bernardo Costa, Jo˜ao Victor Bechara, and Artur Ziviani, A Multilayer
and Time-Varying Structural Analysis of the Brazilian Air Transportation Network, Latin
america data science workshop (ladas) co-located with 44th international conference on very
large data bases (vldb 2018), 2018, pp. 57–64.
[30] Klaus Wehmuth, ´Eric Fleury, and Artur Ziviani, On MultiAspect graphs, Theoretical Com-
puter Science 651 (2016), 50–61, available at http://doi.org/10.1016/j.tcs.2016.08.017.
, MultiAspect Graphs: Algebraic Representation and Algorithms, Algorithms 10

[31]

(2017), no. 1, 1–36, available at http://doi.org/10.3390/a10010001.

[33]

[32] Klaus Wehmuth and Artur Ziviani, Centralities in High Order Networks, Meeting on Theory
of Computation (ETC), Congress of the Brazilian Computer Society (SBC) 2018 (English).
, Avoiding Spurious Paths in Centralities Based on Shortest Paths in High Order
Networks, VIII Latin American Symposium on Dependable Computing (LADC), 2018oct,
pp. 19–26 (English).
[34] Klaus Wehmuth, Artur Ziviani, and Eric Fleury, A unifying model for representing time-
varying graphs, Proc. of the IEEE Int. Conf. on Data Science and Advanced Analytics
(DSAA), 2015oct, pp. 1–10.
[35] Hector Zenil, Narsis Kiani, and Jesper Tegn´er, A Review of Graph and Network Complexity
from an Algorithmic Information Perspective, Entropy 20 (2018jul), no. 8, 551, available at

http://doi.org/10.3390/e20080551.

[36] Hector Zenil, Narsis A. Kiani, Antonio Rueda-Toicen, Allan A. Zea, and Jesper Tegn´er,
Minimal Algorithmic Information Loss Methods for Dimension Reduction, Feature Selection
and Network Sparsiﬁcation, 2019. Preprint available at: https://arxiv.org/abs/1802.05843.
[37] Hector Zenil, Narsis A. Kiani, and Jesper Tegn´er, Low-algorithmic-complexity entropy-
deceiving graphs, Physical Review E 96 (2017jul), no. 1, 012308, available at http://dx.

doi.org/10.1103/PhysRevE.96.012308.

[38] Hector Zenil, Fernando Soler-Toscano, Kamaludin Dingle, and Ard A. Louis, Correlation of
automorphism group size and topological properties with program-size complexity evaluations
of graphs and complex networks, Physica A: Statistical Mechanics and its Applications 404

(2014jun), 341–358, available at http://doi.org/10.1016/j.physa.2014.02.060.

