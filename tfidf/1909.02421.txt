Swap Stability in Schelling Games on Graphs∗

Aishwarya Agarwal, Edith Elkind, Jiarui Gan, and Alexandros A. Voudouris

Department of Computer Science, University of Oxford

9
1
0
2

v
o

N

1
2

]

T

G

.

s

c

[

2
v
1
2
4
2
0

.

9
0
9
1

:

v

i

X

r

a

Abstract

We study a recently introduced class of strategic games that is motivated by and generalizes
Schelling’s well-known residential segregation model. These games are played on undirected graphs,
with the set of agents partitioned into multiple types; each agent either occupies a node of the graph
and never moves away or aims to maximize the fraction of her neighbors who are of her own type.
We consider a variant of this model that we call swap Schelling games, where the number of agents
is equal to the number of nodes of the graph, and agents may swap positions with other agents to
increase their utility. We study the existence, computational complexity and quality of equilibrium
assignments in these games, both from a social welfare perspective and from a diversity perspective.

1 Introduction

Segregation is observed in many communities; people tend to group together on the basis of politics,
religion, or socioeconomic status. This phenomenon has been extensively documented in residential
metropolitan areas, where people may select where to live based on the racial composition of the
neighborhoods. To formalize and study how the motives of individuals lead to residential segrega-
tion, Schelling [1969, 1971] proposed the following simple, yet elegant model. There are two types of
agents who are to be placed on a line or a grid. An agent is happy with her location if at least a fraction
τ ∈ (0, 1] of the agents within a certain radius are of the same type as her. Happy agents do not want to
move, but unhappy agents are willing to do so in hopes of improving their current situation. Schelling
described a dynamic process where at each step unhappy agents jump to random open positions or swap
positions with other randomly selected agents, and showed that it can lead to a completely segregated
placement, even if the agents themselves are tolerant of mixed neighborhoods (τ < 1/2).
Over the years, Schelling’s work became very popular among researchers in Sociology and Eco-
nomics, who proposed and studied numerous variants of his model, mainly via agent-based simulations;
see the paper of Clark and Fossett [2008] and references therein for examples of this approach. Vari-
ants of the model have also been rigorously analyzed in a series of papers [Young, 2001; Zhang, 2004a;
Brandt et al., 2012; Barmpalias et al., 2014; Bhakta et al., 2014; Barmpalias et al., 2015; Immorlica
et al., 2017], which showed that the random behavior of the agents leads with high probability to the
formation of large monochromatic regions.
While all these papers focused on settings where the agents’ behavior is random, it is more realistic
to assume instead that the agents are strategic and move only when they have an opportunity to improve
their situation. So far, only a few papers have followed such a game-theoretic approach. In particular,
Zhang [2004b] considered a game where the agents optimize a single-peaked utility function, and very
recently, Chauhan et al. [2018], Elkind et al. [2019] and Echzell et al. [2019] studied strategic settings

∗This work has been supported by the European Research Council (ERC) under grant number 639945 (ACCORD), and by
the EPSRC International Doctoral Scholars Grant EP/N509711/1.

1

 
 
 
 
 
 
that are closer to the original model of Schelling, but capture more that two agent types and richer graph
topologies.
In particular, Chauhan et al. [2018] study a setting with two types of agents, who have preferred
locations, and can either swap with other agents or jump to empty positions. For a given tolerance
threshold τ ∈ (0, 1], each agent’s primary goal is to maximize the fraction of her neighbors that are of
her own type as long as this fraction is below τ (with all fractions above τ being equally good); her
secondary goal is to be as close as possible to her preferred location. For both types of games (swap
and jump), Chauhan et al. identify values of τ for which the best response dynamics of the agents leads
to an equilibrium when the topology is a ring or a regular graph. Echzell et al. [2019] strengthen these
results and extend them to more than two agent types, as well as study the complexity of computing
assignments that maximize the number of happy agents.
Elkind et al. [2019] consider a similar model with k types; however, they treat agents’ location
preferences differently from Chauhan et al. Namely, in their model each agent is either stubborn (i.e.,
has a preferred location and is unwilling to move) or strategic (i.e., aims to maximize the fraction of
her neighbors that are of her own type; this corresponds to setting τ = 1 in the model of Chauhan et
al.). They focus on jump games, i.e., games where agents may jump to empty positions, and analyze
the existence and complexity of computing Nash equilibria, as well as prove bounds on the price of
anarchy Koutsoupias and Papadimitriou [1999] and the price of stability Anshelevich et al. [2008].

1.1 Our Contribution

We combine the two approaches by considering swap games in the model of Elkind et al. [2019]. That is,
we assume that the number of agents is equal to the number of nodes in the topology, and two agents can
swap locations if each of them prefers the other agent’s location to her own. We begin by studying the
existence of equilibrium assignments. While such assignments exist for highly structured topologies, we
show that they may fail to exist in general, even for simple topologies such as trees. Moreover, we show
that deciding whether an equilibrium exists is NP-complete. We also study the quality of assignments in
terms of their social welfare: we prove bounds on the price of anarchy and the price of stability for many
interesting cases, and show that computing an assignment with high social welfare is NP-complete; the
latter result complements the result of Elkind et al. in that it applies to the case where the number of
agents equals the number of nodes in the topology.
Given that the goal of Schelling’s work was to study integration, it is natural to ask what level of
integration can be achieved at equilibrium. There is a number of integration indices that have been
proposed for this purpose (see, e.g., the survey of Massey and Denton [1988]). However, many of the
indices deﬁned in the literature are formulated for settings where the topology is highly regular and
there are only two agent types, and it is not immediately clear how to adapt them to our model. We
therefore focus on a simple index, which we call the degree of integration, that is inspired by the work
of Lieberson and Carter [1982] and admits a natural interpretation in our context. This index counts the
number of agents who are exposed to agents of other types, i.e., have at least one neighbor of a different
type. We then study the price of anarchy and the price of stability with respect to this index: that is,
we compare the value of our index in the best and worst equilibrium of our game to the optimal value
of this index that can be achieved for a given instance. We note that, to the best of our knowledge, this
is the ﬁrst result of this type in the context of Schelling games: the previous work on integration in the
Schelling model typically focused on evaluating a given integration index after some number of steps
of the underlying dynamical process, and did not ask what level of integration can be achieved if the
agents were non-strategic. We obtain strong negative results: it turns out that even the best equilibria are
often much less diverse than the maximally diverse assignments. however, when the topology is a line,
the price of stability with respect to our index can be bounded by a small constant. We also show that
maximizing diversity is computationally hard.

2

2 Preliminaries

A k-swap game is given by a set N of n ≥ 2 agents partitioned into k ≥ 2 pairwise disjoint types
T1 , . . . , Tk , and an undirected simple connected graph G = (V , E ) with |V | = n, called the topology.
We often identify types with colors: e.g., in a 2-swap game each agent is either red (T1 ) or blue (T2 ).
The agents are also classiﬁed as either strategic or stubborn. We denote by R the set of strategic agents
and by S the set of stubborn agents, so that R ∪ S = N . Stubborn agents never move away from the
nodes they occupy, while a strategic agent aims to maximize her personal utility, and is willing to swap
positions with other agents to achieve this.
Given an agent i ∈ T(cid:96) , we refer to all other agents in T(cid:96) as friends of i and denote the set of i’s
friends by Fi = T(cid:96) \ {i}. Each agent i occupies some node vi ∈ V of the topology G so that vi (cid:54)= vj
for every pair of agents i (cid:54)= j . The vector v = (v1 , . . . , vn ) that lists the locations of all agents is called
an assignment. Given an assignment v, we denote by πv (v) the agent that occupies node v ∈ V , that is,
Given an assignment v, let Ni (v) = {j (cid:54)= i : {vi , vj } ∈ E } be the set of neighbors of agent i. The
utility ui of a stubborn agent i ∈ S is independent of the assignment; e.g., we can set ui (v) = 0 for each
i ∈ S . The utility of a strategic agent i ∈ R for assignment v is

πvi (v) = i.

|Ni (v)

ui (v) =

Figure 1: The topology of the 2-swap game considered in the proof of Theorem 3.1, and an assignment that
corresponds to the last case in the analysis; it is not an equilibrium since the red agent at node α and the blue agent
at node γ2 would like to swap.

PoSf = sup

G :EQ(G )(cid:54)=∅

inf

v∈EQ(G )

f (v∗
f (G ))
f (v)

.

For readability, we refer to the quantity PoASW as the social price of anarchy and to PoADI as the
integration price of anarchy, and use similar language for the price of stability.

3 Existence of Equilibria

We begin by discussing the existence of equilibria in swap games. The work of Echzell et al. [2019] im-
plies that at least one equilibrium assignment exists when the topology is a regular graph. Furthermore,
using a potential function similar to the one used by Elkind et al. [2019] for jump games, we can show
that equilibria always exist when the topology is a graph of maximum degree 2; we omit the details. Our
ﬁrst result is a proof of non-existence of equilibria for every k ≥ 2 for general topologies.
Theorem 3.1. For every k ≥ 2, there exists a k-swap game that does not admit an equilibrium assign-
ment, even when all agents are strategic and the topology is a tree.

Proof. We start with the easiest case of k = 2. Consider a 2-swap game with 10 strategic agents: 5 red
agents and 5 blue agents. The topology is a tree with a root node α, which has three children nodes (set
B ), each of which has two children of its own (set Γ); see Figure 1. Suppose for the sake of contradiction
that this game admits an equilibrium assignment v.
Since |B | = 3 and there are only two types of agents, at least two nodes in B , say β1 and β2 , must be
occupied by agents of the same type, say red. Now assume that nodes γ1 (a child of β1 ) and γ2 (a child of
β2 ) are occupied by blue agents. Then the red agent πβ1 (v) and the blue agent πγ2 (v) can swap positions
to increase their utility from strictly smaller than 1 and 0 to 1 and positive, respectively. Therefore, for at
least one of these nodes (say, β1 ) it must be the case that both of its children are occupied by red agents;
as there are only ﬁve red agents, it follows that at least one of the children of β2 , say γ2 , is occupied by
a blue agent.
If node α is occupied by a blue agent, then the red agent πβ1 (v) and the blue agent πγ2 (v) can
both increase their utility by swapping. Hence, node α must be occupied by a red agent (see Figure 1).
However, this assignment is not an equilibrium either, since the red agent πα (v) and the blue agent
πγ2 (v) have an incentive to swap.
For k ≥ 3, consider a k-swap game with n = k(k2 − 2) agents such that there are k2 − 2 agents of
node in β ∈ B has a set Γβ of k children leaf nodes; let Γ = (cid:83)
type T(cid:96) , for every (cid:96) ∈ [k ]. The topology is a tree whose nodes are distributed over three layers, just like
in the case k = 2. Speciﬁcally, there is a root node α, which has a set B of k(k − 1) − 1 children. Each
β∈B Γβ . Next, we will argue about the
structure of assignments that cannot be equilibria.

4

𝐵Γ𝛽1𝛾1𝛾2𝛽2𝛼Lemma 3.2. An assignment v according to which any two nodes β1 , β2 ∈ B are occupied by agents of
the same type Tx cannot be an equilibrium in case agents of some type Ty , y (cid:54)= x simultaneously occupy
nodes of Γβ1 and Γβ2 .
Proof. Let v be an assignment according to which nodes β1 , β2 ∈ B are occupied by agents of type
Tx , and there exist nodes γ1 ∈ Γβ1 and γ2 ∈ Γβ2 , which are occupied by agents of some type Ty , with
y (cid:54)= x. Clearly, agent πβ1 (v) has utility strictly less than 1, while agent πγ2 (v) has utility 0. Therefore,
they would like to swap positions in order to increase their utility to 1 and positive, respectively.

Lemma 3.3. An assignment v according to which agents of every type occupy nodes of B cannot be an
equilibrium.

Proof. Let v be an assignment according to which at least one agent of every type occupies some node
of B . Without loss of generality, assume that the agent πα (v) is of type Tx . We now distinguish between
the following two cases.
• An agent of type Tx located at node β ∈ B has a neighbor of type Ty , y (cid:54)= x located at some node
γ ∈ Γβ . Then, by the assumption of the lemma, there exists at least one agent of type Ty located
at some node β (cid:48) ∈ B \ {β }, and therefore agents πα (v) and πγ (v) would like to swap positions
in order to increase their utility from strictly less than 1 and 0 to 1 and positive, respectively.
• For every agent of type Tx located at some node β ∈ B , all agents occupying the nodes of Γβ are
of type Tx . Since α is occupied by an agent of type Tx , there are k2 − 3 = (k − 1)(k + 1) − 2
other agents of type Tx that can completely ﬁll up at most k − 2 subtrees of α (since each of them
consists of k + 1 nodes). Consequently, there are at least k − 1 agents of type Tx located at leaf
nodes in other subtrees of α.
Now, assume that one of these agents of type Tx occupies a node γ ∈ Γβ such that β ∈ B is
occupied by an agent of type Ty , with y (cid:54)= x. We will now argue that there must exist another
agent of type Ty located at some node β (cid:48) ∈ B \ {β }. Assume otherwise that there is no such
agent. Then, the remaining k(k − 1) − 2 agents of type Ty occupy leaf nodes of the tree. By
Lemma 3.2, such agents located in different subtrees of α cannot be connected to agents of the
same type. Hence, to cover all these k(k − 1) − 2 agents of type Ty , agents of k − 1 different
types need to occupy the root nodes of the corresponding subtrees of α. However, there are only
k − 2 types left (different than Tx and Ty ). Consequently, there must exist another agent of type
Ty that occupies some node β (cid:48) ∈ B \ {β }. As a result, agents πγ (v) and πβ (cid:48) (v) have incentive
to swap positions in order to increase their utility from 0 and strictly less than 1 to positive and 1,
respectively.

This completes the proof of the lemma.

Lemma 3.4. An assignment according to which there exists a type T(cid:96) such that no agent of this type
appears at nodes of B cannot be an equilibrium.

Proof. Let v be an assignment according to which no agent of type T(cid:96) appears at the nodes of B . We
ﬁrst deal with the case k ≥ 4. Observe that there are at least k2 − 3 agents of type T(cid:96) that must occupy
nodes of Γ; one agent of type T(cid:96) may occupy α. By Lemma 3.2, agents of the same type that are located
in different subtrees of α cannot be connected to agents of the same type. Hence, to cover all these
k2 − 3 agents of type T(cid:96) , agents of k different types must occupy the root nodes of the corresponding
subtrees of α, which is impossible.
For k = 3, if α is not occupied by an agent of type T(cid:96) , then all k2 − 2 = 7 agents of this type must
occupy nodes of Γ, and the same argument as above leads to a contradiction. Hence, assume that πα (v)
is of type T(cid:96) . Since |B | = 5 and no agent of type T(cid:96) appears at the nodes of B , at least three nodes of

5

B must be occupied by agents of the same type. Let B = {β1 , ..., β5}, and assume that nodes β1 , β2
and β3 are occupied by agents of type T0 . If an agent of type T(cid:96) occupies some node γ ∈ Γβ for any
β ∈ {β1 , β2 , β3}, then agent πβ (cid:48) (v), β (cid:48) ∈ {β1 , β2 , β3} \ {β } has incentive to swap positions with agent
πγ (v) to increase both of their utilities from strictly less than 1 and 0 to 1 and positive. Hence, no agent
of type T(cid:96) can be located at the nodes of Γβ1 ∪ Γβ2 ∪ Γβ3 . Clearly, if agent πβ4 (v) or πβ5 (v) is of type
T , for the same reason, no agent of type T(cid:96) can be located at the corresponding leaf nodes. Hence, both
β4 and β5 must be occupied by agents of the third type T1 and all leaf nodes Γβ4 ∪ Γβ5 must be occupied
by the remaining 6 agents of type T(cid:96) . However, this clearly cannot be an equilibrium assignment, since
agent πβ4 (v) would like to swap with any agent in Γβ5 .

By Lemmas 3.3 and 3.4, we conclude that no assignment can be an equilibrium.

The topology used in the proof of Theorem 3.1 for the case k = 2 is utilized as a subgraph in the
proof of the following theorem, to show that the problem of deciding whether an equilibrium exists is
computationally hard.
Theorem 3.5. For every k ≥ 2, it is NP-complete to decide whether a given k-swap game admits an
equilibrium.

Proof. Membership in NP is immediate: we can verify whether a given assignment is an equilibrium by
simply checking if there exists a pair of agents that would like to swap positions. To prove NP-hardness,
we give a reduction from the C L IQU E problem, which in known to be NP-complete. An instance of
C L IQU E consists of an undirected connected graph H = (X, Y ) and an integer λ; it is a yes-instance if
H contains a complete subgraph of size λ. Without loss of generality, we assume that λ > 5.
Given an instance (cid:104)H, λ(cid:105) of C L IQU E with H = (X, Y ), we will construct a 2-swap game as follows
(the reduction can be extended to any k > 2 by adding stubborn agents of different types). Let dv denote
the degree of node v in H , and set dH = maxv∈X dv .
• There are λ strategic red agents and t = |X |+5 strategic blue agents; all other agents are stubborn,
and will be deﬁned in conjunction with the topology.
• The topology G = (V , E ) consists of three components G1 , G2 and G3 . These are connected to
each other via stubborn agents, and are deﬁned as follows:
Then, V1 = X (cid:83)
– To deﬁne G1 = (V1 , E1 ), let Wv be a set of 2dH − dv + 2λ − 3 nodes for each v ∈ V .
v∈V Wv and E1 = Y ∪ {{v , w} : v ∈ X, w ∈ Wv }. For every v ∈ X , dH
nodes of Wv are occupied by stubborn red agents, while the remaining dH − dv + 2λ − 3
nodes are occupied by stubborn blue agents. Observe that every node of G1 has degree

d1 = 2dH + 2λ − 3.

– The subgraph G2 = (A ∪ B , E2 ) is a complete bipartite graph with |A| = λ − 5 and
|B | = 4d1 . Out of the 4d1 nodes of B , 2d1 + 1 nodes are occupied by stubborn red agents,
while the remaining 2d1 − 1 nodes are occupied by stubborn blue agents.
Hence, a strategic red agent occupying a node of A has utility χr = 2d1+1
Similarly, a strategic blue agent has utility χb = 2d1−1
.
– To deﬁne G3 = (V3 , E3 ), let (V (cid:48)
3 ) be the graph used in the proof of Theorem 3.1, for
which there is no equilibrium assignment; see Figure 1. For every node v ∈ V (cid:48)
3 of degree
3, let Zv be a set of 100d1 nodes such that 50d1 of these nodes are occupied by stubborn
red agents, while the remaining 50d1 nodes are occupied by stubborn blue agents. For every
3 of degree 1, let Zv be a set of 10d1 nodes such that 5d1 of these nodes are occupied
by stubborn red agents, while the remaining 5d1 nodes are occupied by stubborn blue agents.
Then, V3 = V (cid:48)

Zv and E3 = E (cid:48)
3 ∪ {{v , w} : v ∈ V (cid:48)
3 , w ∈ Zv }.

2 − 1
4d1

= 1

2 + 1
4d1

v ∈ V (cid:48)

3 , E (cid:48)

= 1

4d1

(cid:83)

3

v∈V (cid:48)

3

4d1

.

6

2 − 1
10d1+1 > 1
4d1

One can easily verify that the utility of a strategic agent (red or blue) occupying a node of
G3 is at least ψ0 = 5d1−1
and at most ψ1 = 5d1+1
.
Now, assume that H has a clique of size λ, and let v be the assignment in which the strategic red
agents occupy the nodes of the clique, and the strategic blue agents occupy the remaining nodes. Each
strategic red agent is connected to λ − 1 + dH other red agents (strategic and stubborn) in G1 , and thus
has utility

10d1+1 < 1
2 + 1
4d1

u =

λ − 1 + dH
d1

dH + λ − 1.5 + 0.5
2dH + 2λ − 3

=

≥ 1

2

+

1
2d1

.

Clearly, since u > χr and u > ψ1 , no strategic red agent would be willing to swap positions with another
strategic agent in G2 or G3 . By swapping positions with a blue agent within G1 , a strategic red agent
would still have at most λ − 1 + dH friends, and since every node in G1 has the same degree, her utility
cannot be improved. Hence, no strategic red agent has a proﬁtable deviation, and v is an equilibrium.
Conversely, assume that H does not contain a clique of size λ, and for the sake of contradiction also
assume that there is an equilibrium assignment v.
Suppose that some strategic red agents are located in G1 . It cannot be the case that each of them
is adjacent to λ − 1 other strategic red agents, as this would mean that the nodes they occupy form a
clique of size λ. Hence, at least one of these agents, say agent i, is adjacent to at most λ − 2 strategic
red agents. Since every node of G1 has degree d1 and every node is adjacent to dH stubborn red agents,
the utility of i is

ui ≤ dH + λ − 2
d1

=

dH + λ − 1.5 − 0.5
2dH + 2λ − 3

=

1
2

− 1

2d1

.

We have that ui < χr and ui < ψ0 , and hence agent i has incentive to move to G2 or G3 . On the other
hand, the utility that a strategic blue agent j that is currently located in G2 or G3 can obtain by swapping
positions with i is

uj = 1 − ui ≥ 1
2

+

1
2d1

.

Since uj > χb and uj > ψ1 , agent j also has an incentive to swap positions with agent i, and hence v
cannot be an equilibrium assignment. Therefore, no strategic red agent is located in G1 .
Similarly, observe that χr > ψ1 and χb < ψ0 , meaning that strategic red agents would prefer to be in
G2 , while strategic blue agents would prefer to be in G3 . Thus, for v to be an equilibrium assignment, it
must be the case that all if a node of G2 is not occupied by a stubborn agent, it is occupied by a strategic
red agent. As a result, there are 5 strategic red and 5 strategic blue agents in G3 . However, similarly to
the proof of Theorem 3.1, we can argue that there is no equilibrium assignment for these agents in G3 ;
we omit the details here. Since we have exhausted all possibilities, it follows that if H does not have a
clique of size λ, then there is no equilibrium assignment.

4 Social Welfare

Here, we consider the efﬁciency of equilibrium assignments in terms of social welfare, and bound the
social price of anarchy and stability for many interesting cases. We restrict our attention to games
consisting of only strategic agents and such that there are at least two agents per type. Swap games with
stubborn agents or strategic agents that are unique of their type can easily be seen to have unbounded
social price of anarchy.1
We start with the social price of anarchy of 2-swap games, and consider the general case (given the
above restrictions) and the case where each type consists of the same number of agents.

1For any k ≥ 2, consider a k-swap game with a star topology and k types of agents such that there is only one red strategic
agent, while the other types consist of at least two strategic agents and of some stubborn ones located at peripheral nodes.

7

Figure 2: The topology and the equilibrium assignment of the lower bound instance in the proof of part (i) of
Theorem 4.1. The big red square represents a clique whose nodes are occupied by red agents only.

n − 3 + n−3

Theorem 4.1. The social price of anarchy of 2-swap games with only strategic agents is
(i) Θ(n) if there are at least two agents of each type, and
(ii) between 921/448 ≈ 2.0558 and 4 if each type consists of the same number of agents.
Proof. We prove each part separately.
Part(i). For the lower bound, consider a 2-swap game with n − 2 red and 2 blue agents who are to
be positioned on the nodes of a star topology. Then, the assignment according to which one of the
n−1 ≤ 2, while the
blue agents occupies the central node is an equilibrium with social welfare 1 + 1
optimal assignment is such that the central node is occupied by a red agent for a social welfare of
n−1 ≥ n − 3.
For the upper bound, consider any 2-swap game with n agents such that there are nr ≥ 2 red and
nb blue agents, and let v be any equilibrium assignment of this game. If there is any red agent (cid:96) with
zero utility in v, then it cannot be the case that this agent is connected to all blue agents. If this were
the case, then since there is another red agent and the graph is connected, at least one blue agent must
be connected to this red agent, get utility strictly less than 1, and have incentive to swap positions with
agent (cid:96) so that they both increase their utility. Hence, in order for v to be an equilibrium in the presence
of (cid:96) getting zero utility, any blue agent not connected directly to (cid:96) must get utility 1 so that she does not
want to swap with (cid:96). Consequently, SW(v) ≥ 1. In the case where every agent has positive utility in v,
since the graph is connected, it must be the case that every agent get utility at least 1/n, and therefore
again SW(v) ≥ 1. Now the bound follows since the optimal social welfare is at most n.
Part (ii). For the lower bound, consider a 2-swap game with the following topology: there is a node α
of degree x + 1 that is connected to x leaf nodes and to one node in a clique C of size x − 1. There is
an equilibrium v where α is occupied by a red agent r , all leaf nodes are occupied by blue agents, and
all nodes of C are occupied by red agents; see Figure 2. Hence,

SW(v) = x − 1 +

1
x + 1

=

x2
x + 1

.

On the other hand, for the assignment v∗ obtained from v by swapping r with one of the blue agents we
have

SW(v∗ ) = 2x − 3 +

x − 2
x − 1

+

x − 1
x + 1

.

Hence, the price of anarchy is at least

2x3 − x2 − 5x + 2
x2 (x − 1)

,

The assignment according to which the red agent occupies the center node is an equilibrium with 0 social welfare, while any
assignment such that the center node is occupied by a non-red agent has positive social welfare.

8

.  .  . 𝑥𝛼𝐶an expression that takes it maximum value 667/324 ≈ 2.05864 at x = 9.
For the upper bound, consider a 2-swap game with n = 2x agents such that there are x ≥ 2 red and
x blue agents. First, assume that some agents get zero utility in the equilibrium assignment v. Observe
that it cannot be the case that there exist agents of both types who have zero utility in v. Indeed, if this
was true for a non-adjacent red-blue pair, then these agents would have an incentive to swap and increase
their utility from zero to 1. On the other hand, suppose this is true for an adjacent red-blue pair (r, b). If
both of r and b have other neighbors (besides r and b), then by swapping they can increase their utility
from 0 to positive. Hence, suppose that r occupies a leaf node and is connected only to b. Then, since
the graph is connected, there must exist a blue agent b(cid:48) (cid:54)= b with utility in (0, 1) who would like to swap
with r to increase both of their utilities from 0 to positive for r and from strictly less than 1 to 1 for b(cid:48) .
Thus, assume that at least one blue agent has zero utility and all red agents have positive utility. We
denote by B0 the set of blue agents with zero utility, by R1 the set of red agents with utility 1, and by
R< the set of red agents whose utility is strictly less than 1. We have |R1 | + |R< | = x, and each agent
in B0 is connected to all agents in R< ; otherwise a non-adjacent pair of agents i ∈ R< , j ∈ B0 would
like to swap. If |R< | = 1, then |R1 | = x − 1. The utility of the unique agent i ∈ R< is ui (v) ≥ 1
and thus

1+x ,

Since the optimal social welfare is at most n = 2x and x ≥ 2, the price of anarchy is at most

SW(v) ≥ x − 1 +

1
1 + x

.

2(1 + x)
x

= 2 +

≤ 3.

2
x

Now, assume that |R< | ≥ 2. If |B0 | ≥ 2, then any agent in B0 would like to swap with any agent in
R< to get positive utility (since each agent in R< is connected to all agents in B0 ). Thus, in v no agent
i ∈ R< wants to swap with any agent in B0 . Since each agent in B0 is connected to all agents in R< and
no other agent, the utility that agent i would get by agreeing to swap is ui (v) =
|R< | ≥ 1/2, yielding

|R< |−1

SW(v) ≥ |R1 | + |R> |/2 ≥ x/2.

Since the maximum welfare is 2x, we can upper-bound the price of anarchy by 4. If |B0 | = 1, then if i
is connected to another blue agent (not in B0 ), her utility is at least 1/2 for the same reason as before.
Otherwise, i is connected to red agents only and the one agent in B0 , so ui (v) ≥ 1/2 (only one red
agent in the worst case), which again yields an upper bound of 4 on the price of anarchy.
Next, we assume that all agents have positive utility. Since v is an equilibrium, for every red-blue
pair of agents it holds that at least one of them has no incentive to swap positions. Let (i, j ) be a red-blue
pair of agents, and assume that i does not want to swap. If i and j are not neighbors in v, then it must be
that ui (v) ≥ 1 − uj (v) and hence ui (v) + uj (v) ≥ 1. Otherwise, i and j are neighbors in v. It may be
the case that ui (v) + uj (v) < 1, in which case ui (v) ∈ (0, 1) and uj (v) ∈ (0, 1). Assume that the blue
agent j has xr ≥ 0 red neighbors besides i, and xb ≥ 1 blue neighbors. Then, uj (v) =

xr +xb+1 , and
xb

ui (v) ≥

xr
= 1 − uj (v) −
1
xr + xb + 1
xr + xb + 1
− uj (v) ⇔ ui (v) + uj (v) ≥ 1
2

2

,

≥ 1

we have ui (v) + uj (v) ≥ 1

(1)
where the inequality follows since
xr +xb+1 is decreasing in xr ≥ 0 and xb ≥ 1. Therefore, in any case
2 , for every red-blue pair of agents i and j . Since there are x2 distinct red-
blue pairs, and each agent participates in exactly x such pairs, by summing over all these inequalities,
we obtain x · SW(v) ≥ 1
2 x2 and therefore SW(v) ≥ 1
2 x. The bound then follows since the maximum
possible social welfare is n = 2x.

1

9

Figure 3: The topology and the equilibrium assignment of the k-swap game considered in the proof of Theorem 4.2
for k = 3. Here, T1 = red, T2 = blue and T3 = green.

We remark that even though the upper bound of 4 for the case where each types consists of the same
number of agents (and every agent has positive utility at equilibrium) is probably not tight, one cannot
expect to improve it using the same technique. In particular, to prove this upper bound, we focused on
an arbitrary pair of agents (i, j ), and used the equilibrium deﬁnition, according to which at least one of
these agents does not want to swap positions. Then, we were able to show that ui (v) + uj (v) ≥ 1/2.
We now argue that this inequality is actually tight, and hence to improve the upper bound one needs to
argue in more detail about the structure of the equilibrium. Consider a variant of the topology depicted
in Figure 2 in which every leaf node is connected to another leaf node. Then, for the depicted assignment
v, the red agent πα (v) has utility 1
x+1 , while any blue agent has utility exactly 1/2. Hence, the sum of
the utility of the red agent πα (v) and the utility of any blue agent is almost 1/2 as x becomes large.
We continue by showing that, surprisingly, for three types or more, the social price of anarchy can
be unbounded, even for the special case of equal number of agents per type.
Theorem 4.2. For every k ≥ 3, the social price of anarchy of k-swap games can be unbounded, even
when there is an equal number of strategic agents per type.

Proof. Consider a k-swap game with n = 2k agents such that there are exactly two agents of each of
the k ≥ 3 types T1 , . . . , Tk . The topology G consists of k nodes {α1 , ..., αk } that form a cycle, and
each node α(cid:96) , (cid:96) ∈ [k ] is also connected to an auxiliary node β(cid:96) ; see Figure 3 for the topology and the
equilibrium assignment discussed in the following for k = 3.
Let v be the assignment according to which node α(cid:96) is occupied by an agent of type T(cid:96) , while node
β(cid:96) is occupied by an agent of type T(cid:96)+1 , where the subscripts are mod (cid:96). This assignment is clearly an
equilibrium since there exists no pair of agents that would like to swap positions, and every agent has
zero utility. In particular, observe that agent πα(cid:96)+1 (v) of type T(cid:96)+1 would like to move only to node α(cid:96)
in order to connect with the agent πβ(cid:96) (v) who is also of type T(cid:96)+1 . However, the agent πα(cid:96) (v) of type
T(cid:96) has no incentive to move to node α(cid:96)+1 since the other agent of type T(cid:96) is at node β(cid:96)−1 . Now, consider
agent πβ(cid:96) (v) of type T(cid:96)+1 who is connected only to an agent of type T(cid:96) located at α(cid:96) . The only agent
that would like to swap positions with πβ(cid:96) (v) is πβ(cid:96)−1 (v) who is of type T(cid:96) . However, such a swap
cannot increase the utility of πβ(cid:96) (v) since agent πα(cid:96)−1 (v) is of type T(cid:96)−1 (cid:54)= T(cid:96)+1 . Therefore, v is an
equilibrium with SW(v) = 0.
On the other hand, consider the assignment v∗ according to which nodes α(cid:96) and β(cid:96) are occupied by
the two agents of type T(cid:96) , for every (cid:96) ∈ [k ]. Since every agent has now positive utility, SW(v∗ ) > 0,
and the social price of anarchy is unbounded.

Next, we turn our attention to the social price of stability and show a constant lower bound for
2-swap games.

Theorem 4.3. The social price of stability of 2-swap games is at least 4/3.

10

𝛼1𝛼2𝛼3𝛽2𝛽1𝛽3Figure 4: The topology and the best equilibrium assignment for the 2-swap games considered in the proof of
Theorem 4.3.

Proof. Let x ≥ 3 be a parameter, and consider a 2-swap game with 2x + 1 red and 2x + 1 blue agents.
The topology is a tree with a root node α, which is connected to two nodes β and γ , as well as to a set A
of 2x − 1 leaf nodes. Moreover, node β is connected to a set B of x leaf nodes, and node γ is connected
to a set Γ of x more leaf nodes. The topology and the best equilibrium assignment (which we discuss
below) are depicted in Figure 4.
We will now argue about the structure of any equilibrium for this particular swap game. Without
loss of generality, we assume that the root node α is occupied by a red agent, and switch between a
few cases depending on the number of blue agents that occupy the lead nodes of set A that are directly
connected to α.
First, assume that there are at least x + 1 blue agents at the nodes of set A. Then, there can be at
most x − 2 red agents at the nodes of A, which means that the remaining at least x + 2 red agents need
to occupy nodes of the β - and γ -subtrees. Since any of these subtrees have a total of (cid:96) + 1 nodes, at
least one of these red agents, say agent i, must be connected to at least one blue agent. Clearly, such
an assignment cannot be an equilibrium since agent i and any of the blue agents at the nodes of A have
incentive to swap positions to increase their utilities from strictly smaller than 1 and 0 to 1 and positive,
respectively.
Second, assume that there are exactly x blue agents at the nodes of set A, and hence the remaining
x − 1 nodes of A are occupied by red agents. Then, it is easy to verify that the only equilibrium
assignment v1 (up to symmetries) is such that all nodes of the β -subtree are occupied by red agents, and
all nodes of the γ -subtree are occupied by blue agents. The social welfare of this equilibrium is

SW(v1 ) = 3x +

x
x + 1

+

x
2x + 1

≤ 3x + 2.

Third, assume that the number of blue agents at the nodes of set A is between 1 and x − 1. Then,
there are at least x red agents at the nodes of A. Since any of the β - and γ -subtrees have a total of x + 1
nodes, at least one of the remaining at most x red agents, say agent i, must necessarily be connected to
some blue agent. As in the ﬁrst case, such an assignment cannot be an equilibrium since agent i and
any of the blue agents at the nodes of A have incentive to swap positions to increase their utilities from
strictly smaller than 1 and 0 to 1 and positive, respectively.
Finally, assume that all nodes of A are occupied by red agents, and there is only one remaining red
agent i, who will inevitably be connected to some blue agents. No assignment v2 according to which i
occupies a leaf node of B (or Γ) can be an equilibrium, since i and the blue agent πγ (v2 ) (or πβ (v2 ))

11

𝐵Γ𝐴.  .  . .  .  . .  .  . .  .  . 𝑥−1𝑥−1𝑥−1𝑥𝛼𝛽𝛾have incentive to swap positions and increase their utilities from 0 and strictly smaller than 1 to positive
and 1, respectively. Hence, in any equilibrium assignment v2 , agent i occupies either node β or node γ .
The social welfare is

SW(v2 ) = 3x − 1 +

2x
2x + 1

+

1
x + 1

+

x
x + 1

≤ 3x + 1.

Now consider the assignment v∗ according to which the red agents occupy node α, all nodes of
A, and one node of B , while all other nodes are occupied by blue agents. The social welfare of this
assignment is

SW(v∗ ) = 4x − 1 +

2x − 1
2x + 1

+

x − 1
x + 1

≥ 4x − 1.

Therefore, the social price of anarchy is at least 4x−1
3x+2 , which tends to 4/3 as x tends to inﬁnity.
For k-swap games with topology that is a δ -regular graph (in which all nodes have degree equal to
δ ), we show an upper bound of 1 on the social price of stability by exploiting a potential function, similar
to the one deﬁned by Chauhan et al. [2018] and Echzell et al. [2019] to show the existence of equilibria
in such games.

Theorem 4.4. The social price of stability in k-swap games with topology that is a δ -regular graph is 1.

Proof. Echzell et al. [2019] showed that for k-swap games with a δ -regular topology,

is a potential minimization function. Using similar arguments, we can show that the complement,

(cid:88)
(cid:88)

i∈R

i∈R

Φ(v) =

|Ni (v) \ Fi |

Φ(v) =

|Ni (v)

Let v∗ be an optimal assignment. If v∗ is an equilibrium, then the social price of stability is 1. Otherwise,
we let the strategic agents play and swap positions until they reach an equilibrium v. Since Φ is a
potential maximization function, we have that Φ(v) ≥ Φ(v∗ ), and by (2), we obtain

SW(v) =

1
δ

· Φ(v) ≥ 1
δ

· Φ(v∗ ) = SW(v∗ ),

and the bound follows by rearranging terms.

Next, we focus on the problem of computing assignments of high social welfare. Observe that
whether the agents are allowed to pairwise swap positions or jump to empty nodes has no effect in the
complexity of this problem, and hence we already known that it is NP-complete by the work of Elkind
et al. [2019]. However, one of their main assumptions is that the topology is a graph with strictly more
nodes than agents (so that there are empty nodes where the agents can jump to). Consequently, their
proof does not cover our case, where the topology consists of a number of nodes that is exactly equal to
the number of agents. The proof of our next theorem is fundamentally different and subsumes that of
Elkind et al. [2019] for k ≥ 3; for k = 2, we were unable to prove the hardness of the problem.
Theorem 4.5. For every k ≥ 3, given a rational number ξ , it is NP-complete to decide whether there
exists an allocation that has social welfare at least ξ .

Proof. Membership in NP is immediate: given an assignment, we can sum up the utilities of the strategic
agents and check whether the social welfare is at least ξ . To prove NP-hardness, we give a reduction
from an NP-complete variant of the min-cut problem with additional cardinality constraints on the size
of the subsets, to which we refer as the EQUA L -M IN -CU T problem Garey et al. [1974]. An instance
of EQUA L -M IN -CU T consists of a graph H = (X, Y ), two distinguished nodes s, t ∈ X , and an
integer W . It is a yes-instance if and only if there exist disjoint subsets of nodes X1 and X2 such that
X1 ∪ X2 = X , |X1 | = |X2 |, s ∈ X1 , t ∈ X2 and |{{v , z} ∈ Y : v ∈ X1 , z ∈ X2 |} ≤ W . Without loss
of generality, we assume that |X | is an even number, and by convention we denote an edge {v , z} as vz
to simplify our notation.
Given an instance (cid:104)H, s, t, W (cid:105) of EQUA L -M IN -CU T with H = (X, Y ), we construct an instance of
our social welfare maximization problem as follows:
• There are |X |/2 − 1 strategic red and |X |/2 − 1 strategic blue agents.
• The topology G = (V , E ) consists of H with additional nodes and edges. Let s0 and t0 be two
auxiliary nodes, and deﬁne X0 = {s, s0 , t, t0} and Y0 = Y ∪ {s0v : sv ∈ Y } ∪ {t0v : tv ∈ Y }.
of d0 − dv nodes for every v ∈ X \ X0 . Then, G is such that V = X ∪ {s0 , t0} (cid:83)
Let dv = |e ∈ Y0 : v ∈ e| for every v ∈ X \ X0 , and d0 = maxv∈X \X0 dv . Also, let Zv be a set
E = Y0 ∪ {vz : v ∈ X \ X0 , z ∈ Zv }. Observe that in G, every node v ∈ X \ X0 has degree
Zv and
exactly equal to d0 .
agents, and all nodes in (cid:83)
• The nodes s and s0 are occupied by stubborn red agents, t and t0 are occupied by stubborn blue
Zv are occupied by stubborn green agents.
• Finally, let ξ = 2
(|Y | − W ).
For any assignment v and node v ∈ V , let χv (v) denote the type of the agent occupying node v .
We will show that the social welfare of v is decreasing in the number of edges of Y that are occupied
by agents of different types. We have

v∈X \X0

v∈X0

d0

(cid:88)

v∈X \X0

SW(v) =

|{vz ∈ Y0 : χv (v) = χz (v)}|
d0

13

=

1
d0

(cid:88)
(cid:88)

v∈X \X0

|{vz ∈ Y0 : χv (v) = χz (v), z /∈ X0}|

1
d0
Since χs (v) = χs0 (v), χt (v) = χt0 (v), vs ∈ Y ⇔ vs0 ∈ Y0 , and vt ∈ Y ⇔ vt0 ∈ Y (cid:48) , it follows that

|{vz ∈ Y0 : χv (v) = χz (v), z ∈ X0}|.

v∈X \X0

+

for every v ∈ X \ X0 ,

|{vz ∈ Y0 : χv (v) = χz (v), z ∈ X0}| = 2|{vz ∈ Y0 : χv (v) = χz (v), z ∈ {s, t}}|
= 2|{vw ∈ Y : χv (v) = χz (v), z ∈ {s, t}}|.

Furthermore,

|{vz ∈ Y0 : χv (v) = χz (v), z (cid:54)∈ X0}| = |{vw ∈ Y0 : χv (v) = χz (v), z (cid:54)∈ {s, t}}|

Therefore, we obtain

SW(v) =

=

|{vz ∈ Y : χv (v) = χz (v), z ∈ X \ {s, t}}|
|{vz ∈ Y : χv (v) = χz (v), z ∈ {s, t}}|
2
d0
(cid:16)|Y | − |{vz ∈ Y : χv (v) (cid:54)= χz (v)}|(cid:17)
|{vz ∈ Y : χv (v) = χz (v)}|

.

2
d0

+

2
d0
2
d0

=

(3)
Now, assume that the input instance of EQUAL -M IN -CU T is a yes-instance, and let X = X1 ∪ X2
be the satisfying partition. Let v be such that the strategic red agents occupy the nodes of X1 and the
strategic blue agents occupy the nodes of X2 . Then, by deﬁnition we have that |{vz ∈ Y : χv (v) (cid:54)=
χz (v)}| = |{vz ∈ Y : v ∈ X1 , z ∈ X2}| ≤ W , and by (3) we obtain

SW(v) ≥ 2
d0

(|Y | − W ) = ξ .

Conversely, assume that there exists an assignment v with SW(v) ≥ ξ = 2
(|Y | − W ). Let
X1 consist of the nodes occupied by strategic red agents, and let X2 consist of the nodes occupied by
strategic blue agents. Then, X1

d0

Figure 5: The topology and the only possible equilibrium assignment for the 2-swap game considered in the
proofs of Theorems 5.1 and 5.2. For k-swap games (Theorem 5.1) there are k identical subtrees, and in the worst
equilibrium each subtree is ﬁlled by agents of a different type.

who are exposed, i.e., have at least one neighbor of a different type. As in the previous section, we again
focus on games with strategic agents only.
We start by showing that the integration price of anarchy of k-swap games is n/k , i.e., it scales
linearly with the number of agents. This indicates that in the worst case agents of different types are
highly segregated, but, as the number of types increases, equilibria become more diverse and the price
of anarchy decreases.
Theorem 5.1. For any k ≥ 2, the integration price of anarchy of k-swap games with strategic agents
only is at most n/k , and this bound is tight.

Proof. For the upper bound, consider a k-swap game with n agents. By deﬁnition, the optimal degree
of integration is at most n. Since the topology is a connected graph, in any assignment v at least one
agent per type must be exposed. Hence, DI(v) ≥ k , and the integration price of anarchy is at most n/k .
For the lower bound, consider a k-swap game with n = kx + 1 agents such that there are x + 1
agents of type T1 and x agents of type T(cid:96) for every (cid:96) ∈ [k ] \ {1}. The topology is a tree with root node α
that has k children nodes β1 , . . . , βk , each of which has x − 1 children leaf nodes of its own; see Figure 5
for an example of this topology for k = 2.
One can assign the agents to the nodes of the topology so that each agent is exposed; thus the
maximum possible degree of integration is n. However, there is an equilibrium assignment v in which
α is occupied by an agent of type T1 and for each (cid:96) ∈ [k ] all nodes of the β(cid:96) -subtree are occupied by
agents of type T(cid:96) . In v only the agent in α and the agents in nodes β(cid:96) , (cid:96) ∈ [k ] \ {1}, are exposed,
yielding degree of integration DI(v) = k , and the bound follows.

Next, we consider the integration price of stability. Using the same instance as in the proof of
Theorem 5.1, we show a lower bound that depends linearly on the number of agents for the fundamental
case of two agent types. This bound is tight by the previous theorem, and indicates that we cannot avoid
ending up with equilibrium assignments in which the types are highly segregated, even in the best case.
Theorem 5.2. The integration price of stability of 2-swap games with strategic agents only is at least

n/2.

Proof. Consider a 2-swap game with x + 1 red agents and x blue agents, for a total of n = 2x + 1
agents. The topology is the same as in Theorem 8: a tree consisting of a root node α with two children
nodes β1 and β2 , each of which has x − 1 children leaf nodes of its own (sets B1 and B2 ); see Figure 5.
The optimal degree of integration is n. We will now argue that the unique equilibrium assignment v
(up to symmetries) is such that α and all nodes of the β1 -subtree are occupied by red agents, while the
nodes of the β2 -subtree are occupied by blue agents. The degree of integration of v is exactly 2, so the
theorem follows.

15

.  .  . .  .  . 𝑥−1𝑥−1𝛼𝛽1𝛽2𝐵1𝐵2Assume that agent πα (v) is blue rather than red. We distinguish the following cases with regards to
the agents occupying nodes β1 and β2 .
• Both πβ1 (v) and πβ2 (v) are of the same type. Assume that both of these agents are blue; as there
are x + 1 red agents, there must be red agents at the leaf nodes of both B1 and B2 . But then
agent πβ2 (v) and some red agent occupying a node of B1 can swap to increase their utility from
strictly less than 1 and zero to 1 and positive, respectively. Hence, it must be the case that πβ1 (v)
and πβ2 (v) are both red. Again, if there are blue agents at the leaf nodes of both B1 and B2 , the
assignment is not an equilibrium, so the nodes of one of these subtrees (say, B1 ) are all occupied
by red agents, and the nodes of the other subtree are all occupied by blue agents. However, such
an assignment cannot be an equilibrium since the blue agent πα (v) and the red agent πβ2 (v) both
get zero utility and have an incentive to swap.
• πβ1 (v) is red and πβ2 (v) is blue. Since there are x red agents remaining, at least one of them
must be in B2 . But then she can swap positions with the blue agent πα (v) so that they increase
their utility from zero and 1/2 to 1/2 and 1, respectively.

Therefore, agent πα (v) must be red. Similarly to the previous case, we observe that if πβ1 (v) and
πβ2 (v) are both blue, there must be red agents in both B1 and B2 , and if πβ1 (v) and πβ2 (v) are both
red, there must be blue agents in both B1 and B2 , which means that πβ1 (v) and some agent in a node of
B2 would have an incentive to swap. Thus, one of πβ1 (v) and πβ2 (v) (say, πβ1 (v)) must be red and the
other one must be blue. Then, if there is a blue agent in B1 , by a counting argument there is also a red
agent in B2 , and these two agents would have an incentive to swap. Hence, v is the only equilibrium
assignment.

To develop better intuition for the integration price of anarchy and stability, we also consider the
special case where the topology is a line. In this case, while the integration price of anarchy remains
linear in n/k , the integration price of stability can be bounded by a small constant.

n

Theorem 5.3. Consider a k-swap game with strategic agents only, at least two agents per type, and a
line topology. The integration price of anarchy is at most
2k−2 , while the integration price of stability is
at most 9
4 . Moreover, if the number of agents of each type grows with n, the integration price of stability
is at most 3
2 + o(1). All these bounds are tight.
Proof. Let the topology be a line, with nodes 1, . . . , n connected in this order.
Price of anarchy. For the upper bound, consider an equilibrium assignment v. For each type Ti let (cid:96)i
be the leftmost agent of type Ti and let ri be the rightmost agent of this type. If v(cid:96)i (cid:54)= 1, then (cid:96)i has a
neighbor to the left who belongs to a different type; similarly, if vri (cid:54)= n then ri has a neighbor to the
right who belongs to a different type. Since nodes 1 and n are occupied by exactly two agents, it follows
that DI(v) ≥ 2k − 2. As at most n agents are exposed in any assignment, the bound follows.
To see that this bound is tight, it sufﬁces to consider a k-swap game with s agents per type, for some
s ≥ 2. We can create s identical blocks of agents, with each block containing exactly one agent of each
type, and place them on the line one after the other, so that every agent is exposed. However, there is
also an equilibrium where agents are placed in monochromatic blocks of size s, so that only 2k − 2
agents are exposed.
Price of stability. We partition the agents of each type into blocks of size 2 and 3, with at most one
block of size 3 per type (that is, we create a block of size 3 if and only if the number of agents of that type
is odd); let B1 , . . . , Bd be the resulting collection of blocks. Observe that any assignment where agents
in each block are placed contiguously on the line is an equilibrium. Indeed, under any such assignment
each agent has at least one neighbor of the same type, and no agent can move to a position where she

16

r + 1, . . . , r + |B |.

would have two neighbors of her type; she cannot move to nodes 1 or n either, since agents at these
nodes are unwilling to swap (they have utility 1).
It remains to explain how to place these blocks on the line to maximize the degree of integration.
We do so greedily, from left to right. That is, we ﬁrst pick some i ∈ [k ] such that |Ti | ≥ |Tj | for all
j ∈ [k ], and place some block B ⊆ Ti ﬁrst; if |B | = 2, we assign the agents in B to nodes 1 and 2,
and if |B | = 3, we assign the agents in B to nodes 1, 2, and 3. Now, suppose that (cid:96) blocks have been
placed, so that the last occupied node is node r , and the agent there is of type Tx . For each j ∈ [k ], let
tj be the number of agents of type Tj who have not yet been placed. If tj = 0 for all j ∈ [k ] \ {x}, we
complete the assignment by simply placing all the remaining agents of type Tx on the line. Otherwise,
we pick an i ∈ [k ] \ {x} such that ti ≥ tj for all j ∈ [k ] \ {x}, and place some block B ⊆ Ti in positions
Let us say that a type Ti is dominant if |Ti | > n/2. An easy inductive argument shows that if no type
is dominant, then under this assignment we never place two blocks of the same type next to each other;
the key observation is that if no type is dominant after (cid:96) blocks have been placed, this remains to be the
case after (cid:96) + 2 blocks have been placed, and hence if we still have at least two blocks to place, we have
at least two types to choose from. In this case, the only agents who are not exposed are agents at nodes
1 and n as well as agents located at the middle of a block of size 3, i.e., at most k + 2 agents. Thus, the
integration price of stability is at most
n−k−2 in this case. Now, suppose that some type (say, type T1 )
is dominant. If there are λ blocks of types T2 , . . . , Tk , then under our procedure we will ﬁrst alternate
between blocks of type T1 and blocks of other types, and then place the remaining blocks of type T1 (if
any). Then at least 4λ agents will be exposed. On the other hand, at most k − 1 of these λ blocks are of
size 3, so we have at most 2λ + k − 1 agents of types T2 , . . . , Tk , and hence in any assignment at most
2(2λ + k − 1) agents of type T1 can be exposed. Thus, the integration price of stability in this case is at
most

n

2 + o(1).

Since λ ≥ k − 1, this quantity is at most 9
4 . Further, if we assume that the number of agents of each type
grows with n, we have 3k−3
4λ = o(1), and the bound becomes 3
To see that the bound 9
4 on the integration price of stability is tight, consider a game with six red
agents and three blue agents. In equilibrium, the three blue agents need to form a single block: if there
is an isolated blue agent b, there is also a red agent r who is not a neighbor of b, but has another blue
neighbor; b and r can then beneﬁt from swapping. Thus, in equilibrium at most two blue agents—and
hence at most two red agents—are exposed. However, we can also create three blocks of agents, with
each block consisting of a single blue agent surrounded by two red agents, and place these three blocks
consecutively on the line, so that each agent is exposed.
To see that the bound 3
2 is tight if the number of agents of each type grows with n, consider an
instance with 4s red agents and 2s blue agents, for some s ∈ N. Arguing as above, we can see that in
equilibrium the blue agents have to appear in blocks of size at least 2, so that each blue agent has at most
one red neighbor. Hence, at most 2s red agents have a blue neighbor, and thus the number of exposed
agents is at most 4s. On the other hand, by placing agents in red-blue-red blocks, as described in the
previous paragraph, we can ensure that all 6s agents are exposed.

Hence, for games with simple line topologies, integration can be achieved in equilibrium. However,
when left to their own devices, the agents may end up in a very segregated conﬁguration.
We conclude this section by studying the complexity of computing assignments (not necessarily
equilibria) with high degree of integration. Unfortunately, it turns out that even this task is computation-
ally intractable.

Theorem 5.4. Given a k-swap game, computing an assignment in which every agent is exposed is
NP-complete, even if k = 2 and all agents are strategic.

17

3(2λ + k − 1)
4λ

=

+

3k − 3
4λ

.

3
2

Proof. The problem is clearly in NP; for a given assignment we can verify whether each of the n agents
has at least one neighbor of a different type in time O(n2 ). For the NP-hardness proof, we give a
reduction from the V ERT EX COVER problem, which is known to be NP-complete. An instance of
V ERT EX COV ER consists of an undirected graph H = (X, Y ) and an integer λ ≤ |X |. It is a yes-
instance if there exists a set X (cid:48) ⊆ X such that |X (cid:48) | ≤ λ and {v , w

threshold of every agent is 1, and thus she is never truly happy unless she is connected to friends only,
our proofs extend to other threshold values as well. For instance, one can verify that Theorem 3.1
for k = 2 holds for any τ ∈ (2/3, 1). A challenging open question is to completely characterize the
topologies and the threshold values for which equilibria are guaranteed to exist, and also design efﬁcient
algorithms to compute equilibria when they exist.
We have introduced a new index for measuring the diversity of a given assignment, which we called
the degree of integration. It would be interesting to explore the tradeoffs between diversity and social
welfare: can we compute (equilibrium) assignments with a given degree of integration that maximize
the social welfare? While our results indicate that this problem is hard for general topologies, one could
hope to obtain approximate or parameterized algorithms, or focus on simple topologies. One can also
investigate more ambitious diversity indices, e.g., by considering, for each agent, the number of other
types she is exposed to.

References

Elliot Anshelevich, Anirban Dasgupta, Jon M. Kleinberg, ´Eva Tardos, Tom Wexler, and Tim Roughgar-
den. The price of stability for network design with fair cost allocation. SIAM Journal on Computing,
38(4):1602–1623, 2008.

George Barmpalias, Richard Elwes, and Andrew Lewis-Pye. Digital morphogenesis via Schelling seg-
regation. In Proceedings of the 55th IEEE Annual Symposium on Foundations of Computer Science
(FOCS), pages 156–165, 2014.

George Barmpalias, Richard Elwes, and Andrew Lewis-Pye. From randomness to order: unperturbed
Schelling segregation in two or three dimensions. CoRR, abs/1504.03809, 2015.

Prateek Bhakta, Sarah Miracle, and Dana Randall. Clustering and mixing times for segregation models
on Z2 . In Proceedings of the 25th Annual ACM-SIAM Symposium on Discrete Algorithms (SODA),
pages 327–340, 2014.

Christina Brandt, Nicole Immorlica, Gautam Kamath, and Robert Kleinberg. An analysis of one-
dimensional Schelling segregation. In Proceedings of the 44th Symposium on Theory of Computing
Conference (STOC), pages 789–804, 2012.

Ankit Chauhan, Pascal Lenzner, and Louise Molitor. Schelling segregation with strategic agents. In
Proceedings of the 11th International Symposium on Algorithmic Game Theory (SAGT), pages 137–
149, 2018.

William Clark and Mark Fossett. Understanding the social context of the Schelling segregation model.
Proceedings of the National Academy of Sciences, 105(11):4109–4114, 2008.

Hagen Echzell, Tobias Friedrich, Pascal Lenzner, Louise Molitor, Marcus Pappik, Friedrich Sch ¨one,
Fabian Sommer, and David Stangl. Convergence and hardness of strategic Schelling segregation.
CoRR, abs/1907.07513, 2019.

Edith Elkind, Jiarui Gan, Ayumi Igarashi, Warut Suksompong, and Alexandros A. Voudouris. Schelling
games on graphs. In Proceedings of the 28th International Joint Conference on Artiﬁcial Intelligence
(IJCAI), pages 266–272, 2019.

Michael R. Garey, David S. Johnson, and Larry Stockmeyer. Some simpliﬁed np-complete problems.
In Proceedings of the 6th annual ACM Symposium on Theory of Computing (STOC), pages 47–63,
1974.

19

Nicole Immorlica, Robert Kleinberg, Brendan Lucier, and Morteza Zadimoghaddam. Exponential seg-
regation in a two-dimensional Schelling model with tolerant individuals. In Proceedings of the 28th
Annual ACM-SIAM Symposium on Discrete Algorithms (SODA), pages 984–993, 2017.

Elias Koutsoupias and Christos H. Papadimitriou. Worst-case equilibria. In Proceedings of the 16th
Annual Symposium on Theoretical Aspects of Computer Science (STACS), pages 404–413, 1999.

Stanley Lieberson and Donna K. Carter. A model for inferring the voluntary and involuntary causes of
residential segregation. Demography, 19(4):511–526, 1982.

Douglas S. Massey and Nancy A. Denton. The dimensions of residential segregation. Social Forces,
67(2):281–315, 1988.

Thomas C. Schelling. Models of segregation. American Economic Review, 59(2):488–493, 1969.

Thomas C. Schelling. Dynamic models of segregation. Journal of Mathematical Sociology, 1(2):143–
186, 1971.

H. Peyton Young.
Individual Strategy and Social Structure: an Evolutionary Theory of Institutions.
Princeton University Press, 2001.

Junfu Zhang. A dynamic model of residential segregation.
28(3):147–170, 2004.

Journal of Mathematical Sociology,

Junfu Zhang. Residential segregation in an all-integrationist world. Journal of Economic Behavior and
Organization, 54(4):533–550, 2004.

20

