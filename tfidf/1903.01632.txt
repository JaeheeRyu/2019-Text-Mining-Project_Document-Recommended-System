9
1
0
2

v
o

N

1
2

]

A

M

.

s

c

[

2
v
2
3
6
1
0

.

3
0
9
1

:

v

i

X

r

a

Demonstration of a Time-Eﬃcient Mobility System Using a Scaled
Smart City

L. E. Beaver, B. Chalaki, A. M. I. Mahbub, L. Zhao, R. Zayas, A. A. Malikopoulos

University of Delaware, Department of Mechanical Engineering, Newark, DE, USA 19716

ARTICLE HISTORY
Compiled November 22, 2019

ABSTRACT
The implementation of connected and automated vehicle (CAV) technologies en-
ables a novel computational framework to deliver real-time control actions that
optimize travel time, energy, and safety. Hardware is an integral part of any practi-
cal implementation of CAVs, and as such, it should be incorporated in any val-
idation method. However, high costs associated with full scale, ﬁeld testing of
CAVs have proven to be a signiﬁcant barrier. In this paper, we present the im-
plementation of a decentralized control framework, which was developed previ-
ously, in a scaled-city using robotic CAVs, and discuss the implications of CAVs
on travel time. Supplemental
information and videos can be found at https:

//sites.google.com/view/ud- ids- lab/tfms.

KEYWORDS
Connected and automated vehicles; optimal control; emerging mobility systems;
smart city; scaled city.

1. Introduction

Connectivity and automation provide the most intriguing opportunity for enabling
users to better monitor transportation network conditions and make better operating
decisions to reduce energy consumption, greenhouse gas emissions, travel delays, and
improve safety. In the context of a smart city, wireless connectivity provides free-ﬂow
of information among entities, while automation provides precise execution upon such
available information for moving goods and people safely and eﬃciently (Fig. 1). The
availability of vehicle-to-vehicle (V2V) and vehicle-to-infrastructure (V2I) communi-
cation has the potential to ease congestion and improve safety by enabling vehicles
to respond rapidly to changes in their mutual environment. Furthermore, vehicle au-
tomation technologies can aim at developing robust vehicle control systems that can
quickly respond to dynamic traﬃc operating conditions.
With the advent of emerging information and communication technologies, we are
witnessing a massive increase in the integration of our energy, transportation, and
cyber networks. These advances, coupled with human factors, are giving rise to a new
level of complexity in transportation networks [1]. As we move to increasingly com-
plex emerging transportation systems, with changing landscapes enabled by connectiv-
ity and automation, future transportation networks could shift dramatically with the

CONTACT A. A. Malikopoulos. Email: andreas@udel.edu

 
 
 
 
 
 
Figure 1. A city enabled by connectivity and automation technologies.

large-scale deployment of connected and automated vehicles (CAVs). On the one hand,
with the generation of massive amounts of data from vehicles and infrastructure, there
are opportunities to develop optimization methods to identify and realize a substantial
energy reduction of the transportation network, and to optimize the large-scale sys-
tem behavior using the interplay among vehicles. On the other hand, evaluation and
validation of new control approaches under diﬀerent traﬃc scenarios is a necessity to
ensure successful implementation per vehicle alongside desired system-level outcomes.
The overarching goal of this paper is the experimental demonstration of a decentral-
ized control framework for CAVs presented in [2] using the University of Delaware’s
Scaled Smart City (UDSSC). UDSSC is a 1:25 scaled testbed representing an urban
environment with robotic CAVs that can replicate real-world traﬃc scenarios in a
controlled environment (Fig. 2). UDSSC can be used to explore the acquisition and
processing of V2V and V2I communication. It can also be used to validate control al-
gorithms for CAV coordination in speciﬁc transportation segments, e.g., intersections,
merging roadways, and roundabouts, by mitigating the high costs and safety concerns
associated with real-world ﬁeld testing of CAVs. As an intermediate scale testbed, the
UDSSC is an ideal platform to gain insight into the execution of high-level planning
and coordination on physical hardware with noise, disturbances, and communication
delays. In this paper, our emphasis is on the generation of energy-optimal tra jectories,
and as such, we do not consider the problem of describing low-level controllers which
track the optimal tra jectories.
The structure of the paper is organized as follows. In Section 2, we discuss related
work on the optimal control for CAVs reported in the literature. In Section 3, we
review the decentralized control framework presented in [2] for the coordination of
CAVs in a transportation network. Then, we describe brieﬂy the UDSSC testbed in
Section 4, and present simulation and experimental results in Section 5. Finally, we
draw concluding remarks from the experiments in Section 6.

2

Figure 2. The University of Delaware’s Scaled Smart City.

2. Related Work

CAVs have attracted considerable attention for the potential of improving mobility
and safety along with energy and emission reduction [3,4]. There have been two ma-
jor approaches to utilizing connectivity and automation to improve transportation
eﬃciency and safety, namely, platooning and traﬃc smoothing.
The ﬁrst approach utilizes connectivity and automation to form closely-coupled ve-
hicular platoons to reduce aerodynamic drag eﬀectively, especially at high cruising
speeds. The concept of forming platoons of vehicles was a popular system-level ap-
proach to address traﬃc congestion, which gained momentum in the 1980s and 1990s
[5,6]. Such automated transportation system can alleviate congestion, reduce energy
use and emissions, and improve safety while increasing throughput signiﬁcantly. The
Japan ITS Energy Pro ject [7], the Safe Road Trains for the Environment program [8],
and the California Partner for Advanced Transportation Technology [9] are among the
mostly-reported eﬀorts in this area.
The second approach is to smooth the traﬃc ﬂow by centralized or decentralized ve-
hicle control to reduce spatial and temporal speed variation and braking events, e.g.,
automated intersection crossing [10–14], cooperative merging [2,15,16], and speed har-
monization through optimal vehicle control [17]. In centralized approaches, there is at
least one task in the system that is globally decided for all vehicles by a single central
controller, whereas in decentralized approaches, the vehicles are treated as autonomous
agents that collect traﬃc information to optimize their speciﬁc performance criteria
while satisfying physical constraints. One of the very early eﬀorts in this direction
was proposed by Athans [18] for safe and eﬃcient coordination of merging maneuvers
with the intention to avoid congestion. Since then, numerous approaches have been
proposed on coordinating CAVs to improve traﬃc ﬂow [19–21], and to achieve safe and
eﬃcient control of traﬃc through various traﬃc bottlenecks where potential vehicle
collisions may happen [22–31]. In terms of energy impact, many studies have shown
that signiﬁcant fuel consumption savings could be achieved through eco-driving and
vehicle optimal control without sacriﬁcing driver safety [2,12,16,32–34]. Considering
near-future CAV deployment, recent research work has also explored both traﬃc and
energy implications of partial penetration of CAVs under diﬀerent transportation sce-

3

narios, e.g., [35–37]. Several survey papers that report the research eﬀorts in this area
can be found in [38–40].
Although previous work has shown promising results emphasizing the potential
beneﬁts of coordination of CAVs, validation has been primarily in simulation. Some
progress has been made with constructing experimental testbeds, such as MIT’s Duck-
ietown [41], which focuses primarily on local perception and autonomy, and the Cam-
bridge Minicars [42], which is a testbed for cooperative driving in highway conditions.
In contrast, the UDSSC focuses on traﬃc coordination in an urban system, where a
ma jority of stop-and-go driving occurs. In previous work, we presented the experi-
mental validation of the solution to the unconstrained merging roadway problem in
UDSSC using 10 robotic CAVs [43]. In this paper, we demonstrate the impact of an
optimal decentralized framework, developed in earlier work [2], for coordinating CAVs
in a transportation network with multiple conﬂict zones where a lateral collision may
occur.

3. Decentralized Control Framework

We consider a network of CAVs driving in the roadway network in UDSSC, which
consists of several conﬂict zones, e.g., ramps, roundabouts, and intersections, where
lateral collisions may occur (marked with red boxes in Fig. 3). For each conﬂict zone,
there is a coordinator that communicates with all CAVs traveling within its com-
munication range. In practice, the coordinator can be stationary roadside units for
general-purpose traﬃc monitoring and message dissemination or mobile roadside units
(e.g., transit vehicles, drones), which can provide dynamic traﬃc monitoring and com-
munication support at speciﬁc locations or along corridors. Each CAV is retroﬁtted
with a communication device necessary to interact with other vehicles and local in-
frastructure within their communication range. Upstream of a conﬂict zone, we deﬁne
a control zone in each direction, inside of which, the CAVs coordinate with each other
in order to travel through the conﬂict zone without any collisions (Fig. 3). The length
of the control zone can be considered to be the maximum communication range of a
V2X device. Outside the control zone, the CAVs behave as human-driven vehicles. For
simplicity, we do not consider multi-lane tra jectories or any lane changes within the
control zone. This is the focus of ongoing work [44], and it is not discussed here.

3.1. Modeling Framework and Assumptions
Let z ∈ Z be the index of a conﬂict zone in the corridor. Let Nz (t) = {1, 2, ..., N (t)} be
a queue of CAVs to be analyzed corresponding to the conﬂict zone z , where N (t) ∈ N is
the total number of CAVs at the time t ∈ R+ . The dynamics of each vehicle i ∈ Nz (t),
are represented with a state equation

˙x(t) = f (t, xi , ui ), xi (tz ,0

i ) = xz ,0
i

,

(1)

where xi (t), ui (t) are the state of the vehicle and control input, tz ,0
is the initial time
of vehicle i ∈ Nz (t) entering the control zone corresponding to the conﬂict zone z ,
and xz ,0
is the value of the initial state. For simplicity, we model each vehicle as a
˙pi = vi (t) and ˙vi = ui (t), where pi (t) ∈ Pi , vi (t) ∈ Vi , and
ui (t) ∈ Ui denote the position, speed, and acceleration/deceleration (control input) of
double integrator, i.e.,

i

i

4

Figure 3. Vehicle routes in the University of Delaware’s Scaled Smart City environment.

i

each vehicle i. Let xi (t) = [pi (t) vi (t)]T denote the state of each vehicle i ∈ Nz (t), with
initial value xz ,0
i (t) = [0 vz ,0
(t)]T , taking values in the state space Xi = Pi × Vi . The
sets Pi , Vi , and Ui , i ∈ N (t), are complete and totally bounded subsets of R. The state
space Xi for each vehicle i is closed with respect to the induced topology on Pi × Vi
and thus, it is compact.
To ensure that the control input and vehicle speed are within a given admissible
range, we impose the constraints
umin ≤ ui (t) ≤ umax , and
0 ≤ vmin ≤ vi (t) ≤ vmax , ∀t ∈ [tz ,0

(2)

],

, tz ,f
i

i

tz ,f
i

where umin , umax are the minimum deceleration and maximum acceleration respec-
tively, vmin , vmax are the minimum and maximum speed limits respectively, and tz ,0
,
are the times that each vehicle i enters and exits the conﬂict zone z .
To avoid a rear-end collision between two consecutive vehicles traveling in the same
lane, the position of the preceding vehicle should be greater than, or equal to the posi-
tion of the following vehicle plus a predeﬁned safe distance δi (t), which is proportional
to the speed of vehicle i, vi (t). Thus, we impose the rear-end safety constraint
si (t) = pk (t) − pi (t) ≥ δi (t),
∀t ∈ [tz ,0

(3)

],

i

, tz ,f
i

i

where vehicle k is immediately ahead of i on the same lane. The minimum safe distance,
δi (t), is a function of speed, namely
δi (t) = γi + h · vi (t),

(4)

where γi is the standstill distance and h is the minimum safe time gap that CAV i can

5

maintain while following another vehicle.
Deﬁnition 1. For each CAV i ∈ Nz (t) approaching a conﬂict zone z ∈ Z , we deﬁne
two subsets of Nz (t) depending on the physical location of i inside the control zone:
1) Lz
i (t) contains all CAVs traveling in the same road and lane as CAV i, which may
cause rear-end collision with CAV i, and 2) C z
i (t) contains all CAVs traveling on a
diﬀerent road from i that can cause a lateral collision inside the conﬂict zone z .
Deﬁnition 2. For each vehicle i ∈ Nz (t), we deﬁne the set Γz
i that consists of the
positions along the lane where a lateral collision is possible in a conﬂict zone z , namely
pi (t) | t ∈ [tz ,m

(cid:44) (cid:110)

(cid:111)

(5)

,

Γz

i

, tz ,f
i

]

i

i

where tz ,m
is the time that vehicle i exits the control zone (and enters the conﬂict zone
z ), and tz ,f
is the time that vehicle i exits the conﬂict zone z .
Consequently, to avoid a lateral collision for any two vehicles i, j ∈ Nz (t) on diﬀerent
roads we impose the following constraint

i

Γz

i

(cid:40)

(cid:110)

(cid:111)

δ(t)
vz ,

Lz

vmin

,

Lz
i )

vi (tz ,0

,

Lz

vmax

(cid:41)

a ﬁrst-in-ﬁrst-out queue Nz (t). If any two, or more, vehicles enter the control zone at
the same time, then the coordinator randomly selects their positions in the queue.
Deﬁnition 3. For each CAV i ∈ Nz (t) entering the control zone z , the information
set Y z
i (t) (cid:44) (cid:110)
i (t), is deﬁned as
pi (t), vi (t), Lz
i (t), C z
Y z
i (t), tz ,m
where pi (t), vi (t) are the position and speed of CAV i inside the control zone z , tz ,0
is
the time when vehicle i enters the control zone for conﬂict zone z , and tz ,m
is the time
targeted for vehicle i to enter the conﬂict zone z . The set Y z
i (t) includes all information
that each vehicle shares.

, ∀t ∈ [tz ,0

, tz ,m
i

(cid:111)

(7)

],

i

i

i

i

i

The time tz ,m
that the vehicle i will be entering the conﬂict zone z maximizes the
throughput while considering the maximum and minimum speed limits. Therefore, to
ensure that (3) and (6) are satisﬁed at tz ,m
, we impose the following conditions which
depend on the subset that the vehicle i − 1 ∈ Nz (t) belongs to.
If CAV i − 1 ∈ Lz
i (t),

i

tz ,m

i = max

min

tz ,m

i−1 +

.

(8)

If CAV i − 1 ∈ C z
i (t),

(cid:40)

tz ,m

i = max

min

(cid:110)

tz ,m

i−1 +

(cid:111)

,

S z
vz ,

Lz

vmin

Lz
i )

vi (tz ,0

,

Lz

vmax

(cid:41)

,

(9)

i

i

where S z is the length of conﬂict zone z , Lz is the length of control zone for zone z , vz
is the constant imposed speed inside the conﬂict zone z , and vi (tz ,0
i ) is the initial speed
of vehicle i when it enters the control zone at tz ,0
. The conditions (8) and (9) ensure
that the time tz ,m
each vehicle i will be entering the conﬂict zone is feasible and can
be attained based on the imposed speed limits inside the control zone. In addition, for
low traﬃc ﬂow where vehicles i − 1 and i might be located far away from each other,
there is no compelling reason for vehicle i to accelerate within the control zone to have
a distance δ(t) from vehicle i − 1, if i − 1 ∈ Lz
i (t), or a distance S z if i − 1 ∈ Lz
i (t), at
the time tz ,m
that vehicle i enters the conﬂict zone z . Therefore, in such cases, vehicle
i can keep cruising within the control zone with the initial speed vi (tz ,0
i ) that entered
the control zone at tz ,0
.
The recursion is initialized when the ﬁrst vehicle enters the control zone z , i.e., it is
assigned i = 1. In this case, tz ,m
can be externally assigned as the desired exit time of
this vehicle whose behavior is unconstrained. Thus, the time tz ,m
is ﬁxed and available
through Y1 (t). The second vehicle will access Y z
1 (t) from vehicle 1 to compute the time
. The third vehicle will access Y z
2 (t) from vehicle 2, and the communication process
will continue with the same fashion until vehicle N (t) in the queue accesses Y z
N (t)−1 (t).

tz ,m
2

1

1

i

i

7

3.3. Optimal Control Problem Formulation

By controlling the entry time of the vehicles, the speed of queue build-up at each
conﬂict zone decreases. Thus, the congestion recovery time is also reduced – the lat-
ter results in maximizing the throughput in the conﬂict zone. We now consider the
problem of deriving the optimal control input (acceleration/deceleration) of each CAV
inside each control zone separately under hard safety constraints to avoid collisions.
Moreover, by optimizing the acceleration/deceleration of each vehicle, we minimize
transient operation. This will have direct beneﬁts in energy consumption since the
vehicles are optimized to travel over steady state operating points (constant torque
and speed) [45].
Since the coordinator for a conﬂict zone z is not involved in any decision on the
vehicle coordination, we formulate the following optimization problem for each vehicle
in the queue upstream of conﬂict zone z , the solution of which can be implemented in
real-time

min

1
i (t)dt, z ∈ Z ,
u2
2
Sub ject to : (1), (2), pi (tz ,0
, vi (tz ,0
and given tz ,0
,

i ) = pz ,0
i

i ) = vz ,0
i
, tz ,m
i

ui

(10)

, pi (tz ,m

i

) = pz ,

(cid:90) tz,m
i
tz,0
i

i

i

i

, vz ,0
i

where pz is the location (i.e., entry position) of the conﬂict zone z , tz ,m
is the time that
the vehicle i enters the conﬂict zone, and pz ,0
are the initial position and speed
of vehicle i ∈ Nz (t) when it enters the control zone of conﬂict zone z . By minimizing
the L2 norm of acceleration we minimize transient engine operation which results in
an overall improvement in energy eﬃciency.
For the analytical solution and real-time implementation of the control problem (10),
we apply Hamiltonian analysis. The analytical solution of (10) without considering
state and control constraints was presented in earlier work [15,16] for coordinating
CAVs in real-time at highway on-ramps. When the state and control constraints are
not active, the optimal control input (acceleration/deceleration) as a function of time
is given by

u∗

i ≤ t ≤ tz ,m
i (t) = ai t + bi , tz ,0

i

,

and the optimal speed and position for each vehicle are

v∗

i (t) =

1
2

i ≤ t ≤ tz ,m
ai t2 + bi t + ci , tz ,0

i

,

p∗

i (t) =

1
6

ai t3 +

1
2

i ≤ t ≤ tz ,m
bi t2 + ci t + di , tz ,0

i

,

(11)

(12)

(13)

where ai , bi , ci and di are constants of integration that can be computed by using
the initial and ﬁnal conditions. Similar results to (11)-(13) can be obtained when the
state and control constraints become active within the control zone. In this case, the
constrained and unconstrained arcs need to be pieced together to satisfy the Euler-
Lagrange equations and the necessary conditions of optimality. The diﬀerent cases
of the state and control constraint activation along with the corresponding solution

8

can be found in [12], whereas the complete analytical solution that includes the rear-
end safety constraint is reported in [46]. In the present work, we do not consider any
constrained optimization cases as none of the constraints in (2) become active within
the optimal control path during the simulation, as shown in Section 5.

4. Simulation and Experimental Environment

4.1. Simulation Setup

To implement the control framework presented in the previous section, and to gen-
erate the input information required for UDSSC, we ﬁrst use the microscopic multi-
modal simulation platform PTV VISSIM. We create a simulation setup replicating the
UDSSC map and deﬁne a network consisting of four diﬀerent looped routes and ﬁve
bottlenecks (one intersection, one roundabout, and three merging scenarios), as shown
in Fig. 3. In order to maintain compatibility with the UDSSC experiment, we design
each of the routes to hold a ﬁnite number of vehicles (19 vehicles in total) traveling in
loops for ﬁnite simulation run-time. Among the 19 vehicles, we consider 9 vehicles as
the target (ego-vehicles) to evaluate their performance metrics in diﬀerent scenarios.
We use the rest of the vehicles to increase the traﬃc volume in the urban network
and create congestion in the baseline scenario. The vehicles maintain a low desired
speed of 7 m/s for their uncontrolled urban commute throughout the network. There-
fore, the desired speed at all exits of the control zones is set to be equal to the urban
speed. We select the maximum and minimum allowable speed of 8.33 m/s and 2 m/s,
respectively. The maximum and minimum acceleration of the vehicles was taken as 3
m/s2 and -3 m/s2 , respectively. To evaluate the eﬀectiveness of the proposed optimal
vehicle dynamics control, we consider two diﬀerent cases:
a. Baseline Scenario: We construct the baseline scenario by considering all vehicles
as human-driven and without any V2V communication capability. The vehicles sub-
scribe to the Wiedemann car following model. The Wiedemann car following model is
a psycho-physical model to emulate the driving behavior of real human-driven vehi-
cles. The model was ﬁrst presented in 1974 by Wiedemann [47] and has been adopted
by the software PTV-VISSIM as one of its in-built car following models. The complete
detail of this elaborate model can be found in the literature [47]. We do not change the
VISSIM default parameters of the Wiedemann model to study their impact on vehicle
behavior and traﬃc ﬂow, as such exposition falls outside the scope of this paper. We
build a ﬁxed time signalized intersection for the four-way traﬃc at the center. The
ﬁxed time signalized intersection in the simulation provides Signal Phase and Tim-
ing (SPaT) messages to the leading vehicle internally through VISSIM. Based on the
SPaT information, the leading vehicle stops at the desired position by adopting the
Wiedemann car following model. We adopt priority-based (yield/stop) movement for
the other four waypoints consisting of the roundabout and merging scenarios, where
the secondary-road vehicles yield to the main-road vehicles. In both cases, VISSIM
uses the approaching point parameter of Wiedemann car following model to detect
any approaching obstacles and apply necessary braking to slow down or stop.
b. Optimal Control led Scenario: In the optimal scenario, all 19 vehicles follow our
optimal control framework. The vehicles are connected with each other inside the
control zone through V2V communication capability and are automated within the
control zone. Therefore, they can plan their optimal path inside the control zone,
avoiding any lateral or rear-end collisions while optimizing their own travel time and

9

fuel eﬃciency. In this scenario, we do not consider the ﬁxed-time signal and movement
priorities considered in the baseline case. We consider ﬁve isolated coordinators with
a control zone of 45 m for each conﬂict zone (see Fig. 3). For the uncontrolled paths
in-between the control zones, the vehicles adopt the Wiedemann car following model
[47] to traverse their respective routes.

4.2. University of Delaware’s Scaled Smart City

UDSSC is a 1:25 scaled testbed spanning over 400 square feet (see Fig. 2) and is capable
of accommodating scaled robotic CAVs. It is equipped with a VICON motion capture
system that uses eight cameras to track the position of each vehicle with sub-millimeter
accuracy. Each road in the UDSSC is built up from arc or line segments. In order to
track the desired vector position of each CAV, all road segments are parameterized
in terms of their total length. This formulation allows each vehicle to calculate its
desired position in UDSSC based only on the scalar distance along its current path,
which is achieved by numerically integrating the speed proﬁle in real-time on both
the mainframe computer and each CAV. This decoupling of speed and position allows
signiﬁcant ﬂexibility in UDSSC, especially in dynamic-routing scenarios.

4.2.1. Connected and Automated Vehicles

The CAVs of UDSSC (see Fig. 4) have been designed using oﬀ the shelf electrical
components and 3D printed parts created at the University of Delaware. The primary
microcontroller on the CAV is a Raspberry Pi 3B running Ubuntu Mate and ROS
Kinetic. An Arduino Nano is used as a slave processor for the Pi to do low-level
motor control and ad-hoc analog to digital conversion for the state of charge (SOC)
measurements. The CAV’s rear-wheel drive train is powered by a Pololu 75.8:1, 6 V
micro metal gearmotor; the motor is controlled using a motor controller, and encoder
for feedback, through the Arduino. Power from the gearmotor is transferred to the rear
axle with two 3D printed gears with a 1:1 ratio, and two rubberized wheels with radius
r = 1.6 cm are mounted directly to the rear axle. The motor controller receives power
through a 5 V regulator, and a pulse-width modulated command from the Arduino
is used to control the motor’s speed. Steering is achieved by a custom 3D printed
Ackermann-style steering mechanism actuated by a Miuzei micro servo motor, which
again is controlled directly by the Arduino. The CAVs are also equipped with a Pi
Camera, ultrasonic sensors, and a SOC measurement circuit to collect experimental
data and reduce the overall reliance on VICON. A power regulator manages the voltage
requirement of the Pi and Arduino by supplying a regulated 5 V DC from two 3000
mAh 3.7 V Li-ion batteries conﬁgured in series. With this hardware conﬁguration, the
CAV is able to run and collect experimental data at 20 Hz for up to 2 hours.

4.2.2. Control System Architecture

Coordination of the CAVs within the UDSSC is achieved using a multi-level control
framework spanning a central mainframe computer (Processor: Intel Core i7-6950X
CPU @ 3.00 GHz x 20, Memory: 125.8 Gb) and the individual CAVs in the experiment
(Raspberry Pi 3B). The mainframe runs an Ubuntu 16.04.5 LTS Linux distribution
and ROS Kinetic. High-level routing is achieved by a multithreaded C++ program
running on the mainframe computer. For this set of experiments, the mainframe is
initialized with the path information and speed proﬁles for each CAV. At the start

10

Figure 4. A picture of the connected and automated vehicle’s electronics (left) and outer shell with VICON
markers, ultrasonic sensors, and camera visible (right).

of the experiment, each CAV sets its temporal baseline from which it measures all
later times; this avoids the problem of synchronizing CAV clocks, as all information is
calculated relative to the experiment start time. During the experiment, the mainframe
passes a message to each CAV containing its current position and two seconds of
tra jectory data using the UDP/IP protocol at 50 Hz. The CAV receives tra jectory
information from the mainframe and uses a modiﬁed Stanley [48] controller to handle
lane tracking, while a feedforward-feedback [49] PID controller tracks the desired speed
proﬁle.
Medium and low-level control is accomplished onboard each CAV in a purely dis-
tributed manner. Using information from the mainframe, each CAV updates at 50 Hz
to calculate a lateral, heading, and distance error. The lateral and heading errors are
then passed to the Stanley controller to calculate an output steering angle. Meanwhile,
the position error and desired speed are used in a feedforward-feedback controller to
calculate the desired motor speed. The desired speed and steering angle are then passed
to the Arduino Nano, which runs a low-level PID controller to precisely control the
gearmotor and steering servo.

4.3. Experimental Setup

In order to replicate the simulation results in the UDSSC, speed proﬁles for the 9
ego vehicles are exported from VISSIM to the mainframe. The path information and
speed proﬁle are dispersed to each CAV for the duration of the experiment. Then, the
CAVs at UDSSC numerically integrate the speed proﬁle data in real-time to calculate
their desired position, allowing them to track the desired speed and position in a
decentralized manner. Simultaneously, the mainframe computer integrates the speed
proﬁle in order to send current and future path information to the CAVs.

11

5. Results

5.1. Simulation Results

The speed proﬁles of the CAVs, making multiple passes through each loop of the
UDSSC map, for the baseline and optimal control scenario are shown in Fig. 5a - 5d.
The baseline speed proﬁles show signiﬁcant stop-and-go driving behavior. The eﬀect
of congestion in these cases can induce artiﬁcial congestion or phantom traﬃc jams
outside the corridor, as can be seen in Fig. 5d between 60 and 120 s.
Compared to the baseline speed proﬁles, we note that the optimal controller has
completely eliminated stop-and-go driving, and the optimal quadratic proﬁle speed is
realized within the control zones. The congestion observed in the baseline scenario in
Fig. 5d has also been mitigated, rendering an overall smooth traﬃc ﬂow throughout
the network.
Note that the speed proﬁles are kept within the maximum and minimum limit inside
the control zone as described in Section 4.1. Therefore, none of the state and control
constraints of (2) became active in the unconstrained arc, and our relaxation of (2)
holds. However, we see a few cases of constraint violation of the acceleration proﬁle
outside the control zone in Fig. 5a - 5d, where the Wiedemann car-following model
[47] is applied instead of the optimal control. Note that optimal control is applied only
inside the designated control zones.

5.2. Experimental Validation

To validate the eﬀectiveness and eﬃciency of our optimal control observed in the
simulation, we compare the travel time of 9 CAVs between the baseline and optimal
scenarios. The travel time is calculated as the time taken for each vehicle to complete
a single loop by sampling the raw VICON data over the 80 s experiment. In particular,
returning to the initial position was deﬁned as the ﬁrst time the vehicle came within 10
cm of its initial position after a 5 s initial window. These values are presented in Table 1
and Fig. 6 alongside the route each CAV took (as annotated in Fig. 3); a value of greater
than 80 s corresponds to a vehicle not fully completing its loop during the experiment,
which occurred 3 times in the baseline scenario. Videos of the experiment can be found

at the supplemental site, https://sites.google.com/view/ud-ids-lab/tfms.

Table 1. Travel time for each vehicle to complete a single loop.

Vehicle Baseline time [s] Optimal time [s]

Loop Time saved [s] % Decrease

8
18
12
14
4
13
2
5
17

> 80
> 80
66.25
65.95
57.80
60.30
46.61
43.90
> 80

54.10
48.00
45.55
49.90
53.25
59.75
37.40
44.20
41.50

North
North
East
East
South
South
West
West
West

> 25.9
> 32.0
20.70
16.05
4.55
0.55
9.21
−0.30
> 38.5

32.4
40.0
31.2
24.3
7.9
0.9
19.8
-0.7
48.1

From Table 1, an average improvement of at least 16.35 s (25%) over the baseline
travel time was observed in the UDSSC. The marginal improvement was in the South-

12

(a) North Loop

(b) East Loop

(c) South Loop

(d) West Loop

Figure 5.
Instantaneous maximum, minimum, and average speed of each vehicle by route. Each data set is
taken from the ﬁrst 160s of simulation.

ern loop, where the traﬃc was eﬀectively free-ﬂowing in the baseline scenario. In the
loops with conﬂict zones, i.e., north, east, and west, the impact of the coordinator and
optimal control is clear and signiﬁcant.
The speed proﬁles of CAVs 2, 14, 17, and 13 are shown in Fig. 7. These proﬁles
were taken by numerically deriving the VICON position data taken at 100 Hz to get
velocity components. Then, any speeds above 0.8 m/s, well above the maximum speed
achievable by the CAVs, was attributed to occlusion during the experiment and thus
discarded. Finally, the velocity magnitude was run through a moving average ﬁlter
with a window of 0.45 s.
We conclude from the above results that 1) almost the entire reduction in transit
time can be attributed to optimal control in the conﬂict zones, and 2) the optimal
control framework almost entirely eliminates stop-and-go driving.

13

 Optimal Range  Optimal Avg. Optimal Range  Optimal Avg. Optimal Range  Optimal Avg. Optimal Range  Optimal Avg.Figure 6. Histogram for the arrival time of each vehicle in Table 1 with 6 bins per experiment.

6. Conclusion

In this paper, we presented an experimental demonstration of a decentralized optimal
control framework for CAVs, presented in [2]. We used a 1:25 scaled testbed repre-
senting an urban environment with robotic CAVs that can replicate real-world traﬃc
scenarios in a controlled environment. We showed that the optimal control frame-
work could contribute a 25% reduction in travel time compared to a baseline scenario
consisting of human-driven vehicles without connectivity. We should note that under
heavy congested traﬃc conditions, the control framework might not be as eﬀective as
it is under light to medium traﬃc conditions in improving traﬃc ﬂow without tuning
some control parameters (e.g., minimum time gap, length of the control zone, etc.)
[50]. In recent work [51], the eﬀectiveness of the proposed optimal control framework
has been investigated under diﬀerent traﬃc conditions to conﬁrm its robustness.
Ongoing research includes the formulation of an upper-level optimization problem,
the solution of which yields, for each CAV, the optimal entry time and lane changes
required to cross the intersection [44] and explores the associated tradeoﬀs between
throughput and energy consumption of each vehicle.
An important direction for future research is to consider diﬀerent penetrations of
CAVs, which can signiﬁcantly alter the eﬃciency of the entire system. For example,
an important question that needs to be addressed is, “what is the minimum number
of CAVs in order to realize potential beneﬁts?” Future work should also consider
the robustness of the control framework and its applicability under various traﬃc
conditions. The impact of communication errors and delays on safety and optimality
are also areas of future research.

14

Figure 7. Speed vs time proﬁles for vehicles (clockwise from top left) 2 (west), 14 (east), 17 (west), 13
(south.).

Acknowledgement(s)

The authors would like to acknowledge Michael Lashner, Kunzheng Li, Haley Lloyd,
Thomas Patterson, and the rest of the UDSSC Senior Design team for their eﬀort in
designing, building, and testing the newest generation of CAVs used in this paper. The
authors would also like to thank Ioannis Vasileios Chremos for his valuable comments
and feedback on the manuscript.

Funding

This research was supported in part by ARPAEs NEXTCAR program under the award
number DE- AR0000796 and by the Delaware Energy Institute (DEI). This support
is gratefully acknowledged.

References

[1] Malikopoulos AA. A duality framework for stochastic optimal control of complex systems.
IEEE Transactions on Automatic Control. 2016;61(10):2756–2765.
[2] Zhao L, Malikopoulos AA. Decentralized optimal control of connected and automated
vehicles in a corridor. In: 2018 21st International Conference on Intelligent Transportation
Systems (ITSC); IEEE; 2018. p. 1252–1257.
[3] Spieser K, Treleaven K, Zhang R, et al. Toward a systematic approach to the design

15

and evaluation of automated mobility-on-demand systems: A case study in singapore. In:
Road vehicle automation. Springer; 2014. p. 229–245.
[4] Fagnant DJ, Kockelman KM. The travel and environmental implications of shared au-
tonomous vehicles, using agent-based model scenarios. Transportation Research Part C:
Emerging Technologies. 2014;40:1–13.
[5] Shladover SE, Desoer CA, Hedrick JK, et al. Automated vehicle control developments in
the PATH program. IEEE Transactions on Vehicular Technology. 1991;40(1):114–130.
[6] Ra jamani R, Tan HS, Law BK, et al. Demonstration of integrated longitudinal and lateral
control for the operation of automated vehicles in platoons. IEEE Transactions on Control
Systems Technology. 2000;8(4):695–708.
[7] Tsugawa S. An overview on an automated truck platoon within the energy its pro ject.
IFAC Proceedings Volumes. 2013;46(21):41–46.
[8] D´avila A, Nombela M. Sartre: Safe road trains for the environment. In: Conference on
Personal Rapid Transit PRT@ LHR; Vol. 3; 2010. p. 2–3.
[9] Shladover SE. PATH at 20–History and ma jor milestones. IEEE Transactions on intelli-
gent transportation systems. 2007;8(4):584–592.
[10] Lee J, Park B. Development and Evaluation of a Cooperative Vehicle Intersection Control
Algorithm Under the Connected Vehicles Environment. IEEE Transactions on Intelligent
Transportation Systems. 2012;13(1):81–90.
[11] Rakha H, Kamalanathsharma RK. Eco-driving at signalized intersections using V2I com-
munication. In: Intelligent Transportation Systems (ITSC), 2011 14th International IEEE
Conference on; IEEE; 2011. p. 341–346.
[12] Malikopoulos AA, Cassandras CG, Zhang YJ. A decentralized energy-optimal control
framework for connected automated vehicles at signal-free intersections. Automatica.
2018;93:244 – 256.
[13] Mahbub AMI, Zhao L, Assanis D, et al. Energy-Optimal Coordination of Connected and
Automated Vehicles at Multiple Intersections. In: Proceedings of 2019 American Control
Conference; 2019. p. 2664–2669.
[14] Chalaki B, Malikopoulos AA. An optimal coordination framework for connected and
automated vehicles in two interconnected intersections. In: Proceedings of 2019 IEEE
Conference on Control Technology and Applications, 2019; 2019. p. 888–893.
[15] Rios-Torres J, Malikopoulos AA. Automated and Cooperative Vehicle Merging at
Highway On-Ramps. IEEE Transactions on Intelligent Transportation Systems. 2017;
18(4):780–789.
[16] Ntousakis IA, Nikolos IK, Papageorgiou M. Optimal vehicle tra jectory planning in the
context of cooperative merging on highways. Transportation Research Part C: Emerging
Technologies. 2016;71:464–488.
[17] Malikopoulos AA, Hong S, Park B, et al. Optimal control for speed harmonization of
automated vehicles. IEEE Transactions on Intelligent Transportation Systems. 2018;.
[18] Athans M. A uniﬁed approach to the vehicle-merging problem. Transportation Research.
1969;3(1):123–133.
[19] Kachroo P, Li Z. Vehicle merging control design for an automated highway system. In:
Proceedings of Conference on Intelligent Transportation Systems; 1997. p. 224–229.
[20] Antoniotti M, Deshpande A, Girault A. Microsimulation analysis of automated vehicles
on multiple merge junction highways. In: IEEE International Conference in Systems, Man,
and Cybernetics; 1997. p. 839–844.
[21] Ran B, Leight S, Chang B. A microscopic simulation model for merging control on a
dedicated-lane automated highway system. Transportation Research Part C: Emerging
Technologies. 1999;7(6):369–388.
[22] Dresner K, Stone P. Multiagent traﬃc management: a reservation-based intersection
control mechanism. In: Proceedings of the Third International Joint Conference on Au-
tonomous Agents and Multiagents Systems; 2004. p. 530–537.
[23] Dresner K, Stone P. A multiagent approach to autonomous intersection management.
Journal of artiﬁcial intelligence research. 2008;31:591–656.

16

[24] de La Fortelle A. Analysis of reservation algorithms for cooperative planning at inter-
sections. In: 13th International IEEE Conference on Intelligent Transportation Systems;
2010. p. 445–449.
[25] Huang S, Sadek A, Zhao Y. Assessing the Mobility and Environmental Beneﬁts of
Reservation-Based Intelligent Intersections Using an Integrated Simulator. IEEE Trans-
actions on Intelligent Transportation Systems. 2012;13(3):1201–1214.
[26] Zohdy IH, Kamalanathsharma RK, Rakha H. Intersection management for autonomous
vehicles using iCACC; 2012. p. 1109–1114.
[27] Yan F, Dridi M, El Moudni A. Autonomous vehicle sequencing algorithm at isolated inter-
sections. 2009 12th International IEEE Conference on Intelligent Transportation Systems.
2009;:1–6.
[28] Li L, Wang FY. Cooperative Driving at Blind Crossings Using Intervehicle Communica-
tion. IEEE Transactions in Vehicular Technology. 2006;55(6):1712,1724.
[29] Zhu F, Ukkusuri SV. A linear programming formulation for autonomous intersection
control within a dynamic traﬃc assignment and connected vehicle environment. Trans-
portation Research Part C: Emerging Technologies. 2015;55.
[30] Wu J, Perronnet F, Abbas-Turki A. Cooperative vehicle-actuator system: a sequence-
based framework of cooperative intersections management. Intelligent Transport Systems,
IET. 2014;8(4):352–360.
[31] Kim KD, Kumar P. An MPC-Based Approach to Provable System-Wide Safety and
Liveness of Autonomous Ground Traﬃc. IEEE Transactions on Automatic Control. 2014;
59(12):3341–3356.
[32] Barth M, Boriboonsomsin K. Energy and emissions impacts of a freeway-based dynamic
eco-driving system. Transportation Research Part D: Transport and Environment. 2009;
14(6):400–410.
[33] Berry IM. The eﬀects of driving style and vehicle performance on the real-world fuel con-
sumption of us light-duty vehicles [dissertation]. Massachusetts Institute of Technology;
2010.
[34] Wu C, Zhao G, Ou B. A fuel economy optimization system with applications in vehicles
with human drivers and autonomous vehicles. Transportation Research Part D: Transport
and Environment. 2011;16(7):515–524.
[35] Zhao L, Malikopoulos AA, Rios-Torres J. Optimal control of connected and automated
vehicles at roundabouts: An investigation in a mixed-traﬃc environment. In: 15th IFAC
Symposium on Control in Transportation Systems; 2018. p. 73–78.
[36] Rios-Torres J, Malikopoulos AA. Impact of partial penetrations of connected and auto-
mated vehicles on fuel consumption and traﬃc ﬂow. IEEE Transactions on Intelligent
Vehicles. 2018;3(4):453–462.
[37] Zhong Z, Joyoung L, Zhao L. Evaluations of Managed Lane Strategies for Arterial De-
ployment of Cooperative Adaptive Cruise Control . In: TRB Annual Meeting; Washington
DC, USA; 2017.
[38] Rios-Torres J, Malikopoulos AA. A Survey on Coordination of Connected and Automated
Vehicles at Intersections and Merging at Highway On-Ramps. IEEE Transactions on
Intelligent Transportation Systems. 2017;18(5):1066–1077.
[39] Guanetti J, Kim Y, Borrelli F. Control of connected and automated vehicles: State of the
art and future challenges. Annual Reviews in Control. 2018;45:18–40.
[40] Wang Y, Li X, Yao H. Review of tra jectory optimisation for connected automated vehicles.
IET Intelligent Transport Systems. 2018;13:580–586.
[41] Paull L, Tani J, Ahn H, et al. Duckietown: An open, inexpensive and ﬂexible platform for
autonomy education and research. In: Proceedings of the IEEE International Conference
on Robotics and Automation; 2017. p. 1497–1504.
[42] Hyaldmar N, He Y, Porok A. A ﬂeet of miniature cars for experiments in cooperative driv-
ing. In: Proceedings of the IEEE International Conference on Robotics and Automation;
2019.
[43] Stager A, Bhan L, Malikopoulos A, et al. A Scaled Smart City for Experimental Validation

17

of Connected and Automated Vehicles. IFAC-PapersOnLine. 2018;51(9):130–135.
[44] Malikopoulos AA, Zhao L. Optimal path planning for connected and automated vehicles
at urban intersections. In: Proceedings of the 58th IEEE Conference on Decision and
Control; 2019 (to appear).
[45] Malikopoulos AA, Assanis DN, Papalambros PY. Optimal engine calibration for individ-
ual driving styles. In: SAE Proceedings, Technical Paper 2008-01-1367; 2008.
[46] Malikopoulos AA, Zhao L. A closed-form analytical solution for optimal coordination of
connected and automated vehicles. In: Proceedings of 2019 American Control Conference;
2019. p. 3599–3604.
[47] Wiedemann R. Simulation des strassenverkehrsﬂusses [dissertation]. Universit¨at Karl-
sruhe; 1974.
[48] Thrun S, Montemerlo M, Dahlkamp H, et al. Stanley: The robot that won the DARPA
Grand Challenge. Springer Tracts in Advanced Robotics. 2007;.
[49] Spong MW, Hutchinson S, Vidyasagar M. Robot Dynamics and Control Second Edition;
2004.
[50] Zhao L, Malikopoulos AA, Rios-Torres J. On the traﬃc impacts of optimally controlled
connected and automated vehicles. In: Proceedings of 2019 IEEE Conference on Control
Technology and Applications; 2019. p. 882–887.
[51] Zhao L, Mahbub AMI, Malikopoulos A. Optimal vehicle dynamics and powertrain control
for connected and automated vehicle. In: Proceedings of IEEE Conference on Control
Technology and Applications; 2019. p. 33–38.

18

